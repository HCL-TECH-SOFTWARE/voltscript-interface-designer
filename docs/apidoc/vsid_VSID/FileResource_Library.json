{"label":"FileResource","comment":"Created Mar 8, 2010 by Andre Guirard/Cambridge/IBM\n \t\t\nA library containing functions to read and write data from file resources and related design elements (images, xpages, ...).","valuetype":"","filenamebase":"FileResource_Library","fqnprefix":"VSID","qn":"FileResource","codesample":"","signaturecode":65536,"instancecode":65536,"description":"","codesamplehtml":"","scriptcreator":"Devin Olson","signature":"Library FileResource","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Created Mar 8, 2010 by Andre Guirard/Cambridge/IBM&lt;br /&gt; \t\t&lt;br /&gt;A library containing functions to read and write data from file resources and related design elements (images, xpages, ...).&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Created Mar 8, 2010 by Andre Guirard/Cambridge/IBM&lt;br /&gt; \t\t&lt;br /&gt;A library containing functions to read and write data from file resources and related design elements (images, xpages, ...).","inlinecomment":" \t &apos; Created Mar 8, 2010 by Andre Guirard/Cambridge/IBM\n \t\t\nA library containing functions to read and write data from file resources and related design elements (images, xpages, ...).", "classes":[{"classname":"FileItem","comment":"Represents a Notes item containing file data encoded as CD records in base64 format. \n\t\t\nThis is the representation used in &amp;quot;note format&amp;quot; DXL (which is also the fallback for design elements without a descriptive representation).","valuetype":"","filenamebase":"FileItem_ObjectClass","fqnprefix":"VSID.FileResource","qn":"FileItem","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","projectid":"3EF59CC821EBE72F85258AE2007313C7","classid":"CA4484932262E68385258AE200732C51","signature":"Public Class FileItem","modifiers":"Public","classname":"FileItem","parentclassname":"None","constructorsignature":"Public Sub New(parent As FileResource, elnote As NotesDOMElementNode, itemname As String)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Represents a Notes item containing file data encoded as CD records in base64 format. &lt;br /&gt;\t\t&lt;br /&gt;This is the representation used in &amp;quot;note format&amp;quot; DXL (which is also the fallback for design elements without a descriptive representation).&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Represents a Notes item containing file data encoded as CD records in base64 format. &lt;br /&gt;\t\t&lt;br /&gt;This is the representation used in &amp;quot;note format&amp;quot; DXL (which is also the fallback for design elements without a descriptive representation).","inlinecomment":" \t &apos; Represents a Notes item containing file data encoded as CD records in base64 format. \n\t\t\nThis is the representation used in &amp;quot;note format&amp;quot; DXL (which is also the fallback for design elements without a descriptive representation).","codesamplehtml":"", "methods":[{"label":"FindFileResource","comment":"Search a database for a design element of a given name and type (type being, for instance, &amp;quot;xpage&amp;quot; or &amp;quot;stylesheet&amp;quot;). \n\t\t\nThis is only suitable for design elements of the type that contain binary-encoded file data, which is usually but not always in an item named $FileData.\nNOTE: This has the same drawback as NotesDatabase.GetView and the like, in that if there are multiple design elements with the same name you will only find one of them.  It may be better to use NotesNoteCollection to locate the design elements yourself and call MakeFileResource instead.","valuetype":"FileResource","filenamebase":"FindFileResource_Method","fqnprefix":"VSID.FileResource.FileItem","qn":"FindFileResource","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Public Function FindFileResource() As FileResource","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Search a database for a design element of a given name and type (type being, for instance, &amp;quot;xpage&amp;quot; or &amp;quot;stylesheet&amp;quot;). &lt;br /&gt;\t\t&lt;br /&gt;This is only suitable for design elements of the type that contain binary-encoded file data, which is usually but not always in an item named $FileData.&lt;br /&gt;NOTE: This has the same drawback as NotesDatabase.GetView and the like, in that if there are multiple design elements with the same name you will only find one of them.  It may be better to use NotesNoteCollection to locate the design elements yourself and call MakeFileResource instead.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Search a database for a design element of a given name and type (type being, for instance, &amp;quot;xpage&amp;quot; or &amp;quot;stylesheet&amp;quot;). &lt;br /&gt;\t\t&lt;br /&gt;This is only suitable for design elements of the type that contain binary-encoded file data, which is usually but not always in an item named $FileData.&lt;br /&gt;NOTE: This has the same drawback as NotesDatabase.GetView and the like, in that if there are multiple design elements with the same name you will only find one of them.  It may be better to use NotesNoteCollection to locate the design elements yourself and call MakeFileResource instead.","inlinecomment":" \t &apos; Search a database for a design element of a given name and type (type being, for instance, &amp;quot;xpage&amp;quot; or &amp;quot;stylesheet&amp;quot;). \n\t\t\nThis is only suitable for design elements of the type that contain binary-encoded file data, which is usually but not always in an item named $FileData.\nNOTE: This has the same drawback as NotesDatabase.GetView and the like, in that if there are multiple design elements with the same name you will only find one of them.  It may be better to use NotesNoteCollection to locate the design elements yourself and call MakeFileResource instead.","parentclassname":"FileItem","codesamplehtml":"", "signatureelements":["Public","Function"]},{"label":"MakeFileResource","comment":"Given the NotesDocument handle of a design element (which you&amp;apos;ve probably found using NotesNoteCollection), creates a FileResource object representing that design element. Note this is only suitable for use with design elements of the &amp;quot;file resource&amp;quot; type.","valuetype":"FileResource","filenamebase":"MakeFileResource_Method","fqnprefix":"VSID.FileResource.FileItem","qn":"MakeFileResource","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(docDes As NotesDocument)","signature":"Public Function MakeFileResource(docDes As NotesDocument) As FileResource","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Given the NotesDocument handle of a design element (which you&amp;apos;ve probably found using NotesNoteCollection), creates a FileResource object representing that design element. Note this is only suitable for use with design elements of the &amp;quot;file resource&amp;quot; type.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Given the NotesDocument handle of a design element (which you&amp;apos;ve probably found using NotesNoteCollection), creates a FileResource object representing that design element. Note this is only suitable for use with design elements of the &amp;quot;file resource&amp;quot; type.","inlinecomment":" \t &apos; Given the NotesDocument handle of a design element (which you&amp;apos;ve probably found using NotesNoteCollection), creates a FileResource object representing that design element. Note this is only suitable for use with design elements of the &amp;quot;file resource&amp;quot; type.","parentclassname":"FileItem","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"docDes","comment":"Handle to the design element. ","valuetype":"NotesDocument","filenamebase":"docDes_ValuedElement","fqnprefix":"VSIDFileResourceFileItemMakeFileResource","qn":"docDes","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Handle to the design element. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Handle to the design element. ","inlinecomment":" \t &apos; Handle to the design element. "}]},{"label":"ItemName","comment":"Name of the item","valuetype":"String","filenamebase":"ItemName_Method","fqnprefix":"VSID.FileResource.FileItem","qn":"Get.ItemName","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get ItemName As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the item&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the item","inlinecomment":" \t &apos; Name of the item","parentclassname":"FileItem","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Load","comment":"Populate the Stream object with the decoded contents of the file.\n\t\t\t\nNote you can assign Stream first with your own object, if you want to store the result in a file. Note that nothing is said here about character set; you data are treated as binary. If you supply a stream that&amp;apos;s attached to a file, you can specify the character set when you open the file. \n\t\t\nOtherwise, if you need to read the contents as character data, see StreamToText function (not method!).\n\t\t\t\nIf you supply a stream, it will be truncated.","valuetype":"","filenamebase":"Load_Method","fqnprefix":"VSID.FileResource.FileItem","qn":"Load","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub Load()","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Populate the Stream object with the decoded contents of the file.&lt;br /&gt;\t\t\t&lt;br /&gt;Note you can assign Stream first with your own object, if you want to store the result in a file. Note that nothing is said here about character set; you data are treated as binary. If you supply a stream that&amp;apos;s attached to a file, you can specify the character set when you open the file. &lt;br /&gt;\t\t&lt;br /&gt;Otherwise, if you need to read the contents as character data, see StreamToText function (not method!).&lt;br /&gt;\t\t\t&lt;br /&gt;If you supply a stream, it will be truncated.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Populate the Stream object with the decoded contents of the file.&lt;br /&gt;\t\t\t&lt;br /&gt;Note you can assign Stream first with your own object, if you want to store the result in a file. Note that nothing is said here about character set; you data are treated as binary. If you supply a stream that&amp;apos;s attached to a file, you can specify the character set when you open the file. &lt;br /&gt;\t\t&lt;br /&gt;Otherwise, if you need to read the contents as character data, see StreamToText function (not method!).&lt;br /&gt;\t\t\t&lt;br /&gt;If you supply a stream, it will be truncated.","inlinecomment":" \t &apos; Populate the Stream object with the decoded contents of the file.\n\t\t\t\nNote you can assign Stream first with your own object, if you want to store the result in a file. Note that nothing is said here about character set; you data are treated as binary. If you supply a stream that&amp;apos;s attached to a file, you can specify the character set when you open the file. \n\t\t\nOtherwise, if you need to read the contents as character data, see StreamToText function (not method!).\n\t\t\t\nIf you supply a stream, it will be truncated.","parentclassname":"FileItem","codesamplehtml":"", "signatureelements":["Public","Sub"]},{"label":"New","comment":"Arguments are the parsed DOM node of the element representing a design element, and the name of the composite item you would like to read, modify or create.","valuetype":"","filenamebase":"New_Method","fqnprefix":"VSID.FileResource.FileItem","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(parent As FileResource, elnote As NotesDOMElementNode, itemname As String)","signature":"Public Sub New(parent As FileResource, elnote As NotesDOMElementNode, itemname As String)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Arguments are the parsed DOM node of the element representing a design element, and the name of the composite item you would like to read, modify or create.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Arguments are the parsed DOM node of the element representing a design element, and the name of the composite item you would like to read, modify or create.","inlinecomment":" \t &apos; Arguments are the parsed DOM node of the element representing a design element, and the name of the composite item you would like to read, modify or create.","parentclassname":"FileItem","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"parent","comment":"Parent File Resource for new File Item","valuetype":"FileResource","filenamebase":"parent_ValuedElement","fqnprefix":"VSIDFileResourceFileItemNew","qn":"parent","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Parent File Resource for new File Item&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Parent File Resource for new File Item","inlinecomment":" \t &apos; Parent File Resource for new File Item"},{"label":"elnote","comment":"Parsed DOM Node representing the design element. ","valuetype":"NotesDOMElementNode","filenamebase":"elnote_ValuedElement","fqnprefix":"VSIDFileResourceFileItemNew","qn":"elnote","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Parsed DOM Node representing the design element. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Parsed DOM Node representing the design element. ","inlinecomment":" \t &apos; Parsed DOM Node representing the design element. "},{"label":"itemname","comment":"Name of the item to read, modify, or create","valuetype":"String","filenamebase":"itemname_ValuedElement","fqnprefix":"VSIDFileResourceFileItemNew","qn":"itemname","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the item to read, modify, or create&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the item to read, modify, or create","inlinecomment":" \t &apos; Name of the item to read, modify, or create", "attributes":["ByVal"]}]},{"label":"UpdateFile","comment":"Take binary file data as input, and create or update the &amp;lt;item&amp;gt; element to store that data as CD records. The streamIn buffer must contain only the data to be written (current position in the stream is ignored).","valuetype":"","filenamebase":"UpdateFile_Method","fqnprefix":"VSID.FileResource.FileItem","qn":"UpdateFile","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(streamIn As NotesStream)","signature":"Public Sub UpdateFile(streamIn As NotesStream)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Take binary file data as input, and create or update the &amp;lt;item&amp;gt; element to store that data as CD records. The streamIn buffer must contain only the data to be written (current position in the stream is ignored).&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Take binary file data as input, and create or update the &amp;lt;item&amp;gt; element to store that data as CD records. The streamIn buffer must contain only the data to be written (current position in the stream is ignored).","inlinecomment":" \t &apos; Take binary file data as input, and create or update the &amp;lt;item&amp;gt; element to store that data as CD records. The streamIn buffer must contain only the data to be written (current position in the stream is ignored).","parentclassname":"FileItem","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"streamIn","comment":"Binary file data to be written. ","valuetype":"NotesStream","filenamebase":"streamIn_ValuedElement","fqnprefix":"VSIDFileResourceFileItemUpdateFile","qn":"streamIn","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Binary file data to be written. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Binary file data to be written. ","inlinecomment":" \t &apos; Binary file data to be written. "}]}], "variables":[]},{"classname":"FileResource","comment":"Represents a design element of the file-resource type or a relative, such as stylesheet or xpage. \n\t\t\nThe data are manipulated internally using DXL and DOM.\n\t\t\nThis class has no objection if you want to also manipulate the other items of the document, e.g. by using the DOMElement property to get the node representing the design element, then using the DOM to locate other items and attributes.\n\t\t\nHowever, please use this class and FileItem for manipulation of base-64 encoded file data items. ","valuetype":"","filenamebase":"FileResource_ObjectClass","fqnprefix":"VSID.FileResource","qn":"FileResource","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","projectid":"3EF59CC821EBE72F85258AE2007313C7","classid":"A1CF0755E52CBC4285258AE2007355C2","signature":"Public Class FileResource","modifiers":"Public","classname":"FileResource","parentclassname":"None","constructorsignature":"Public Sub New(db As NotesDatabase, elElement As NotesDOMDocumentNode, domp As NotesDOMParser)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Represents a design element of the file-resource type or a relative, such as stylesheet or xpage. &lt;br /&gt;\t\t&lt;br /&gt;The data are manipulated internally using DXL and DOM.&lt;br /&gt;\t\t&lt;br /&gt;This class has no objection if you want to also manipulate the other items of the document, e.g. by using the DOMElement property to get the node representing the design element, then using the DOM to locate other items and attributes.&lt;br /&gt;\t\t&lt;br /&gt;However, please use this class and FileItem for manipulation of base-64 encoded file data items. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Represents a design element of the file-resource type or a relative, such as stylesheet or xpage. &lt;br /&gt;\t\t&lt;br /&gt;The data are manipulated internally using DXL and DOM.&lt;br /&gt;\t\t&lt;br /&gt;This class has no objection if you want to also manipulate the other items of the document, e.g. by using the DOMElement property to get the node representing the design element, then using the DOM to locate other items and attributes.&lt;br /&gt;\t\t&lt;br /&gt;However, please use this class and FileItem for manipulation of base-64 encoded file data items. ","inlinecomment":" \t &apos; Represents a design element of the file-resource type or a relative, such as stylesheet or xpage. \n\t\t\nThe data are manipulated internally using DXL and DOM.\n\t\t\nThis class has no objection if you want to also manipulate the other items of the document, e.g. by using the DOMElement property to get the node representing the design element, then using the DOM to locate other items and attributes.\n\t\t\nHowever, please use this class and FileItem for manipulation of base-64 encoded file data items. ","codesamplehtml":"", "methods":[{"label":"GetFileItem","comment":"Retrieve the FileItem object associated with a CD-record item.\n\t\t\t\nAn object will be returned even if the item doesn&amp;apos;t exist, which you can use to create the item via UpdateFile method.\n\t\t\t\nUse this only for items other than the default $FileData item, which you can handle via ReadFileData and UpdateFileData methods.","valuetype":"FileItem","filenamebase":"GetFileItem_Method","fqnprefix":"VSID.FileResource.FileResource","qn":"GetFileItem","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(itemname As FileItem)","signature":"Public Function GetFileItem(itemname As FileItem) As FileItem","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Retrieve the FileItem object associated with a CD-record item.&lt;br /&gt;\t\t\t&lt;br /&gt;An object will be returned even if the item doesn&amp;apos;t exist, which you can use to create the item via UpdateFile method.&lt;br /&gt;\t\t\t&lt;br /&gt;Use this only for items other than the default $FileData item, which you can handle via ReadFileData and UpdateFileData methods.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Retrieve the FileItem object associated with a CD-record item.&lt;br /&gt;\t\t\t&lt;br /&gt;An object will be returned even if the item doesn&amp;apos;t exist, which you can use to create the item via UpdateFile method.&lt;br /&gt;\t\t\t&lt;br /&gt;Use this only for items other than the default $FileData item, which you can handle via ReadFileData and UpdateFileData methods.","inlinecomment":" \t &apos; Retrieve the FileItem object associated with a CD-record item.\n\t\t\t\nAn object will be returned even if the item doesn&amp;apos;t exist, which you can use to create the item via UpdateFile method.\n\t\t\t\nUse this only for items other than the default $FileData item, which you can handle via ReadFileData and UpdateFileData methods.","parentclassname":"FileResource","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"itemname","comment":"Name of the FileItem to retrieve","valuetype":"FileItem","filenamebase":"itemname_ValuedElement","fqnprefix":"VSIDFileResourceFileResourceGetFileItem","qn":"itemname","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the FileItem to retrieve&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the FileItem to retrieve","inlinecomment":" \t &apos; Name of the FileItem to retrieve"}]},{"label":"HasItem","comment":"Determine whether there&amp;apos;s an item element in the note DXL with a given item name.\n\t\t\t\nNote that the presence of an item doesn&amp;apos;t guarantee it&amp;apos;s formatted as a file CD record.","valuetype":"Boolean","filenamebase":"HasItem_Method","fqnprefix":"VSID.FileResource.FileResource","qn":"HasItem","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(itemName As String)","signature":"Public Function HasItem(itemName As String) As Boolean","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Determine whether there&amp;apos;s an item element in the note DXL with a given item name.&lt;br /&gt;\t\t\t&lt;br /&gt;Note that the presence of an item doesn&amp;apos;t guarantee it&amp;apos;s formatted as a file CD record.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Determine whether there&amp;apos;s an item element in the note DXL with a given item name.&lt;br /&gt;\t\t\t&lt;br /&gt;Note that the presence of an item doesn&amp;apos;t guarantee it&amp;apos;s formatted as a file CD record.","inlinecomment":" \t &apos; Determine whether there&amp;apos;s an item element in the note DXL with a given item name.\n\t\t\t\nNote that the presence of an item doesn&amp;apos;t guarantee it&amp;apos;s formatted as a file CD record.","parentclassname":"FileResource","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"itemName","comment":"Name of the item for which to check. ","valuetype":"String","filenamebase":"itemName_ValuedElement","fqnprefix":"VSIDFileResourceFileResourceHasItem","qn":"itemName","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the item for which to check. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the item for which to check. ","inlinecomment":" \t &apos; Name of the item for which to check. "}]},{"label":"Save","comment":"Save changes to disk by importing the (presumably modified) DOM tree.","valuetype":"Boolean","filenamebase":"Save_Method","fqnprefix":"VSID.FileResource.FileResource","qn":"Save","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Function Save() As Boolean","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Save changes to disk by importing the (presumably modified) DOM tree.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Save changes to disk by importing the (presumably modified) DOM tree.","inlinecomment":" \t &apos; Save changes to disk by importing the (presumably modified) DOM tree.","parentclassname":"FileResource","codesamplehtml":"", "signatureelements":["Public","Function"]},{"label":"DOMElement","comment":"Element node representing the design element.","valuetype":"NotesDOMElementNode","filenamebase":"DOMElement_Method","fqnprefix":"VSID.FileResource.FileResource","qn":"Get.DOMElement","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get DOMElement As NotesDOMElementNode","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Element node representing the design element.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Element node representing the design element.","inlinecomment":" \t &apos; Element node representing the design element.","parentclassname":"FileResource","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"DOMParser","comment":"DOM parser containing this design element description.","valuetype":"NotesDOMParser","filenamebase":"DOMParser_Method","fqnprefix":"VSID.FileResource.FileResource","qn":"Get.DOMParser","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get DOMParser As NotesDOMParser","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;DOM parser containing this design element description.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"DOM parser containing this design element description.","inlinecomment":" \t &apos; DOM parser containing this design element description.","parentclassname":"FileResource","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"MimeCharSet","comment":"Use this to read the $MimeCharSet item and discover what character set was used to encode the text file data (if it is text). \n\t\t\t\nNote some design elements don&amp;apos;t have this because it&amp;apos;s assumed based on the design element type.","valuetype":"String","filenamebase":"MimeCharSet_Method","fqnprefix":"VSID.FileResource.FileResource","qn":"Get.MimeCharSet","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get MimeCharSet As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Use this to read the $MimeCharSet item and discover what character set was used to encode the text file data (if it is text). &lt;br /&gt;\t\t\t&lt;br /&gt;Note some design elements don&amp;apos;t have this because it&amp;apos;s assumed based on the design element type.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Use this to read the $MimeCharSet item and discover what character set was used to encode the text file data (if it is text). &lt;br /&gt;\t\t\t&lt;br /&gt;Note some design elements don&amp;apos;t have this because it&amp;apos;s assumed based on the design element type.","inlinecomment":" \t &apos; Use this to read the $MimeCharSet item and discover what character set was used to encode the text file data (if it is text). \n\t\t\t\nNote some design elements don&amp;apos;t have this because it&amp;apos;s assumed based on the design element type.","parentclassname":"FileResource","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Delete","comment":"Destructor","valuetype":"","filenamebase":"Delete_Method","fqnprefix":"VSID.FileResource.FileResource","qn":"Delete","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub Delete()","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Destructor&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Destructor","inlinecomment":" \t &apos; Destructor","parentclassname":"FileResource","codesamplehtml":"", "signatureelements":["Public","Sub"]},{"label":"DeleteItem","comment":"Delete an item with a specified name from the note data.","valuetype":"","filenamebase":"DeleteItem_Method","fqnprefix":"VSID.FileResource.FileResource","qn":"DeleteItem","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(itemname As String)","signature":"Public Sub DeleteItem(itemname As String)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Delete an item with a specified name from the note data.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Delete an item with a specified name from the note data.","inlinecomment":" \t &apos; Delete an item with a specified name from the note data.","parentclassname":"FileResource","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"itemname","comment":"Name of the item to be deleted","valuetype":"String","filenamebase":"itemname_ValuedElement","fqnprefix":"VSIDFileResourceFileResourceDeleteItem","qn":"itemname","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the item to be deleted&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the item to be deleted","inlinecomment":" \t &apos; Name of the item to be deleted"}]},{"label":"New","comment":"Create a new FileResource.","valuetype":"","filenamebase":"New_Method","fqnprefix":"VSID.FileResource.FileResource","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(db As NotesDatabase, elElement As NotesDOMDocumentNode, domp As NotesDOMParser)","signature":"Public Sub New(db As NotesDatabase, elElement As NotesDOMDocumentNode, domp As NotesDOMParser)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Create a new FileResource.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Create a new FileResource.","inlinecomment":" \t &apos; Create a new FileResource.","parentclassname":"FileResource","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"db","comment":"database containing the design element.","valuetype":"NotesDatabase","filenamebase":"db_ValuedElement","fqnprefix":"VSIDFileResourceFileResourceNew","qn":"db","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;database containing the design element.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"database containing the design element.","inlinecomment":" \t &apos; database containing the design element."},{"label":"elElement","comment":"the DOM element corresponding to the design note (e.g. the &amp;lt;note&amp;gt; element).","valuetype":"NotesDOMDocumentNode","filenamebase":"elElement_ValuedElement","fqnprefix":"VSIDFileResourceFileResourceNew","qn":"elElement","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;the DOM element corresponding to the design note (e.g. the &amp;lt;note&amp;gt; element).&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"the DOM element corresponding to the design note (e.g. the &amp;lt;note&amp;gt; element).","inlinecomment":" \t &apos; the DOM element corresponding to the design note (e.g. the &amp;lt;note&amp;gt; element)."},{"label":"domp","comment":"The DOM parser object containing elElement.","valuetype":"NotesDOMParser","filenamebase":"domp_ValuedElement","fqnprefix":"VSIDFileResourceFileResourceNew","qn":"domp","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The DOM parser object containing elElement.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The DOM parser object containing elElement.","inlinecomment":" \t &apos; The DOM parser object containing elElement."}]},{"label":"ReadFileData","comment":"Read the file data from the design note. The caller provides a stream to read into, for ease of streaming directly into a disk file (since you have to open the file before writing to the stream).","valuetype":"","filenamebase":"ReadFileData_Method","fqnprefix":"VSID.FileResource.FileResource","qn":"ReadFileData","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(stream As NotesStream)","signature":"Public Sub ReadFileData(stream As NotesStream)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Read the file data from the design note. The caller provides a stream to read into, for ease of streaming directly into a disk file (since you have to open the file before writing to the stream).&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Read the file data from the design note. The caller provides a stream to read into, for ease of streaming directly into a disk file (since you have to open the file before writing to the stream).","inlinecomment":" \t &apos; Read the file data from the design note. The caller provides a stream to read into, for ease of streaming directly into a disk file (since you have to open the file before writing to the stream).","parentclassname":"FileResource","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"stream","comment":"Target stream for the file data","valuetype":"NotesStream","filenamebase":"stream_ValuedElement","fqnprefix":"VSIDFileResourceFileResourceReadFileData","qn":"stream","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Target stream for the file data&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Target stream for the file data","inlinecomment":" \t &apos; Target stream for the file data"}]},{"label":"RegisterFileItem","comment":"For internal use -- lets the FileItem class notify us that it&amp;apos;s referencing our DOM tree so that we can delete the object if we erase the corresponding item element.","valuetype":"","filenamebase":"RegisterFileItem_Method","fqnprefix":"VSID.FileResource.FileResource","qn":"RegisterFileItem","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(x As FileItem)","signature":"Public Sub RegisterFileItem(x As FileItem)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;For internal use -- lets the FileItem class notify us that it&amp;apos;s referencing our DOM tree so that we can delete the object if we erase the corresponding item element.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"For internal use -- lets the FileItem class notify us that it&amp;apos;s referencing our DOM tree so that we can delete the object if we erase the corresponding item element.","inlinecomment":" \t &apos; For internal use -- lets the FileItem class notify us that it&amp;apos;s referencing our DOM tree so that we can delete the object if we erase the corresponding item element.","parentclassname":"FileResource","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"x","comment":"FileItem objet to be registered. ","valuetype":"FileItem","filenamebase":"x_ValuedElement","fqnprefix":"VSIDFileResourceFileResourceRegisterFileItem","qn":"x","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;FileItem objet to be registered. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"FileItem objet to be registered. ","inlinecomment":" \t &apos; FileItem objet to be registered. "}]},{"label":"UpdateFileData","comment":"Take a binary data stream (it may contain text but we don&amp;apos;t care) and update the DOM representation of the note to store that as the filedata.\n\t\t\t\nThe data ends up stored in the $FileData item, whether this is represented via descriptive format with a &amp;lt;filedata&amp;gt; element, or in note format with an &amp;lt;item&amp;gt; element. We take our cue from whatever was in the DXL when we loaded it.","valuetype":"","filenamebase":"UpdateFileData_Method","fqnprefix":"VSID.FileResource.FileResource","qn":"UpdateFileData","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub UpdateFileData()","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Take a binary data stream (it may contain text but we don&amp;apos;t care) and update the DOM representation of the note to store that as the filedata.&lt;br /&gt;\t\t\t&lt;br /&gt;The data ends up stored in the $FileData item, whether this is represented via descriptive format with a &amp;lt;filedata&amp;gt; element, or in note format with an &amp;lt;item&amp;gt; element. We take our cue from whatever was in the DXL when we loaded it.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Take a binary data stream (it may contain text but we don&amp;apos;t care) and update the DOM representation of the note to store that as the filedata.&lt;br /&gt;\t\t\t&lt;br /&gt;The data ends up stored in the $FileData item, whether this is represented via descriptive format with a &amp;lt;filedata&amp;gt; element, or in note format with an &amp;lt;item&amp;gt; element. We take our cue from whatever was in the DXL when we loaded it.","inlinecomment":" \t &apos; Take a binary data stream (it may contain text but we don&amp;apos;t care) and update the DOM representation of the note to store that as the filedata.\n\t\t\t\nThe data ends up stored in the $FileData item, whether this is represented via descriptive format with a &amp;lt;filedata&amp;gt; element, or in note format with an &amp;lt;item&amp;gt; element. We take our cue from whatever was in the DXL when we loaded it.","parentclassname":"FileResource","codesamplehtml":"", "signatureelements":["Public","Sub"]}], "variables":[]}]}
