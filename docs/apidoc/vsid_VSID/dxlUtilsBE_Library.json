{"label":"dxlUtilsBE","comment":"Created Feb 2021 by Rocky Oliver/USA/PNPHCL\n\t \nThis library contains some generally useful functions for working with design elements, including obtaining and working with the DXL of a design element","valuetype":"","filenamebase":"dxlUtilsBE_Library","fqnprefix":"VSID","qn":"dxlUtilsBE","codesample":"","signaturecode":65536,"instancecode":65536,"description":"","codesamplehtml":"","scriptcreator":"Devin Olson","signature":"Library dxlUtilsBE","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Created Feb 2021 by Rocky Oliver/USA/PNPHCL&lt;br /&gt;\t &lt;br /&gt;This library contains some generally useful functions for working with design elements, including obtaining and working with the DXL of a design element&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Created Feb 2021 by Rocky Oliver/USA/PNPHCL&lt;br /&gt;\t &lt;br /&gt;This library contains some generally useful functions for working with design elements, including obtaining and working with the DXL of a design element","inlinecomment":" \t &apos; Created Feb 2021 by Rocky Oliver/USA/PNPHCL\n\t \nThis library contains some generally useful functions for working with design elements, including obtaining and working with the DXL of a design element", "methods":[{"label":"getAllElementsByName","comment":"Used to easily get a an array of all elements with the given type and name/alias.","valuetype":"NotesDocumentCollection","filenamebase":"getAllElementsByName_Method","fqnprefix":"VSID.dxlUtilsBE","qn":"getAllElementsByName","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(db As NotesDatabase, etype As String, ename As String)","signature":"Public Function getAllElementsByName(db As NotesDatabase, etype As String, ename As String) As NotesDocumentCollection","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Used to easily get a an array of all elements with the given type and name/alias.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Used to easily get a an array of all elements with the given type and name/alias.","inlinecomment":" \t &apos; Used to easily get a an array of all elements with the given type and name/alias.","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"db","comment":"database containing the desired design element","valuetype":"NotesDatabase","filenamebase":"db_ValuedElement","fqnprefix":"VSIDdxlUtilsBEgetAllElementsByName","qn":"db","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;database containing the desired design element&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"database containing the desired design element","inlinecomment":" \t &apos; database containing the desired design element"},{"label":"etype","comment":"the type of the desired design element - form or subform, etc.","valuetype":"String","filenamebase":"etype_ValuedElement","fqnprefix":"VSIDdxlUtilsBEgetAllElementsByName","qn":"etype","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;the type of the desired design element - form or subform, etc.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"the type of the desired design element - form or subform, etc.","inlinecomment":" \t &apos; the type of the desired design element - form or subform, etc."},{"label":"ename","comment":"the name of the desired design element","valuetype":"String","filenamebase":"ename_ValuedElement","fqnprefix":"VSIDdxlUtilsBEgetAllElementsByName","qn":"ename","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;the name of the desired design element&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"the name of the desired design element","inlinecomment":" \t &apos; the name of the desired design element"}]},{"label":"getElementDXL","comment":"Gets the DXL for all requested elements","valuetype":"NotesDOMParser","filenamebase":"getElementDXL_Method","fqnprefix":"VSID.dxlUtilsBE","qn":"getElementDXL","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(db As NotesDatabase, etype As String, formname As String, bkupkey As String, oldnote As NotesDocument)","signature":"Public Function getElementDXL(db As NotesDatabase, etype As String, formname As String, bkupkey As String, oldnote As NotesDocument) As NotesDOMParser","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets the DXL for all requested elements&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets the DXL for all requested elements","inlinecomment":" \t &apos; Gets the DXL for all requested elements","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"db","comment":"Database from which to get the element DXL","valuetype":"NotesDatabase","filenamebase":"db_ValuedElement","fqnprefix":"VSIDdxlUtilsBEgetElementDXL","qn":"db","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Database from which to get the element DXL&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Database from which to get the element DXL","inlinecomment":" \t &apos; Database from which to get the element DXL"},{"label":"etype","comment":"the type of the desired design element - form or subform, etc.","valuetype":"String","filenamebase":"etype_ValuedElement","fqnprefix":"VSIDdxlUtilsBEgetElementDXL","qn":"etype","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;the type of the desired design element - form or subform, etc.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"the type of the desired design element - form or subform, etc.","inlinecomment":" \t &apos; the type of the desired design element - form or subform, etc."},{"label":"formname","comment":"Name of the form or subform to retrieve","valuetype":"String","filenamebase":"formname_ValuedElement","fqnprefix":"VSIDdxlUtilsBEgetElementDXL","qn":"formname","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the form or subform to retrieve&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the form or subform to retrieve","inlinecomment":" \t &apos; Name of the form or subform to retrieve"},{"label":"bkupkey","comment":"key identifying a backup document to be copied (optional) ","valuetype":"String","filenamebase":"bkupkey_ValuedElement","fqnprefix":"VSIDdxlUtilsBEgetElementDXL","qn":"bkupkey","argumentindex":4,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;key identifying a backup document to be copied (optional) &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"key identifying a backup document to be copied (optional) ","inlinecomment":" \t &apos; key identifying a backup document to be copied (optional) "},{"label":"oldnote","comment":"[OUTBOUND] newly created backup document.","valuetype":"NotesDocument","filenamebase":"oldnote_ValuedElement","fqnprefix":"VSIDdxlUtilsBEgetElementDXL","qn":"oldnote","argumentindex":5,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;[OUTBOUND] newly created backup document.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"[OUTBOUND] newly created backup document.","inlinecomment":" \t &apos; [OUTBOUND] newly created backup document."}]},{"label":"getElementDXLByNoteID","comment":"Gets the DXL for all requested elements","valuetype":"NotesDOMParser","filenamebase":"getElementDXLByNoteID_Method","fqnprefix":"VSID.dxlUtilsBE","qn":"getElementDXLByNoteID","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(db As NotesDatabase, noteid As String, bkupkey As String, oldnote As NotesDocument)","signature":"Public Function getElementDXLByNoteID(db As NotesDatabase, noteid As String, bkupkey As String, oldnote As NotesDocument) As NotesDOMParser","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets the DXL for all requested elements&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets the DXL for all requested elements","inlinecomment":" \t &apos; Gets the DXL for all requested elements","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"db","comment":"Database from which to get the element DXL","valuetype":"NotesDatabase","filenamebase":"db_ValuedElement","fqnprefix":"VSIDdxlUtilsBEgetElementDXLByNoteID","qn":"db","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Database from which to get the element DXL&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Database from which to get the element DXL","inlinecomment":" \t &apos; Database from which to get the element DXL"},{"label":"noteid","comment":"NoteID of the design element to retrive ","valuetype":"String","filenamebase":"noteid_ValuedElement","fqnprefix":"VSIDdxlUtilsBEgetElementDXLByNoteID","qn":"noteid","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;NoteID of the design element to retrive &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"NoteID of the design element to retrive ","inlinecomment":" \t &apos; NoteID of the design element to retrive "},{"label":"bkupkey","comment":"key identifying a backup document to be copied (optional) ","valuetype":"String","filenamebase":"bkupkey_ValuedElement","fqnprefix":"VSIDdxlUtilsBEgetElementDXLByNoteID","qn":"bkupkey","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;key identifying a backup document to be copied (optional) &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"key identifying a backup document to be copied (optional) ","inlinecomment":" \t &apos; key identifying a backup document to be copied (optional) "},{"label":"oldnote","comment":"[OUTBOUND] newly created backup document.","valuetype":"NotesDocument","filenamebase":"oldnote_ValuedElement","fqnprefix":"VSIDdxlUtilsBEgetElementDXLByNoteID","qn":"oldnote","argumentindex":4,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;[OUTBOUND] newly created backup document.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"[OUTBOUND] newly created backup document.","inlinecomment":" \t &apos; [OUTBOUND] newly created backup document."}]},{"label":"getElementHandle","comment":"used to easily get a handle to a design element.","valuetype":"NotesDocument","filenamebase":"getElementHandle_Method","fqnprefix":"VSID.dxlUtilsBE","qn":"getElementHandle","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(db As NotesDatabase, etype As String, ename As String)","signature":"Public Function getElementHandle(db As NotesDatabase, etype As String, ename As String) As NotesDocument","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;used to easily get a handle to a design element.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"used to easily get a handle to a design element.","inlinecomment":" \t &apos; used to easily get a handle to a design element.","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"db","comment":"database containing the desired design element","valuetype":"NotesDatabase","filenamebase":"db_ValuedElement","fqnprefix":"VSIDdxlUtilsBEgetElementHandle","qn":"db","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;database containing the desired design element&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"database containing the desired design element","inlinecomment":" \t &apos; database containing the desired design element"},{"label":"etype","comment":"the type of the desired design element - form or subform, etc.","valuetype":"String","filenamebase":"etype_ValuedElement","fqnprefix":"VSIDdxlUtilsBEgetElementHandle","qn":"etype","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;the type of the desired design element - form or subform, etc.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"the type of the desired design element - form or subform, etc.","inlinecomment":" \t &apos; the type of the desired design element - form or subform, etc."},{"label":"ename","comment":"the name of the desired design element","valuetype":"String","filenamebase":"ename_ValuedElement","fqnprefix":"VSIDdxlUtilsBEgetElementHandle","qn":"ename","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;the name of the desired design element&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"the name of the desired design element","inlinecomment":" \t &apos; the name of the desired design element"}]},{"label":"getElementNames","comment":"This function returns the name of the given design element in the name param, and the alias(es) of the element in the aliases array\n\t\nNOTE: this function is used by getElementHandle() in this script lib","valuetype":"Boolean","filenamebase":"getElementNames_Method","fqnprefix":"VSID.dxlUtilsBE","qn":"getElementNames","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(dnote As NotesDocument, elementName As String, aliases As Variant)","signature":"Public Function getElementNames(dnote As NotesDocument, elementName As String, aliases As Variant) As Boolean","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;This function returns the name of the given design element in the name param, and the alias(es) of the element in the aliases array&lt;br /&gt;\t&lt;br /&gt;NOTE: this function is used by getElementHandle() in this script lib&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"This function returns the name of the given design element in the name param, and the alias(es) of the element in the aliases array&lt;br /&gt;\t&lt;br /&gt;NOTE: this function is used by getElementHandle() in this script lib","inlinecomment":" \t &apos; This function returns the name of the given design element in the name param, and the alias(es) of the element in the aliases array\n\t\nNOTE: this function is used by getElementHandle() in this script lib","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"dnote","comment":"object handle to the design note","valuetype":"NotesDocument","filenamebase":"dnote_ValuedElement","fqnprefix":"VSIDdxlUtilsBEgetElementNames","qn":"dnote","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;object handle to the design note&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"object handle to the design note","inlinecomment":" \t &apos; object handle to the design note"},{"label":"elementName","comment":"[OUTBOUND] main title/name of the element is retunred on this param","valuetype":"String","filenamebase":"elementName_ValuedElement","fqnprefix":"VSIDdxlUtilsBEgetElementNames","qn":"elementName","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;[OUTBOUND] main title/name of the element is retunred on this param&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"[OUTBOUND] main title/name of the element is retunred on this param","inlinecomment":" \t &apos; [OUTBOUND] main title/name of the element is retunred on this param"},{"label":"aliases","comment":"[OUTBOUND] array of aliases (minus elementName) is returned on this param","valuetype":"Variant","filenamebase":"aliases_ValuedElement","fqnprefix":"VSIDdxlUtilsBEgetElementNames","qn":"aliases","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;[OUTBOUND] array of aliases (minus elementName) is returned on this param&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"[OUTBOUND] array of aliases (minus elementName) is returned on this param","inlinecomment":" \t &apos; [OUTBOUND] array of aliases (minus elementName) is returned on this param"}]},{"label":"getElementNoteIDsByName","comment":"sed to easily get a an array of all elements with the given type and name/alias.","valuetype":"Variant","filenamebase":"getElementNoteIDsByName_Method","fqnprefix":"VSID.dxlUtilsBE","qn":"getElementNoteIDsByName","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(db As NotesDatabase, etype As String, ename As String)","signature":"Public Function getElementNoteIDsByName(db As NotesDatabase, etype As String, ename As String) As Variant","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;sed to easily get a an array of all elements with the given type and name/alias.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"sed to easily get a an array of all elements with the given type and name/alias.","inlinecomment":" \t &apos; sed to easily get a an array of all elements with the given type and name/alias.","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"db","comment":"database containing the desired design element","valuetype":"NotesDatabase","filenamebase":"db_ValuedElement","fqnprefix":"VSIDdxlUtilsBEgetElementNoteIDsByName","qn":"db","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;database containing the desired design element&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"database containing the desired design element","inlinecomment":" \t &apos; database containing the desired design element"},{"label":"etype","comment":"the type of the desired design element - form or subform, etc.","valuetype":"String","filenamebase":"etype_ValuedElement","fqnprefix":"VSIDdxlUtilsBEgetElementNoteIDsByName","qn":"etype","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;the type of the desired design element - form or subform, etc.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"the type of the desired design element - form or subform, etc.","inlinecomment":" \t &apos; the type of the desired design element - form or subform, etc."},{"label":"ename","comment":"the name of the desired design element","valuetype":"String","filenamebase":"ename_ValuedElement","fqnprefix":"VSIDdxlUtilsBEgetElementNoteIDsByName","qn":"ename","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;the name of the desired design element&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"the name of the desired design element","inlinecomment":" \t &apos; the name of the desired design element"}]},{"label":"getElementType","comment":"This function returns the type of a design element by interpreting the $flags field of the element","valuetype":"String","filenamebase":"getElementType_Method","fqnprefix":"VSID.dxlUtilsBE","qn":"getElementType","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(eldoc As NotesDocument)","signature":"Public Function getElementType(eldoc As NotesDocument) As String","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;This function returns the type of a design element by interpreting the $flags field of the element&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"This function returns the type of a design element by interpreting the $flags field of the element","inlinecomment":" \t &apos; This function returns the type of a design element by interpreting the $flags field of the element","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"eldoc","comment":"object handle to the design note","valuetype":"NotesDocument","filenamebase":"eldoc_ValuedElement","fqnprefix":"VSIDdxlUtilsBEgetElementType","qn":"eldoc","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;object handle to the design note&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"object handle to the design note","inlinecomment":" \t &apos; object handle to the design note"}]},{"label":"importDXL","comment":"This function is used to import an XML file containing DXL into a database. \n   \nThe XML file can contain DXL for a design element, a document, or the database ACL","valuetype":"Boolean","filenamebase":"importDXL_Method","fqnprefix":"VSID.dxlUtilsBE","qn":"importDXL","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(tgtDb As NotesDatabase, dxlfile As String, desFlg As Boolean, docFlg As Boolean, aclFlg As Boolean, signFlg As Boolean)","signature":"Public Function importDXL(tgtDb As NotesDatabase, dxlfile As String, desFlg As Boolean, docFlg As Boolean, aclFlg As Boolean, signFlg As Boolean) As Boolean","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;This function is used to import an XML file containing DXL into a database. &lt;br /&gt;   &lt;br /&gt;The XML file can contain DXL for a design element, a document, or the database ACL&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"This function is used to import an XML file containing DXL into a database. &lt;br /&gt;   &lt;br /&gt;The XML file can contain DXL for a design element, a document, or the database ACL","inlinecomment":" \t &apos; This function is used to import an XML file containing DXL into a database. \n   \nThe XML file can contain DXL for a design element, a document, or the database ACL","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"tgtDb","comment":"the target database for the imported DXL","valuetype":"NotesDatabase","filenamebase":"tgtDb_ValuedElement","fqnprefix":"VSIDdxlUtilsBEimportDXL","qn":"tgtDb","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;the target database for the imported DXL&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"the target database for the imported DXL","inlinecomment":" \t &apos; the target database for the imported DXL"},{"label":"dxlfile","comment":"the filepath to the file XML file containing the DXL to be imported","valuetype":"String","filenamebase":"dxlfile_ValuedElement","fqnprefix":"VSIDdxlUtilsBEimportDXL","qn":"dxlfile","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;the filepath to the file XML file containing the DXL to be imported&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"the filepath to the file XML file containing the DXL to be imported","inlinecomment":" \t &apos; the filepath to the file XML file containing the DXL to be imported"},{"label":"desFlg","comment":"used to set the replace flag for design elements","valuetype":"Boolean","filenamebase":"desFlg_ValuedElement","fqnprefix":"VSIDdxlUtilsBEimportDXL","qn":"desFlg","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;used to set the replace flag for design elements&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"used to set the replace flag for design elements","inlinecomment":" \t &apos; used to set the replace flag for design elements"},{"label":"docFlg","comment":"used to set the replace flag for doc elements","valuetype":"Boolean","filenamebase":"docFlg_ValuedElement","fqnprefix":"VSIDdxlUtilsBEimportDXL","qn":"docFlg","argumentindex":4,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;used to set the replace flag for doc elements&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"used to set the replace flag for doc elements","inlinecomment":" \t &apos; used to set the replace flag for doc elements"},{"label":"aclFlg","comment":"used to set the replace flag for ACL elements","valuetype":"Boolean","filenamebase":"aclFlg_ValuedElement","fqnprefix":"VSIDdxlUtilsBEimportDXL","qn":"aclFlg","argumentindex":5,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;used to set the replace flag for ACL elements&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"used to set the replace flag for ACL elements","inlinecomment":" \t &apos; used to set the replace flag for ACL elements"},{"label":"signFlg","comment":"if set to True, then the database is signed. \n   \nWARNING: This can be an expensive setting!","valuetype":"Boolean","filenamebase":"signFlg_ValuedElement","fqnprefix":"VSIDdxlUtilsBEimportDXL","qn":"signFlg","argumentindex":6,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;if set to True, then the database is signed. &lt;br /&gt;   &lt;br /&gt;WARNING: This can be an expensive setting!&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"if set to True, then the database is signed. &lt;br /&gt;   &lt;br /&gt;WARNING: This can be an expensive setting!","inlinecomment":" \t &apos; if set to True, then the database is signed. \n   \nWARNING: This can be an expensive setting!"}]},{"label":"importDXLStream","comment":"This function is used to import an XML stream containing DXL into a database. \n   \nThe XML stream can contain DXL for a design element, a document, or the database ACL","valuetype":"Boolean","filenamebase":"importDXLStream_Method","fqnprefix":"VSID.dxlUtilsBE","qn":"importDXLStream","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(tgtDb As NotesDatabase, dxlStream As NotesStream, desFlg As Boolean, docFlg As Boolean, aclFlg As Boolean, signFlg As Boolean)","signature":"Public Function importDXLStream(tgtDb As NotesDatabase, dxlStream As NotesStream, desFlg As Boolean, docFlg As Boolean, aclFlg As Boolean, signFlg As Boolean) As Boolean","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;This function is used to import an XML stream containing DXL into a database. &lt;br /&gt;   &lt;br /&gt;The XML stream can contain DXL for a design element, a document, or the database ACL&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"This function is used to import an XML stream containing DXL into a database. &lt;br /&gt;   &lt;br /&gt;The XML stream can contain DXL for a design element, a document, or the database ACL","inlinecomment":" \t &apos; This function is used to import an XML stream containing DXL into a database. \n   \nThe XML stream can contain DXL for a design element, a document, or the database ACL","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"tgtDb","comment":"the target database for the imported DXL","valuetype":"NotesDatabase","filenamebase":"tgtDb_ValuedElement","fqnprefix":"VSIDdxlUtilsBEimportDXLStream","qn":"tgtDb","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;the target database for the imported DXL&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"the target database for the imported DXL","inlinecomment":" \t &apos; the target database for the imported DXL"},{"label":"dxlStream","comment":"the filepath to the file XML file containing the DXL to be imported","valuetype":"NotesStream","filenamebase":"dxlStream_ValuedElement","fqnprefix":"VSIDdxlUtilsBEimportDXLStream","qn":"dxlStream","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;the filepath to the file XML file containing the DXL to be imported&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"the filepath to the file XML file containing the DXL to be imported","inlinecomment":" \t &apos; the filepath to the file XML file containing the DXL to be imported"},{"label":"desFlg","comment":"used to set the replace flag for design elements","valuetype":"Boolean","filenamebase":"desFlg_ValuedElement","fqnprefix":"VSIDdxlUtilsBEimportDXLStream","qn":"desFlg","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;used to set the replace flag for design elements&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"used to set the replace flag for design elements","inlinecomment":" \t &apos; used to set the replace flag for design elements"},{"label":"docFlg","comment":"used to set the replace flag for doc elements","valuetype":"Boolean","filenamebase":"docFlg_ValuedElement","fqnprefix":"VSIDdxlUtilsBEimportDXLStream","qn":"docFlg","argumentindex":4,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;used to set the replace flag for doc elements&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"used to set the replace flag for doc elements","inlinecomment":" \t &apos; used to set the replace flag for doc elements"},{"label":"aclFlg","comment":"used to set the replace flag for ACL elements","valuetype":"Boolean","filenamebase":"aclFlg_ValuedElement","fqnprefix":"VSIDdxlUtilsBEimportDXLStream","qn":"aclFlg","argumentindex":5,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;used to set the replace flag for ACL elements&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"used to set the replace flag for ACL elements","inlinecomment":" \t &apos; used to set the replace flag for ACL elements"},{"label":"signFlg","comment":"if set to True, then the database is signed. \n   \nWARNING: This can be an expensive setting!","valuetype":"Boolean","filenamebase":"signFlg_ValuedElement","fqnprefix":"VSIDdxlUtilsBEimportDXLStream","qn":"signFlg","argumentindex":6,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;if set to True, then the database is signed. &lt;br /&gt;   &lt;br /&gt;WARNING: This can be an expensive setting!&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"if set to True, then the database is signed. &lt;br /&gt;   &lt;br /&gt;WARNING: This can be an expensive setting!","inlinecomment":" \t &apos; if set to True, then the database is signed. \n   \nWARNING: This can be an expensive setting!"}]}]}
