{"label":"BSXdocumentationUtils","comment":"Created Jun 2022 by Devin Olson/USA/PNPHCL\n\tBaliSX Documentation Utilities","valuetype":"","filenamebase":"BSXdocumentationUtils_Library","fqnprefix":"VSID","qn":"BSXdocumentationUtils","codesample":"","signaturecode":65536,"instancecode":65536,"description":"","codesamplehtml":"","scriptcreator":"Devin Olson","signature":"Library BSXdocumentationUtils","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Created Jun 2022 by Devin Olson/USA/PNPHCL&lt;br /&gt;\tBaliSX Documentation Utilities&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Created Jun 2022 by Devin Olson/USA/PNPHCL&lt;br /&gt;\tBaliSX Documentation Utilities","inlinecomment":" \t &apos; Created Jun 2022 by Devin Olson/USA/PNPHCL\n\tBaliSX Documentation Utilities", "constants":[{"label":"SIGNATURE_VALUE_SET","comment":"","valuetype":"","filenamebase":"SIGNATUREVALUESET_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"SIGNATUREVALUESET","codesample":"","signaturecode":2056,"instancecode":8,"value":4,"f_returnsobject":0,"signature":"Public Const SIGNATURE_VALUE_SET = 4","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"SIGNATURE_VALUE_GET","comment":"","valuetype":"","filenamebase":"SIGNATUREVALUEGET_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"SIGNATUREVALUEGET","codesample":"","signaturecode":2056,"instancecode":8,"value":2,"f_returnsobject":0,"signature":"Public Const SIGNATURE_VALUE_GET = 2","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"SIGNATURE_VALUE_CONST","comment":"","valuetype":"","filenamebase":"SIGNATUREVALUECONST_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"SIGNATUREVALUECONST","codesample":"","signaturecode":2056,"instancecode":8,"value":8,"f_returnsobject":0,"signature":"Public Const SIGNATURE_VALUE_CONST = 8","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"SIGNATURE_VALUE_VARIABLE","comment":"","valuetype":"","filenamebase":"SIGNATUREVALUEVARIABLE_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"SIGNATUREVALUEVARIABLE","codesample":"","signaturecode":2056,"instancecode":8,"value":16,"f_returnsobject":0,"signature":"Public Const SIGNATURE_VALUE_VARIABLE = 16","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"SIGNATURE_VALUE_EVENT","comment":"","valuetype":"","filenamebase":"SIGNATUREVALUEEVENT_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"SIGNATUREVALUEEVENT","codesample":"","signaturecode":2056,"instancecode":8,"value":128,"f_returnsobject":0,"signature":"Public Const SIGNATURE_VALUE_EVENT = 128","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"SIGNATURE_VALUE_PROPERTY","comment":"","valuetype":"","filenamebase":"SIGNATUREVALUEPROPERTY_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"SIGNATUREVALUEPROPERTY","codesample":"","signaturecode":2056,"instancecode":8,"value":256,"f_returnsobject":0,"signature":"Public Const SIGNATURE_VALUE_PROPERTY = 256","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"SIGNATURE_VALUE_SUB","comment":"","valuetype":"","filenamebase":"SIGNATUREVALUESUB_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"SIGNATUREVALUESUB","codesample":"","signaturecode":2056,"instancecode":8,"value":32,"f_returnsobject":0,"signature":"Public Const SIGNATURE_VALUE_SUB = 32","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"SIGNATURE_VALUE_TYPE","comment":"","valuetype":"","filenamebase":"SIGNATUREVALUETYPE_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"SIGNATUREVALUETYPE","codesample":"","signaturecode":2056,"instancecode":8,"value":512,"f_returnsobject":0,"signature":"Public Const SIGNATURE_VALUE_TYPE = 512","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"SIGNATURE_VALUE_CLASS","comment":"","valuetype":"","filenamebase":"SIGNATUREVALUECLASS_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"SIGNATUREVALUECLASS","codesample":"","signaturecode":2056,"instancecode":8,"value":1024,"f_returnsobject":0,"signature":"Public Const SIGNATURE_VALUE_CLASS = 1024","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"SIGNATURE_VALUE_VSE","comment":"","valuetype":"","filenamebase":"SIGNATUREVALUEVSE_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"SIGNATUREVALUEVSE","codesample":"","signaturecode":2056,"instancecode":8,"value":32768,"f_returnsobject":0,"signature":"Public Const SIGNATURE_VALUE_VSE = 32768","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"SIGNATURE_VALUE_FUNCTION","comment":"","valuetype":"","filenamebase":"SIGNATUREVALUEFUNCTION_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"SIGNATUREVALUEFUNCTION","codesample":"","signaturecode":2056,"instancecode":8,"value":64,"f_returnsobject":0,"signature":"Public Const SIGNATURE_VALUE_FUNCTION = 64","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"SIGNATURE_VALUE_PUBLIC","comment":"","valuetype":"","filenamebase":"SIGNATUREVALUEPUBLIC_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"SIGNATUREVALUEPUBLIC","codesample":"","signaturecode":2056,"instancecode":8,"value":2048,"f_returnsobject":0,"signature":"Public Const SIGNATURE_VALUE_PUBLIC = 2048","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"SIGNATURE_VALUE_PRIVATE","comment":"","valuetype":"","filenamebase":"SIGNATUREVALUEPRIVATE_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"SIGNATUREVALUEPRIVATE","codesample":"","signaturecode":2056,"instancecode":8,"value":4096,"f_returnsobject":0,"signature":"Public Const SIGNATURE_VALUE_PRIVATE = 4096","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"SIGNATURE_VALUE_STATIC","comment":"","valuetype":"","filenamebase":"SIGNATUREVALUESTATIC_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"SIGNATUREVALUESTATIC","codesample":"","signaturecode":2056,"instancecode":8,"value":8192,"f_returnsobject":0,"signature":"Public Const SIGNATURE_VALUE_STATIC = 8192","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"SIGNATURE_VALUE_FINAL","comment":"","valuetype":"","filenamebase":"SIGNATUREVALUEFINAL_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"SIGNATUREVALUEFINAL","codesample":"","signaturecode":2056,"instancecode":8,"value":16384,"f_returnsobject":0,"signature":"Public Const SIGNATURE_VALUE_FINAL = 16384","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"SIGNATURE_VALUE_LIBRARY","comment":"","valuetype":"","filenamebase":"SIGNATUREVALUELIBRARY_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"SIGNATUREVALUELIBRARY","codesample":"","signaturecode":2056,"instancecode":8,"value":65536,"f_returnsobject":0,"signature":"Public Const SIGNATURE_VALUE_LIBRARY = 65536","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"SIGNATURE_VALUE_REMARK","comment":"","valuetype":"","filenamebase":"SIGNATUREVALUEREMARK_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"SIGNATUREVALUEREMARK","codesample":"","signaturecode":2056,"instancecode":8,"value":1,"f_returnsobject":0,"signature":"Public Const SIGNATURE_VALUE_REMARK = 1","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"SIGNATURE_VALUE_VSID","comment":"","valuetype":"","filenamebase":"SIGNATUREVALUEVSID_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"SIGNATUREVALUEVSID","codesample":"","signaturecode":2056,"instancecode":8,"value":131072,"f_returnsobject":0,"signature":"Public Const SIGNATURE_VALUE_VSID = 131072","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"ERR_INVALID_SIGNATURE_CODE","comment":"","valuetype":"","filenamebase":"ERRINVALIDSIGNATURECODE_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"ERRINVALIDSIGNATURECODE","codesample":"","signaturecode":2056,"instancecode":8,"value":1195,"f_returnsobject":0,"signature":"Public Const ERR_INVALID_SIGNATURE_CODE = 1195","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"MSG_INVALID_SIGNATURE_CODE","comment":"","valuetype":"","filenamebase":"MSGINVALIDSIGNATURECODE_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"MSGINVALIDSIGNATURECODE","codesample":"","signaturecode":2056,"instancecode":8,"value":"|The specified Signature code is invalid or resolves to conflicting Library, Class, Property, Method, or Modifier types. |","f_returnsobject":0,"signature":"Public Const MSG_INVALID_SIGNATURE_CODE = |The specified Signature code is invalid or resolves to conflicting Library, Class, Property, Method, or Modifier types. |","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"FOLDERNAME_RESOURCES","comment":"","valuetype":"","filenamebase":"FOLDERNAMERESOURCES_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"FOLDERNAMERESOURCES","codesample":"","signaturecode":2056,"instancecode":8,"value":"|resources|","f_returnsobject":0,"signature":"Public Const FOLDERNAME_RESOURCES = |resources|","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"FOLDERNAME_APIDOC","comment":"","valuetype":"","filenamebase":"FOLDERNAMEAPIDOC_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"FOLDERNAMEAPIDOC","codesample":"","signaturecode":2056,"instancecode":8,"value":"|apidoc|","f_returnsobject":0,"signature":"Public Const FOLDERNAME_APIDOC = |apidoc|","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"FOLDERNAME_SCRIPT","comment":"","valuetype":"","filenamebase":"FOLDERNAMESCRIPT_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"FOLDERNAMESCRIPT","codesample":"","signaturecode":2056,"instancecode":8,"value":"|src|","f_returnsobject":0,"signature":"Public Const FOLDERNAME_SCRIPT = |src|","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"APIDOC_VERSION","comment":"","valuetype":"","filenamebase":"APIDOCVERSION_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"APIDOCVERSION","codesample":"","signaturecode":2056,"instancecode":8,"value":"|1.0.0|","f_returnsobject":0,"signature":"Public Const APIDOC_VERSION = |1.0.0|","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"FRAMENAME_VSID","comment":"","valuetype":"","filenamebase":"FRAMENAMEVSID_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"FRAMENAMEVSID","codesample":"","signaturecode":2056,"instancecode":8,"value":"|vsidFrame|","f_returnsobject":0,"signature":"Public Const FRAMENAME_VSID = |vsidFrame|","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"FRAMENAME_VSIDLIST","comment":"","valuetype":"","filenamebase":"FRAMENAMEVSIDLIST_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"FRAMENAMEVSIDLIST","codesample":"","signaturecode":2056,"instancecode":8,"value":"|vsidListFrame|","f_returnsobject":0,"signature":"Public Const FRAMENAME_VSIDLIST = |vsidListFrame|","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"FRAMENAME_CONTENT","comment":"","valuetype":"","filenamebase":"FRAMENAMECONTENT_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"FRAMENAMECONTENT","codesample":"","signaturecode":2056,"instancecode":8,"value":"|contentFrame|","f_returnsobject":0,"signature":"Public Const FRAMENAME_CONTENT = |contentFrame|","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"SUMMARY_ROW_HEADER_DEFAULT","comment":"","valuetype":"","filenamebase":"SUMMARYROWHEADERDEFAULT_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"SUMMARYROWHEADERDEFAULT","codesample":"","signaturecode":2056,"instancecode":8,"value":"|&amp;lt;tr&amp;gt;&amp;lt;th class=&amp;quot;colFirst&amp;quot;&amp;gt;Name&amp;lt;/th&amp;gt;&amp;lt;th class=&amp;quot;colOne&amp;quot;&amp;gt;Type&amp;lt;/th&amp;gt;&amp;lt;th class=&amp;quot;colLast&amp;quot;&amp;gt;Comment&amp;lt;/th&amp;gt;&amp;lt;/tr&amp;gt;|","f_returnsobject":0,"signature":"Public Const SUMMARY_ROW_HEADER_DEFAULT = |&amp;lt;tr&amp;gt;&amp;lt;th class=&amp;quot;colFirst&amp;quot;&amp;gt;Name&amp;lt;/th&amp;gt;&amp;lt;th class=&amp;quot;colOne&amp;quot;&amp;gt;Type&amp;lt;/th&amp;gt;&amp;lt;th class=&amp;quot;colLast&amp;quot;&amp;gt;Comment&amp;lt;/th&amp;gt;&amp;lt;/tr&amp;gt;|","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]},{"label":"SUMMARY_ROW_HEADER_CONSTANT","comment":"","valuetype":"","filenamebase":"SUMMARYROWHEADERCONSTANT_Constant","fqnprefix":"VSID.BSXdocumentationUtils","qn":"SUMMARYROWHEADERCONSTANT","codesample":"","signaturecode":2056,"instancecode":8,"value":"|&amp;lt;tr&amp;gt;&amp;lt;th class=&amp;quot;colFirst&amp;quot;&amp;gt;Name&amp;lt;/th&amp;gt;&amp;lt;th class=&amp;quot;colOne&amp;quot;&amp;gt;Value&amp;lt;/th&amp;gt;&amp;lt;th class=&amp;quot;colLast&amp;quot;&amp;gt;Comment&amp;lt;/th&amp;gt;&amp;lt;/tr&amp;gt;|","f_returnsobject":0,"signature":"Public Const SUMMARY_ROW_HEADER_CONSTANT = |&amp;lt;tr&amp;gt;&amp;lt;th class=&amp;quot;colFirst&amp;quot;&amp;gt;Name&amp;lt;/th&amp;gt;&amp;lt;th class=&amp;quot;colOne&amp;quot;&amp;gt;Value&amp;lt;/th&amp;gt;&amp;lt;th class=&amp;quot;colLast&amp;quot;&amp;gt;Comment&amp;lt;/th&amp;gt;&amp;lt;/tr&amp;gt;|","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Const"]}], "methods":[{"label":"generateNavHTML","comment":"","valuetype":"StringQueue","filenamebase":"generateNavHTML_Method","fqnprefix":"VSID.BSXdocumentationUtils","qn":"generateNavHTML","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(taggedValues As StringList, bsxstubid As String, includeHeader As Boolean)","signature":"Public Function generateNavHTML(taggedValues As StringList, bsxstubid As String, includeHeader As Boolean) As StringQueue","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"taggedValues","comment":"values to replace tags in the various HTML stub (header, nav, footer, etc.) files","valuetype":"StringList","filenamebase":"taggedValues_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsgenerateNavHTML","qn":"taggedValues","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;values to replace tags in the various HTML stub (header, nav, footer, etc.) files&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"values to replace tags in the various HTML stub (header, nav, footer, etc.) files","inlinecomment":" \t &apos; values to replace tags in the various HTML stub (header, nav, footer, etc.) files"},{"label":"bsxstubid","comment":"Identifier for the BSX Stub HTML file to use.","valuetype":"String","filenamebase":"bsxstubid_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsgenerateNavHTML","qn":"bsxstubid","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Identifier for the BSX Stub HTML file to use.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Identifier for the BSX Stub HTML file to use.","inlinecomment":" \t &apos; Identifier for the BSX Stub HTML file to use."},{"label":"includeHeader","comment":"Flag indicating if the HTML_HEADER should be included.","valuetype":"Boolean","filenamebase":"includeHeader_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsgenerateNavHTML","qn":"includeHeader","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the HTML_HEADER should be included.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the HTML_HEADER should be included.","inlinecomment":" \t &apos; Flag indicating if the HTML_HEADER should be included."}]},{"label":"generatePageHTML","comment":"Generates the final Page HTML content for the API documentation ","valuetype":"StringQueue","filenamebase":"generatePageHTML_Method","fqnprefix":"VSID.BSXdocumentationUtils","qn":"generatePageHTML","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(taggedValues As StringList, apidoc As StringsCarrier, includeNavBar As Boolean)","signature":"Public Function generatePageHTML(taggedValues As StringList, apidoc As StringsCarrier, includeNavBar As Boolean) As StringQueue","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Generates the final Page HTML content for the API documentation &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Generates the final Page HTML content for the API documentation ","inlinecomment":" \t &apos; Generates the final Page HTML content for the API documentation ","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"taggedValues","comment":"values to replace tags in the various HTML stub (header, nav, footer, etc.) files","valuetype":"StringList","filenamebase":"taggedValues_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsgeneratePageHTML","qn":"taggedValues","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;values to replace tags in the various HTML stub (header, nav, footer, etc.) files&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"values to replace tags in the various HTML stub (header, nav, footer, etc.) files","inlinecomment":" \t &apos; values to replace tags in the various HTML stub (header, nav, footer, etc.) files"},{"label":"apidoc","comment":"API documentation HTML content to be inserted into the final page HTML","valuetype":"StringsCarrier","filenamebase":"apidoc_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsgeneratePageHTML","qn":"apidoc","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;API documentation HTML content to be inserted into the final page HTML&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"API documentation HTML content to be inserted into the final page HTML","inlinecomment":" \t &apos; API documentation HTML content to be inserted into the final page HTML"},{"label":"includeNavBar","comment":"Flag indicating if the Navigation Bars (HTML_NAVBAR_TOP, HTML_NAVBAR_BOTTOM should be included.","valuetype":"Boolean","filenamebase":"includeNavBar_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsgeneratePageHTML","qn":"includeNavBar","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Navigation Bars (HTML_NAVBAR_TOP, HTML_NAVBAR_BOTTOM should be included.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Navigation Bars (HTML_NAVBAR_TOP, HTML_NAVBAR_BOTTOM should be included.","inlinecomment":" \t &apos; Flag indicating if the Navigation Bars (HTML_NAVBAR_TOP, HTML_NAVBAR_BOTTOM should be included."}]},{"label":"getAdditionalPropertyKeys","comment":"Gets additional property keys used for pulling information from a documen","valuetype":"Variant","filenamebase":"getAdditionalPropertyKeys_Method","fqnprefix":"VSID.BSXdocumentationUtils","qn":"getAdditionalPropertyKeys","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(code As Long)","signature":"Public Function getAdditionalPropertyKeys(code As Long) As Variant","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets additional property keys used for pulling information from a documen&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets additional property keys used for pulling information from a documen","inlinecomment":" \t &apos; Gets additional property keys used for pulling information from a documen","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"code","comment":"Instance Code specifying the object instance type for which Property Keys should be retrieved:\n\t\t\n\t\tSIGNATURE_VALUE_VSE: \t\tGet Property Keys for VSE Ojbect Classes\n\t\tSIGNATURE_VALUE_LIBRARY: \tGet Property Keys for (Script) Library Object Classes.\n\t\tSIGNATURE_VALUE_TYPE: \t\tGet Property Keys for ObjectType instances","valuetype":"Long","filenamebase":"code_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsgetAdditionalPropertyKeys","qn":"code","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Instance Code specifying the object instance type for which Property Keys should be retrieved:&lt;br /&gt;\t\t&lt;br /&gt;\t\tSIGNATURE_VALUE_VSE: \t\tGet Property Keys for VSE Ojbect Classes&lt;br /&gt;\t\tSIGNATURE_VALUE_LIBRARY: \tGet Property Keys for (Script) Library Object Classes.&lt;br /&gt;\t\tSIGNATURE_VALUE_TYPE: \t\tGet Property Keys for ObjectType instances&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Instance Code specifying the object instance type for which Property Keys should be retrieved:&lt;br /&gt;\t\t&lt;br /&gt;\t\tSIGNATURE_VALUE_VSE: \t\tGet Property Keys for VSE Ojbect Classes&lt;br /&gt;\t\tSIGNATURE_VALUE_LIBRARY: \tGet Property Keys for (Script) Library Object Classes.&lt;br /&gt;\t\tSIGNATURE_VALUE_TYPE: \t\tGet Property Keys for ObjectType instances","inlinecomment":" \t &apos; Instance Code specifying the object instance type for which Property Keys should be retrieved:\n\t\t\n\t\tSIGNATURE_VALUE_VSE: \t\tGet Property Keys for VSE Ojbect Classes\n\t\tSIGNATURE_VALUE_LIBRARY: \tGet Property Keys for (Script) Library Object Classes.\n\t\tSIGNATURE_VALUE_TYPE: \t\tGet Property Keys for ObjectType instances"}]},{"label":"getCodeElementInstanceType","comment":"Gets the Code Element Instance Type String for the specified instance code. ","valuetype":"String","filenamebase":"getCodeElementInstanceType_Method","fqnprefix":"VSID.BSXdocumentationUtils","qn":"getCodeElementInstanceType","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(instancecode As Long)","signature":"Public Function getCodeElementInstanceType(instancecode As Long) As String","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets the Code Element Instance Type String for the specified instance code. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets the Code Element Instance Type String for the specified instance code. ","inlinecomment":" \t &apos; Gets the Code Element Instance Type String for the specified instance code. ","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"instancecode","comment":"Instance Code of the Code Element \n\t\n\tSupported Instance Codes: \n\t\tSIGNATURE_VALUE_CONST\n\t\tSIGNATUE_VALUE_VARIABLE\n\t\tSIGNATURE_VALUE_SUB\n\t\tSIGNATURE_VALUE_FUNCTION\n\t\tSIGNATURE_VALUE_EVENT\n\t\tSIGNATURE_VALUE_PROPERTY\n\t\tSIGNATURE_VALUE_TYPE\n\t\tSIGNATURE_VALUE_CLASS\n\t\tSIGNATURE_VALUE_VSE\n\t\tSIGNATURE_VALUE_LIBRARY\n\t\tSIGNATURE_VALUE_VSID\n\t\tSIGNATURE_VALUE_REMARK","valuetype":"Long","filenamebase":"instancecode_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsgetCodeElementInstanceType","qn":"instancecode","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Instance Code of the Code Element &lt;br /&gt;\t&lt;br /&gt;\tSupported Instance Codes: &lt;br /&gt;\t\tSIGNATURE_VALUE_CONST&lt;br /&gt;\t\tSIGNATUE_VALUE_VARIABLE&lt;br /&gt;\t\tSIGNATURE_VALUE_SUB&lt;br /&gt;\t\tSIGNATURE_VALUE_FUNCTION&lt;br /&gt;\t\tSIGNATURE_VALUE_EVENT&lt;br /&gt;\t\tSIGNATURE_VALUE_PROPERTY&lt;br /&gt;\t\tSIGNATURE_VALUE_TYPE&lt;br /&gt;\t\tSIGNATURE_VALUE_CLASS&lt;br /&gt;\t\tSIGNATURE_VALUE_VSE&lt;br /&gt;\t\tSIGNATURE_VALUE_LIBRARY&lt;br /&gt;\t\tSIGNATURE_VALUE_VSID&lt;br /&gt;\t\tSIGNATURE_VALUE_REMARK&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Instance Code of the Code Element &lt;br /&gt;\t&lt;br /&gt;\tSupported Instance Codes: &lt;br /&gt;\t\tSIGNATURE_VALUE_CONST&lt;br /&gt;\t\tSIGNATUE_VALUE_VARIABLE&lt;br /&gt;\t\tSIGNATURE_VALUE_SUB&lt;br /&gt;\t\tSIGNATURE_VALUE_FUNCTION&lt;br /&gt;\t\tSIGNATURE_VALUE_EVENT&lt;br /&gt;\t\tSIGNATURE_VALUE_PROPERTY&lt;br /&gt;\t\tSIGNATURE_VALUE_TYPE&lt;br /&gt;\t\tSIGNATURE_VALUE_CLASS&lt;br /&gt;\t\tSIGNATURE_VALUE_VSE&lt;br /&gt;\t\tSIGNATURE_VALUE_LIBRARY&lt;br /&gt;\t\tSIGNATURE_VALUE_VSID&lt;br /&gt;\t\tSIGNATURE_VALUE_REMARK","inlinecomment":" \t &apos; Instance Code of the Code Element \n\t\n\tSupported Instance Codes: \n\t\tSIGNATURE_VALUE_CONST\n\t\tSIGNATUE_VALUE_VARIABLE\n\t\tSIGNATURE_VALUE_SUB\n\t\tSIGNATURE_VALUE_FUNCTION\n\t\tSIGNATURE_VALUE_EVENT\n\t\tSIGNATURE_VALUE_PROPERTY\n\t\tSIGNATURE_VALUE_TYPE\n\t\tSIGNATURE_VALUE_CLASS\n\t\tSIGNATURE_VALUE_VSE\n\t\tSIGNATURE_VALUE_LIBRARY\n\t\tSIGNATURE_VALUE_VSID\n\t\tSIGNATURE_VALUE_REMARK"}]},{"label":"getElementsDetail","comment":"Gets Element Detail html from an array of Element Objects. ","valuetype":"StringQueue","filenamebase":"getElementsDetail_Method","fqnprefix":"VSID.BSXdocumentationUtils","qn":"getElementsDetail","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(elements As Variant, elementtypename As String)","signature":"Public Function getElementsDetail(elements As Variant, elementtypename As String) As StringQueue","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets Element Detail html from an array of Element Objects. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets Element Detail html from an array of Element Objects. ","inlinecomment":" \t &apos; Gets Element Detail html from an array of Element Objects. ","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"elements","comment":"Array of Element objects (Methods or Variables). ","valuetype":"Variant","filenamebase":"elements_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsgetElementsDetail","qn":"elements","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Array of Element objects (Methods or Variables). &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Array of Element objects (Methods or Variables). ","inlinecomment":" \t &apos; Array of Element objects (Methods or Variables). "},{"label":"elementtypename","comment":"TypeName of the element (Method or Variable) ","valuetype":"String","filenamebase":"elementtypename_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsgetElementsDetail","qn":"elementtypename","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;TypeName of the element (Method or Variable) &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"TypeName of the element (Method or Variable) ","inlinecomment":" \t &apos; TypeName of the element (Method or Variable) "}]},{"label":"getElementSummary","comment":"Gets Element Summaries from an array of Method, Variable, or Constant Objects. ","valuetype":"StringQueue","filenamebase":"getElementSummary_Method","fqnprefix":"VSID.BSXdocumentationUtils","qn":"getElementSummary","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(elements As Variant, elementtypename As String)","signature":"Public Function getElementSummary(elements As Variant, elementtypename As String) As StringQueue","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets Element Summaries from an array of Method, Variable, or Constant Objects. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets Element Summaries from an array of Method, Variable, or Constant Objects. ","inlinecomment":" \t &apos; Gets Element Summaries from an array of Method, Variable, or Constant Objects. ","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"elements","comment":"Array of Element objects (Method, Variable, or Constant).","valuetype":"Variant","filenamebase":"elements_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsgetElementSummary","qn":"elements","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Array of Element objects (Method, Variable, or Constant).&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Array of Element objects (Method, Variable, or Constant).","inlinecomment":" \t &apos; Array of Element objects (Method, Variable, or Constant)."},{"label":"elementtypename","comment":"TypeName of the element (Method, Variable, or Constant)","valuetype":"String","filenamebase":"elementtypename_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsgetElementSummary","qn":"elementtypename","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;TypeName of the element (Method, Variable, or Constant)&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"TypeName of the element (Method, Variable, or Constant)","inlinecomment":" \t &apos; TypeName of the element (Method, Variable, or Constant)"}]},{"label":"getMajorElementsListItems","comment":"Gets ListItems HTML from an array of MajorElements  ","valuetype":"StringList","filenamebase":"getMajorElementsListItems_Method","fqnprefix":"VSID.BSXdocumentationUtils","qn":"getMajorElementsListItems","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(source As Variant, summarylinkprefix As String)","signature":"Public Function getMajorElementsListItems(source As Variant, summarylinkprefix As String) As StringList","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets ListItems HTML from an array of MajorElements  &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets ListItems HTML from an array of MajorElements  ","inlinecomment":" \t &apos; Gets ListItems HTML from an array of MajorElements  ","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"Array of MajorElements ","valuetype":"Variant","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsgetMajorElementsListItems","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Array of MajorElements &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Array of MajorElements ","inlinecomment":" \t &apos; Array of MajorElements "},{"label":"summarylinkprefix","comment":"Prefix for the list item summary link","valuetype":"String","filenamebase":"summarylinkprefix_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsgetMajorElementsListItems","qn":"summarylinkprefix","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Prefix for the list item summary link&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Prefix for the list item summary link","inlinecomment":" \t &apos; Prefix for the list item summary link"}]},{"label":"getMajorElementsUnorderedList","comment":"Gets UnorderedList HTML from an array of Major Elements  ","valuetype":"String","filenamebase":"getMajorElementsUnorderedList_Method","fqnprefix":"VSID.BSXdocumentationUtils","qn":"getMajorElementsUnorderedList","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(source As Variant, label As String, summarylinkprefix As String)","signature":"Public Function getMajorElementsUnorderedList(source As Variant, label As String, summarylinkprefix As String) As String","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets UnorderedList HTML from an array of Major Elements  &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets UnorderedList HTML from an array of Major Elements  ","inlinecomment":" \t &apos; Gets UnorderedList HTML from an array of Major Elements  ","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"Array of MajorElements ","valuetype":"Variant","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsgetMajorElementsUnorderedList","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Array of MajorElements &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Array of MajorElements ","inlinecomment":" \t &apos; Array of MajorElements "},{"label":"label","comment":"Label for the Unordered List","valuetype":"String","filenamebase":"label_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsgetMajorElementsUnorderedList","qn":"label","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Label for the Unordered List&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Label for the Unordered List","inlinecomment":" \t &apos; Label for the Unordered List"},{"label":"summarylinkprefix","comment":"Prefix for the list item summary link","valuetype":"String","filenamebase":"summarylinkprefix_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsgetMajorElementsUnorderedList","qn":"summarylinkprefix","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Prefix for the list item summary link&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Prefix for the list item summary link","inlinecomment":" \t &apos; Prefix for the list item summary link"}]},{"label":"getMethodsDetail","comment":"Gets Method Detail html from an array of Method Objects. ","valuetype":"StringQueue","filenamebase":"getMethodsDetail_Method","fqnprefix":"VSID.BSXdocumentationUtils","qn":"getMethodsDetail","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(source As Variant)","signature":"Public Function getMethodsDetail(source As Variant) As StringQueue","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets Method Detail html from an array of Method Objects. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets Method Detail html from an array of Method Objects. ","inlinecomment":" \t &apos; Gets Method Detail html from an array of Method Objects. ","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"Array of Method objects.","valuetype":"Variant","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsgetMethodsDetail","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Array of Method objects.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Array of Method objects.","inlinecomment":" \t &apos; Array of Method objects."}]},{"label":"getMethodSummaries","comment":"Gets Method Summaries from an array of Method Objects. ","valuetype":"StringQueue","filenamebase":"getMethodSummaries_Method","fqnprefix":"VSID.BSXdocumentationUtils","qn":"getMethodSummaries","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(source As Variant)","signature":"Public Function getMethodSummaries(source As Variant) As StringQueue","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets Method Summaries from an array of Method Objects. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets Method Summaries from an array of Method Objects. ","inlinecomment":" \t &apos; Gets Method Summaries from an array of Method Objects. ","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"Array of Method objects.","valuetype":"Variant","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsgetMethodSummaries","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Array of Method objects.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Array of Method objects.","inlinecomment":" \t &apos; Array of Method objects."}]},{"label":"getSignatureCode","comment":"Calculates the Signature Code for a given source string.","valuetype":"Long","filenamebase":"getSignatureCode_Method","fqnprefix":"VSID.BSXdocumentationUtils","qn":"getSignatureCode","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(source As String)","signature":"Public Function getSignatureCode(source As String) As Long","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Calculates the Signature Code for a given source string.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Calculates the Signature Code for a given source string.","inlinecomment":" \t &apos; Calculates the Signature Code for a given source string.","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"String from which to generate the signature value","valuetype":"String","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsgetSignatureCode","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;String from which to generate the signature value&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"String from which to generate the signature value","inlinecomment":" \t &apos; String from which to generate the signature value"}]},{"label":"getSignatureElements","comment":"Returns a StringQueue containing the various Signature elements (Type, Class, Property, Sub, etc) for an associated value. \n\t\nPerforms a bitwise comparison on the source value to determine the elements of the returned array \nSource value compared to the following constants:\n\t\n\tConst SIGNATURE_VALUE_GET \t\t= 1\n\tConst SIGNATURE_VALUE_SET \t\t= 2\n\t\n\tConst SIGNATURE_VALUE_SUB \t\t= 4\n\tConst SIGNATURE_VALUE_FUNCTION\t= 8 \n\tConst SIGNATURE_VALUE_EVENT \t= 16\n\tConst SIGNATURE_VALUE_PROPERTY \t= 32\n\t\n\tConst SIGNATURE_VALUE_TYPE \t\t= 64\n\tConst SIGNATURE_VALUE_CLASS \t= 128 \n\t\n\tConst SIGNATURE_VALUE_PUBLIC \t= 256\n\tConst SIGNATURE_VALUE_PRIVATE \t= 512\n\t\n\tConst SIGNATURE_VALUE_STATIC \t= 1024\n\tConst SIGNATURE_VALUE_FINAL \t= 2048\n\t\n\tConst SIGNATURE_VALUE_VSE \t\t= 4096 \n\tConst SIGNATURE_VALUE_LIBRARY \t= 8192\n\tConst SIGNATURE_VALUE_VSID \t\t= 16384\n\t\n\t\nThe order of possible values to be returned is: \n\tVSID (standalone) \n\tVSE (standalone) \n\tLibrary (standalone)\n\tStatic, Private, Public, Class, Type, Property, Event, Function, Sub, Set, Get\n\t\n\tFor example, if the source value is 1313, then the array values returned are &amp;quot;Static&amp;quot;, &amp;quot;Public&amp;quot;, &amp;quot;Property&amp;quot;, and &amp;quot;Get&amp;quot; (1024 + 256 + 32 + 1). \nIf a conflict occurs with the returned value type (such as &amp;quot;Sub&amp;quot; and &amp;quot;Function&amp;quot;, or &amp;quot;Get&amp;quot; and &amp;quot;Set&amp;quot;) an error will be thrown.  \n\t\t\t\t\t\t","valuetype":"StringQueue","filenamebase":"getSignatureElements_Method","fqnprefix":"VSID.BSXdocumentationUtils","qn":"getSignatureElements","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(source As Library)","signature":"Public Function getSignatureElements(source As Library) As StringQueue","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Returns a StringQueue containing the various Signature elements (Type, Class, Property, Sub, etc) for an associated value. &lt;br /&gt;\t&lt;br /&gt;Performs a bitwise comparison on the source value to determine the elements of the returned array &lt;br /&gt;Source value compared to the following constants:&lt;br /&gt;\t&lt;br /&gt;\tConst SIGNATURE_VALUE_GET \t\t= 1&lt;br /&gt;\tConst SIGNATURE_VALUE_SET \t\t= 2&lt;br /&gt;\t&lt;br /&gt;\tConst SIGNATURE_VALUE_SUB \t\t= 4&lt;br /&gt;\tConst SIGNATURE_VALUE_FUNCTION\t= 8 &lt;br /&gt;\tConst SIGNATURE_VALUE_EVENT \t= 16&lt;br /&gt;\tConst SIGNATURE_VALUE_PROPERTY \t= 32&lt;br /&gt;\t&lt;br /&gt;\tConst SIGNATURE_VALUE_TYPE \t\t= 64&lt;br /&gt;\tConst SIGNATURE_VALUE_CLASS \t= 128 &lt;br /&gt;\t&lt;br /&gt;\tConst SIGNATURE_VALUE_PUBLIC \t= 256&lt;br /&gt;\tConst SIGNATURE_VALUE_PRIVATE \t= 512&lt;br /&gt;\t&lt;br /&gt;\tConst SIGNATURE_VALUE_STATIC \t= 1024&lt;br /&gt;\tConst SIGNATURE_VALUE_FINAL \t= 2048&lt;br /&gt;\t&lt;br /&gt;\tConst SIGNATURE_VALUE_VSE \t\t= 4096 &lt;br /&gt;\tConst SIGNATURE_VALUE_LIBRARY \t= 8192&lt;br /&gt;\tConst SIGNATURE_VALUE_VSID \t\t= 16384&lt;br /&gt;\t&lt;br /&gt;\t&lt;br /&gt;The order of possible values to be returned is: &lt;br /&gt;\tVSID (standalone) &lt;br /&gt;\tVSE (standalone) &lt;br /&gt;\tLibrary (standalone)&lt;br /&gt;\tStatic, Private, Public, Class, Type, Property, Event, Function, Sub, Set, Get&lt;br /&gt;\t&lt;br /&gt;\tFor example, if the source value is 1313, then the array values returned are &amp;quot;Static&amp;quot;, &amp;quot;Public&amp;quot;, &amp;quot;Property&amp;quot;, and &amp;quot;Get&amp;quot; (1024 + 256 + 32 + 1). &lt;br /&gt;If a conflict occurs with the returned value type (such as &amp;quot;Sub&amp;quot; and &amp;quot;Function&amp;quot;, or &amp;quot;Get&amp;quot; and &amp;quot;Set&amp;quot;) an error will be thrown.  &lt;br /&gt;\t\t\t\t\t\t&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Returns a StringQueue containing the various Signature elements (Type, Class, Property, Sub, etc) for an associated value. &lt;br /&gt;\t&lt;br /&gt;Performs a bitwise comparison on the source value to determine the elements of the returned array &lt;br /&gt;Source value compared to the following constants:&lt;br /&gt;\t&lt;br /&gt;\tConst SIGNATURE_VALUE_GET \t\t= 1&lt;br /&gt;\tConst SIGNATURE_VALUE_SET \t\t= 2&lt;br /&gt;\t&lt;br /&gt;\tConst SIGNATURE_VALUE_SUB \t\t= 4&lt;br /&gt;\tConst SIGNATURE_VALUE_FUNCTION\t= 8 &lt;br /&gt;\tConst SIGNATURE_VALUE_EVENT \t= 16&lt;br /&gt;\tConst SIGNATURE_VALUE_PROPERTY \t= 32&lt;br /&gt;\t&lt;br /&gt;\tConst SIGNATURE_VALUE_TYPE \t\t= 64&lt;br /&gt;\tConst SIGNATURE_VALUE_CLASS \t= 128 &lt;br /&gt;\t&lt;br /&gt;\tConst SIGNATURE_VALUE_PUBLIC \t= 256&lt;br /&gt;\tConst SIGNATURE_VALUE_PRIVATE \t= 512&lt;br /&gt;\t&lt;br /&gt;\tConst SIGNATURE_VALUE_STATIC \t= 1024&lt;br /&gt;\tConst SIGNATURE_VALUE_FINAL \t= 2048&lt;br /&gt;\t&lt;br /&gt;\tConst SIGNATURE_VALUE_VSE \t\t= 4096 &lt;br /&gt;\tConst SIGNATURE_VALUE_LIBRARY \t= 8192&lt;br /&gt;\tConst SIGNATURE_VALUE_VSID \t\t= 16384&lt;br /&gt;\t&lt;br /&gt;\t&lt;br /&gt;The order of possible values to be returned is: &lt;br /&gt;\tVSID (standalone) &lt;br /&gt;\tVSE (standalone) &lt;br /&gt;\tLibrary (standalone)&lt;br /&gt;\tStatic, Private, Public, Class, Type, Property, Event, Function, Sub, Set, Get&lt;br /&gt;\t&lt;br /&gt;\tFor example, if the source value is 1313, then the array values returned are &amp;quot;Static&amp;quot;, &amp;quot;Public&amp;quot;, &amp;quot;Property&amp;quot;, and &amp;quot;Get&amp;quot; (1024 + 256 + 32 + 1). &lt;br /&gt;If a conflict occurs with the returned value type (such as &amp;quot;Sub&amp;quot; and &amp;quot;Function&amp;quot;, or &amp;quot;Get&amp;quot; and &amp;quot;Set&amp;quot;) an error will be thrown.  &lt;br /&gt;\t\t\t\t\t\t","inlinecomment":" \t &apos; Returns a StringQueue containing the various Signature elements (Type, Class, Property, Sub, etc) for an associated value. \n\t\nPerforms a bitwise comparison on the source value to determine the elements of the returned array \nSource value compared to the following constants:\n\t\n\tConst SIGNATURE_VALUE_GET \t\t= 1\n\tConst SIGNATURE_VALUE_SET \t\t= 2\n\t\n\tConst SIGNATURE_VALUE_SUB \t\t= 4\n\tConst SIGNATURE_VALUE_FUNCTION\t= 8 \n\tConst SIGNATURE_VALUE_EVENT \t= 16\n\tConst SIGNATURE_VALUE_PROPERTY \t= 32\n\t\n\tConst SIGNATURE_VALUE_TYPE \t\t= 64\n\tConst SIGNATURE_VALUE_CLASS \t= 128 \n\t\n\tConst SIGNATURE_VALUE_PUBLIC \t= 256\n\tConst SIGNATURE_VALUE_PRIVATE \t= 512\n\t\n\tConst SIGNATURE_VALUE_STATIC \t= 1024\n\tConst SIGNATURE_VALUE_FINAL \t= 2048\n\t\n\tConst SIGNATURE_VALUE_VSE \t\t= 4096 \n\tConst SIGNATURE_VALUE_LIBRARY \t= 8192\n\tConst SIGNATURE_VALUE_VSID \t\t= 16384\n\t\n\t\nThe order of possible values to be returned is: \n\tVSID (standalone) \n\tVSE (standalone) \n\tLibrary (standalone)\n\tStatic, Private, Public, Class, Type, Property, Event, Function, Sub, Set, Get\n\t\n\tFor example, if the source value is 1313, then the array values returned are &amp;quot;Static&amp;quot;, &amp;quot;Public&amp;quot;, &amp;quot;Property&amp;quot;, and &amp;quot;Get&amp;quot; (1024 + 256 + 32 + 1). \nIf a conflict occurs with the returned value type (such as &amp;quot;Sub&amp;quot; and &amp;quot;Function&amp;quot;, or &amp;quot;Get&amp;quot; and &amp;quot;Set&amp;quot;) an error will be thrown.  \n\t\t\t\t\t\t","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"Signature Code from which to generate the result","valuetype":"Library","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsgetSignatureElements","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Signature Code from which to generate the result&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Signature Code from which to generate the result","inlinecomment":" \t &apos; Signature Code from which to generate the result"}]},{"label":"getSignatureModifiers","comment":"Returns a StringQueue containing the various Signature modifiers (Public, Private, Static, Final) for an associated value. \n\t\nPerforms a bitwise comparison on the source value to determine the elements of the returned array \nSource value compared to the following constants:\n\t\n\tConst SIGNATURE_VALUE_GET \t\t= 1\n\tConst SIGNATURE_VALUE_SET \t\t= 2\n\t\n\tConst SIGNATURE_VALUE_SUB \t\t= 4\n\tConst SIGNATURE_VALUE_FUNCTION\t= 8 \n\tConst SIGNATURE_VALUE_EVENT \t= 16\n\tConst SIGNATURE_VALUE_PROPERTY \t= 32\n\t\n\tConst SIGNATURE_VALUE_TYPE \t\t= 64\n\tConst SIGNATURE_VALUE_CLASS \t= 128 \n\t\n\tConst SIGNATURE_VALUE_PUBLIC \t= 256\n\tConst SIGNATURE_VALUE_PRIVATE \t= 512\n\t\n\tConst SIGNATURE_VALUE_STATIC \t= 1024\n\tConst SIGNATURE_VALUE_FINAL \t= 2048\n\t\n\tConst SIGNATURE_VALUE_VSE \t\t= 4096 \n\tConst SIGNATURE_VALUE_LIBRARY \t= 8192\n\tConst SIGNATURE_VALUE_VSID \t\t= 16384\n\t\n\t\nThe order of possible values to be returned is: \n\tFinal, Static, Private, Public\n\t\n\tFor example, if the source value is 1313, then the array values returned are &amp;quot;Static&amp;quot; and public &amp;quot;Public&amp;quot; (1024 + 256 + 32 + 1) (values for 32 and 1 are not returned)\n\t\nIf a conflict occurs with the returned value type (such as &amp;quot;Public&amp;quot; and &amp;quot;Private&amp;quot;) an error will be thrown.  \t\t\t","valuetype":"StringQueue","filenamebase":"getSignatureModifiers_Method","fqnprefix":"VSID.BSXdocumentationUtils","qn":"getSignatureModifiers","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(source As Long)","signature":"Public Function getSignatureModifiers(source As Long) As StringQueue","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Returns a StringQueue containing the various Signature modifiers (Public, Private, Static, Final) for an associated value. &lt;br /&gt;\t&lt;br /&gt;Performs a bitwise comparison on the source value to determine the elements of the returned array &lt;br /&gt;Source value compared to the following constants:&lt;br /&gt;\t&lt;br /&gt;\tConst SIGNATURE_VALUE_GET \t\t= 1&lt;br /&gt;\tConst SIGNATURE_VALUE_SET \t\t= 2&lt;br /&gt;\t&lt;br /&gt;\tConst SIGNATURE_VALUE_SUB \t\t= 4&lt;br /&gt;\tConst SIGNATURE_VALUE_FUNCTION\t= 8 &lt;br /&gt;\tConst SIGNATURE_VALUE_EVENT \t= 16&lt;br /&gt;\tConst SIGNATURE_VALUE_PROPERTY \t= 32&lt;br /&gt;\t&lt;br /&gt;\tConst SIGNATURE_VALUE_TYPE \t\t= 64&lt;br /&gt;\tConst SIGNATURE_VALUE_CLASS \t= 128 &lt;br /&gt;\t&lt;br /&gt;\tConst SIGNATURE_VALUE_PUBLIC \t= 256&lt;br /&gt;\tConst SIGNATURE_VALUE_PRIVATE \t= 512&lt;br /&gt;\t&lt;br /&gt;\tConst SIGNATURE_VALUE_STATIC \t= 1024&lt;br /&gt;\tConst SIGNATURE_VALUE_FINAL \t= 2048&lt;br /&gt;\t&lt;br /&gt;\tConst SIGNATURE_VALUE_VSE \t\t= 4096 &lt;br /&gt;\tConst SIGNATURE_VALUE_LIBRARY \t= 8192&lt;br /&gt;\tConst SIGNATURE_VALUE_VSID \t\t= 16384&lt;br /&gt;\t&lt;br /&gt;\t&lt;br /&gt;The order of possible values to be returned is: &lt;br /&gt;\tFinal, Static, Private, Public&lt;br /&gt;\t&lt;br /&gt;\tFor example, if the source value is 1313, then the array values returned are &amp;quot;Static&amp;quot; and public &amp;quot;Public&amp;quot; (1024 + 256 + 32 + 1) (values for 32 and 1 are not returned)&lt;br /&gt;\t&lt;br /&gt;If a conflict occurs with the returned value type (such as &amp;quot;Public&amp;quot; and &amp;quot;Private&amp;quot;) an error will be thrown.  \t\t\t&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Returns a StringQueue containing the various Signature modifiers (Public, Private, Static, Final) for an associated value. &lt;br /&gt;\t&lt;br /&gt;Performs a bitwise comparison on the source value to determine the elements of the returned array &lt;br /&gt;Source value compared to the following constants:&lt;br /&gt;\t&lt;br /&gt;\tConst SIGNATURE_VALUE_GET \t\t= 1&lt;br /&gt;\tConst SIGNATURE_VALUE_SET \t\t= 2&lt;br /&gt;\t&lt;br /&gt;\tConst SIGNATURE_VALUE_SUB \t\t= 4&lt;br /&gt;\tConst SIGNATURE_VALUE_FUNCTION\t= 8 &lt;br /&gt;\tConst SIGNATURE_VALUE_EVENT \t= 16&lt;br /&gt;\tConst SIGNATURE_VALUE_PROPERTY \t= 32&lt;br /&gt;\t&lt;br /&gt;\tConst SIGNATURE_VALUE_TYPE \t\t= 64&lt;br /&gt;\tConst SIGNATURE_VALUE_CLASS \t= 128 &lt;br /&gt;\t&lt;br /&gt;\tConst SIGNATURE_VALUE_PUBLIC \t= 256&lt;br /&gt;\tConst SIGNATURE_VALUE_PRIVATE \t= 512&lt;br /&gt;\t&lt;br /&gt;\tConst SIGNATURE_VALUE_STATIC \t= 1024&lt;br /&gt;\tConst SIGNATURE_VALUE_FINAL \t= 2048&lt;br /&gt;\t&lt;br /&gt;\tConst SIGNATURE_VALUE_VSE \t\t= 4096 &lt;br /&gt;\tConst SIGNATURE_VALUE_LIBRARY \t= 8192&lt;br /&gt;\tConst SIGNATURE_VALUE_VSID \t\t= 16384&lt;br /&gt;\t&lt;br /&gt;\t&lt;br /&gt;The order of possible values to be returned is: &lt;br /&gt;\tFinal, Static, Private, Public&lt;br /&gt;\t&lt;br /&gt;\tFor example, if the source value is 1313, then the array values returned are &amp;quot;Static&amp;quot; and public &amp;quot;Public&amp;quot; (1024 + 256 + 32 + 1) (values for 32 and 1 are not returned)&lt;br /&gt;\t&lt;br /&gt;If a conflict occurs with the returned value type (such as &amp;quot;Public&amp;quot; and &amp;quot;Private&amp;quot;) an error will be thrown.  \t\t\t","inlinecomment":" \t &apos; Returns a StringQueue containing the various Signature modifiers (Public, Private, Static, Final) for an associated value. \n\t\nPerforms a bitwise comparison on the source value to determine the elements of the returned array \nSource value compared to the following constants:\n\t\n\tConst SIGNATURE_VALUE_GET \t\t= 1\n\tConst SIGNATURE_VALUE_SET \t\t= 2\n\t\n\tConst SIGNATURE_VALUE_SUB \t\t= 4\n\tConst SIGNATURE_VALUE_FUNCTION\t= 8 \n\tConst SIGNATURE_VALUE_EVENT \t= 16\n\tConst SIGNATURE_VALUE_PROPERTY \t= 32\n\t\n\tConst SIGNATURE_VALUE_TYPE \t\t= 64\n\tConst SIGNATURE_VALUE_CLASS \t= 128 \n\t\n\tConst SIGNATURE_VALUE_PUBLIC \t= 256\n\tConst SIGNATURE_VALUE_PRIVATE \t= 512\n\t\n\tConst SIGNATURE_VALUE_STATIC \t= 1024\n\tConst SIGNATURE_VALUE_FINAL \t= 2048\n\t\n\tConst SIGNATURE_VALUE_VSE \t\t= 4096 \n\tConst SIGNATURE_VALUE_LIBRARY \t= 8192\n\tConst SIGNATURE_VALUE_VSID \t\t= 16384\n\t\n\t\nThe order of possible values to be returned is: \n\tFinal, Static, Private, Public\n\t\n\tFor example, if the source value is 1313, then the array values returned are &amp;quot;Static&amp;quot; and public &amp;quot;Public&amp;quot; (1024 + 256 + 32 + 1) (values for 32 and 1 are not returned)\n\t\nIf a conflict occurs with the returned value type (such as &amp;quot;Public&amp;quot; and &amp;quot;Private&amp;quot;) an error will be thrown.  \t\t\t","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"Signature Code from which to generate the result","valuetype":"Long","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsgetSignatureModifiers","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Signature Code from which to generate the result&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Signature Code from which to generate the result","inlinecomment":" \t &apos; Signature Code from which to generate the result"}]},{"label":"getValuedElementLinkedSummariesHTML","comment":"Gets ValuedElement Summaries from an array of ValuedElement Objects. ","valuetype":"StringQueue","filenamebase":"getValuedElementLinkedSummariesHTML_Method","fqnprefix":"VSID.BSXdocumentationUtils","qn":"getValuedElementLinkedSummariesHTML","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(source As Variant, parent As CodeElement)","signature":"Public Function getValuedElementLinkedSummariesHTML(source As Variant, parent As CodeElement) As StringQueue","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets ValuedElement Summaries from an array of ValuedElement Objects. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets ValuedElement Summaries from an array of ValuedElement Objects. ","inlinecomment":" \t &apos; Gets ValuedElement Summaries from an array of ValuedElement Objects. ","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"Array of ValuedElement objects. ","valuetype":"Variant","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsgetValuedElementLinkedSummariesHTML","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Array of ValuedElement objects. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Array of ValuedElement objects. ","inlinecomment":" \t &apos; Array of ValuedElement objects. "},{"label":"parent","comment":"Parent CodeElement to the source array","valuetype":"CodeElement","filenamebase":"parent_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsgetValuedElementLinkedSummariesHTML","qn":"parent","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Parent CodeElement to the source array&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Parent CodeElement to the source array","inlinecomment":" \t &apos; Parent CodeElement to the source array"}]},{"label":"getVSIDstubContent","comment":"Gets a &amp;quot;singleton&amp;quot; instance of the VSID stub StringsCarrierList object for the associated key.","valuetype":"StringsCarrierList","filenamebase":"getVSIDstubContent_Method","fqnprefix":"VSID.BSXdocumentationUtils","qn":"getVSIDstubContent","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(key As String)","signature":"Public Function getVSIDstubContent(key As String) As StringsCarrierList","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets a &amp;quot;singleton&amp;quot; instance of the VSID stub StringsCarrierList object for the associated key.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets a &amp;quot;singleton&amp;quot; instance of the VSID stub StringsCarrierList object for the associated key.","inlinecomment":" \t &apos; Gets a &amp;quot;singleton&amp;quot; instance of the VSID stub StringsCarrierList object for the associated key.","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"key","comment":"Identifier used to specify which BSX stub StringsCarrierList to return","valuetype":"String","filenamebase":"key_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsgetVSIDstubContent","qn":"key","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Identifier used to specify which BSX stub StringsCarrierList to return&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Identifier used to specify which BSX stub StringsCarrierList to return","inlinecomment":" \t &apos; Identifier used to specify which BSX stub StringsCarrierList to return"}]},{"label":"readTextFileToStringQueue","comment":"Reads the contents of a text file into a StringQueue ","valuetype":"StringQueue","filenamebase":"readTextFileToStringQueue_Method","fqnprefix":"VSID.BSXdocumentationUtils","qn":"readTextFileToStringQueue","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(source As String)","signature":"Public Function readTextFileToStringQueue(source As String) As StringQueue","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Reads the contents of a text file into a StringQueue &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Reads the contents of a text file into a StringQueue ","inlinecomment":" \t &apos; Reads the contents of a text file into a StringQueue ","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"Filepath of file to be read.","valuetype":"String","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsreadTextFileToStringQueue","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Filepath of file to be read.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Filepath of file to be read.","inlinecomment":" \t &apos; Filepath of file to be read."}]},{"label":"signatureCodeToInstanceCode","comment":"Extracts an InstanceCode from a Signature Code ","valuetype":"Long","filenamebase":"signatureCodeToInstanceCode_Method","fqnprefix":"VSID.BSXdocumentationUtils","qn":"signatureCodeToInstanceCode","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(signaturecode As Long)","signature":"Public Function signatureCodeToInstanceCode(signaturecode As Long) As Long","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Extracts an InstanceCode from a Signature Code &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Extracts an InstanceCode from a Signature Code ","inlinecomment":" \t &apos; Extracts an InstanceCode from a Signature Code ","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"signaturecode","comment":"Signature Code from which to extract the Instance Code","valuetype":"Long","filenamebase":"signaturecode_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilssignatureCodeToInstanceCode","qn":"signaturecode","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Signature Code from which to extract the Instance Code&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Signature Code from which to extract the Instance Code","inlinecomment":" \t &apos; Signature Code from which to extract the Instance Code"}]},{"label":"sortFQNbyLabel","comment":"Sorts an Array of FQN values by the Label portion \n\tFQN = FQNPrefix.Label \n\tSorts by Label.FQNPrefix ","valuetype":"StringQueue","filenamebase":"sortFQNbyLabel_Method","fqnprefix":"VSID.BSXdocumentationUtils","qn":"sortFQNbyLabel","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(source As Variant)","signature":"Public Function sortFQNbyLabel(source As Variant) As StringQueue","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Sorts an Array of FQN values by the Label portion &lt;br /&gt;\tFQN = FQNPrefix.Label &lt;br /&gt;\tSorts by Label.FQNPrefix &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Sorts an Array of FQN values by the Label portion &lt;br /&gt;\tFQN = FQNPrefix.Label &lt;br /&gt;\tSorts by Label.FQNPrefix ","inlinecomment":" \t &apos; Sorts an Array of FQN values by the Label portion \n\tFQN = FQNPrefix.Label \n\tSorts by Label.FQNPrefix ","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"Array of FQN Strings ","valuetype":"Variant","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilssortFQNbyLabel","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Array of FQN Strings &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Array of FQN Strings ","inlinecomment":" \t &apos; Array of FQN Strings "}]},{"label":"writeAPIdoc","comment":"Writes API documentation to a file \n\t\nReplaces moustache tag {{apidocgenerated}} in source with API documentation Generation Text.\n\tAPI documentation Generation Text: &amp;quot;Generated by APIdoc (APIDOC_VERSION) on &amp;lt;TIMESTAMP&amp;gt; --&amp;gt;\nIMPORTANT NOTE: Existing files will be OVERWRITTEN!  It is up to the calling code to pre-check for existence of file.\t\t\t","valuetype":"Long","filenamebase":"writeAPIdoc_Method","fqnprefix":"VSID.BSXdocumentationUtils","qn":"writeAPIdoc","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(taggedValues As StringList, source As StringQueue, target As String)","signature":"Public Function writeAPIdoc(taggedValues As StringList, source As StringQueue, target As String) As Long","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Writes API documentation to a file &lt;br /&gt;\t&lt;br /&gt;Replaces moustache tag {{apidocgenerated}} in source with API documentation Generation Text.&lt;br /&gt;\tAPI documentation Generation Text: &amp;quot;Generated by APIdoc (APIDOC_VERSION) on &amp;lt;TIMESTAMP&amp;gt; --&amp;gt;&lt;br /&gt;IMPORTANT NOTE: Existing files will be OVERWRITTEN!  It is up to the calling code to pre-check for existence of file.\t\t\t&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Writes API documentation to a file &lt;br /&gt;\t&lt;br /&gt;Replaces moustache tag {{apidocgenerated}} in source with API documentation Generation Text.&lt;br /&gt;\tAPI documentation Generation Text: &amp;quot;Generated by APIdoc (APIDOC_VERSION) on &amp;lt;TIMESTAMP&amp;gt; --&amp;gt;&lt;br /&gt;IMPORTANT NOTE: Existing files will be OVERWRITTEN!  It is up to the calling code to pre-check for existence of file.\t\t\t","inlinecomment":" \t &apos; Writes API documentation to a file \n\t\nReplaces moustache tag {{apidocgenerated}} in source with API documentation Generation Text.\n\tAPI documentation Generation Text: &amp;quot;Generated by APIdoc (APIDOC_VERSION) on &amp;lt;TIMESTAMP&amp;gt; --&amp;gt;\nIMPORTANT NOTE: Existing files will be OVERWRITTEN!  It is up to the calling code to pre-check for existence of file.\t\t\t","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"taggedValues","comment":"values to replace tags in the various HTML stub (header, nav, footer, etc.) files","valuetype":"StringList","filenamebase":"taggedValues_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilswriteAPIdoc","qn":"taggedValues","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;values to replace tags in the various HTML stub (header, nav, footer, etc.) files&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"values to replace tags in the various HTML stub (header, nav, footer, etc.) files","inlinecomment":" \t &apos; values to replace tags in the various HTML stub (header, nav, footer, etc.) files"},{"label":"source","comment":"Text to be written to a file.","valuetype":"StringQueue","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilswriteAPIdoc","qn":"source","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Text to be written to a file.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Text to be written to a file.","inlinecomment":" \t &apos; Text to be written to a file."},{"label":"target","comment":"Filepath of file to be written.","valuetype":"String","filenamebase":"target_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilswriteAPIdoc","qn":"target","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Filepath of file to be written.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Filepath of file to be written.","inlinecomment":" \t &apos; Filepath of file to be written."}]},{"label":"getContext","comment":"Gets the Context Object instance","valuetype":"Context","filenamebase":"getContext_Method","fqnprefix":"VSID.BSXdocumentationUtils","qn":"getContext","codesample":"","signaturecode":10304,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Static Public Function getContext() As Context","modifiers":"Static Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets the Context Object instance&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets the Context Object instance","inlinecomment":" \t &apos; Gets the Context Object instance","codesamplehtml":"", "attributes":["Static"], "signatureelements":["Static","Public","Function"]},{"label":"getInstanceCodes","comment":"Gets Instance Codes for CodeElement instance types (VSID, VSE, Library, Class, Type, Property, Event, Function, Sub)","valuetype":"Variant","filenamebase":"getInstanceCodes_Method","fqnprefix":"VSID.BSXdocumentationUtils","qn":"getInstanceCodes","codesample":"","signaturecode":10304,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"()","signature":"Static Public Function getInstanceCodes() As Variant","modifiers":"Static Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets Instance Codes for CodeElement instance types (VSID, VSE, Library, Class, Type, Property, Event, Function, Sub)&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets Instance Codes for CodeElement instance types (VSID, VSE, Library, Class, Type, Property, Event, Function, Sub)","inlinecomment":" \t &apos; Gets Instance Codes for CodeElement instance types (VSID, VSE, Library, Class, Type, Property, Event, Function, Sub)","codesamplehtml":"", "attributes":["Static"], "signatureelements":["Static","Public","Function"]},{"label":"getVSIDwriter","comment":"Gets the VSIDwriter object for the session. ","valuetype":"VSIDwriter","filenamebase":"getVSIDwriter_Method","fqnprefix":"VSID.BSXdocumentationUtils","qn":"getVSIDwriter","codesample":"","signaturecode":10304,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Static Public Function getVSIDwriter() As VSIDwriter","modifiers":"Static Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets the VSIDwriter object for the session. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets the VSIDwriter object for the session. ","inlinecomment":" \t &apos; Gets the VSIDwriter object for the session. ","codesamplehtml":"", "attributes":["Static"], "signatureelements":["Static","Public","Function"]}], "classes":[{"classname":"CodeElement","comment":"Represents a block of code ","valuetype":"ValuedElement","filenamebase":"CodeElement_ObjectClass","fqnprefix":"VSID.BSXdocumentationUtils","qn":"CodeElement","codesample":"","signaturecode":3072,"instancecode":1024,"parentclassname":"ValuedElement","classtype":"Derived","classderivetype":"ValuedElement","projectid":"7D1A2972E666A25885258AE100482F18","classid":"15C5BCF3063CCBF085258AE1006A7A7A","signature":"Public Class CodeElement As ValuedElement","modifiers":"Public","classname":"CodeElement","constructorsignature":"Public Sub New(Parent As CodeElement, Label As String, ValueType As String, Comment As String, CodeSample As String, SignatureCode As Long)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Represents a block of code &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Represents a block of code ","inlinecomment":" \t &apos; Represents a block of code ","codesamplehtml":"", "methods":[{"label":"CodeSample","comment":"Sample Code for the CodeElement","valuetype":"String","filenamebase":"CodeSample_Method","fqnprefix":"VSID.BSXdocumentationUtils.CodeElement","qn":"Get.CodeSample","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get CodeSample As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Sample Code for the CodeElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Sample Code for the CodeElement","inlinecomment":" \t &apos; Sample Code for the CodeElement","parentclassname":"CodeElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"CodeSampleHTML","comment":"HTML Sample Code for the CodeElement","valuetype":"String","filenamebase":"CodeSampleHTML_Method","fqnprefix":"VSID.BSXdocumentationUtils.CodeElement","qn":"Get.CodeSampleHTML","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get CodeSampleHTML As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;HTML Sample Code for the CodeElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"HTML Sample Code for the CodeElement","inlinecomment":" \t &apos; HTML Sample Code for the CodeElement","parentclassname":"CodeElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isClass","comment":"Flag indicating if the CodeElement represents a Class","valuetype":"Boolean","filenamebase":"isClass_Method","fqnprefix":"VSID.BSXdocumentationUtils.CodeElement","qn":"Get.isClass","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isClass As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the CodeElement represents a Class&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the CodeElement represents a Class","inlinecomment":" \t &apos; Flag indicating if the CodeElement represents a Class","parentclassname":"CodeElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isLibrary","comment":"Flag indicating if the CodeElement represents a Library","valuetype":"Boolean","filenamebase":"isLibrary_Method","fqnprefix":"VSID.BSXdocumentationUtils.CodeElement","qn":"Get.isLibrary","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isLibrary As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the CodeElement represents a Library&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the CodeElement represents a Library","inlinecomment":" \t &apos; Flag indicating if the CodeElement represents a Library","parentclassname":"CodeElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isType","comment":"Flag indicating if the CodeElement represents a Type","valuetype":"Boolean","filenamebase":"isType_Method","fqnprefix":"VSID.BSXdocumentationUtils.CodeElement","qn":"Get.isType","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isType As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the CodeElement represents a Type&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the CodeElement represents a Type","inlinecomment":" \t &apos; Flag indicating if the CodeElement represents a Type","parentclassname":"CodeElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isVSE","comment":"Flag indicating if the CodeElement represents a VSE","valuetype":"Boolean","filenamebase":"isVSE_Method","fqnprefix":"VSID.BSXdocumentationUtils.CodeElement","qn":"Get.isVSE","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isVSE As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the CodeElement represents a VSE&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the CodeElement represents a VSE","inlinecomment":" \t &apos; Flag indicating if the CodeElement represents a VSE","parentclassname":"CodeElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isVSID","comment":"Flag indicating if the CodeElement represents a VSID","valuetype":"Boolean","filenamebase":"isVSID_Method","fqnprefix":"VSID.BSXdocumentationUtils.CodeElement","qn":"Get.isVSID","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isVSID As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the CodeElement represents a VSID&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the CodeElement represents a VSID","inlinecomment":" \t &apos; Flag indicating if the CodeElement represents a VSID","parentclassname":"CodeElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"InstanceCode","comment":"Long code indicating the Instance Code for the Type (such as Sub, Function, or Property)","valuetype":"Long","filenamebase":"InstanceCode_Method","fqnprefix":"VSID.BSXdocumentationUtils.CodeElement","qn":"Get.InstanceCode","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get InstanceCode As Long","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Long code indicating the Instance Code for the Type (such as Sub, Function, or Property)&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Long code indicating the Instance Code for the Type (such as Sub, Function, or Property)","inlinecomment":" \t &apos; Long code indicating the Instance Code for the Type (such as Sub, Function, or Property)","parentclassname":"CodeElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"InstanceType","comment":"String representing the Instance Type (such as Sub, Function, or Property)","valuetype":"String","filenamebase":"InstanceType_Method","fqnprefix":"VSID.BSXdocumentationUtils.CodeElement","qn":"Get.InstanceType","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get InstanceType As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;String representing the Instance Type (such as Sub, Function, or Property)&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"String representing the Instance Type (such as Sub, Function, or Property)","inlinecomment":" \t &apos; String representing the Instance Type (such as Sub, Function, or Property)","parentclassname":"CodeElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Modifiers","comment":"Generated Modifiers for the object \n Modifiers are generated based upon the SignatureCode set when constructing the object.","valuetype":"String","filenamebase":"Modifiers_Method","fqnprefix":"VSID.BSXdocumentationUtils.CodeElement","qn":"Get.Modifiers","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Modifiers As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Generated Modifiers for the object &lt;br /&gt; Modifiers are generated based upon the SignatureCode set when constructing the object.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Generated Modifiers for the object &lt;br /&gt; Modifiers are generated based upon the SignatureCode set when constructing the object.","inlinecomment":" \t &apos; Generated Modifiers for the object \n Modifiers are generated based upon the SignatureCode set when constructing the object.","parentclassname":"CodeElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Parent","comment":"Parent object for the CodeElement","valuetype":"CodeElement","filenamebase":"Parent_Method","fqnprefix":"VSID.BSXdocumentationUtils.CodeElement","qn":"Get.Parent","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Parent As CodeElement","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Parent object for the CodeElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Parent object for the CodeElement","inlinecomment":" \t &apos; Parent object for the CodeElement","parentclassname":"CodeElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"ParentClass","comment":"Parent ObjectClass for the CodeElement","valuetype":"ObjectClass","filenamebase":"ParentClass_Method","fqnprefix":"VSID.BSXdocumentationUtils.CodeElement","qn":"Get.ParentClass","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get ParentClass As ObjectClass","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Parent ObjectClass for the CodeElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Parent ObjectClass for the CodeElement","inlinecomment":" \t &apos; Parent ObjectClass for the CodeElement","parentclassname":"CodeElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"ParentClassName","comment":"Parent Class Name of the Class","valuetype":"String","filenamebase":"ParentClassName_Method","fqnprefix":"VSID.BSXdocumentationUtils.CodeElement","qn":"Get.ParentClassName","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get ParentClassName As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Parent Class Name of the Class&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Parent Class Name of the Class","inlinecomment":" \t &apos; Parent Class Name of the Class","parentclassname":"CodeElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Signature","comment":"Programnatic signature of the Object","valuetype":"String","filenamebase":"Signature_Method","fqnprefix":"VSID.BSXdocumentationUtils.CodeElement","qn":"Get.Signature","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Signature As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Programnatic signature of the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Programnatic signature of the Object","inlinecomment":" \t &apos; Programnatic signature of the Object","parentclassname":"CodeElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"SignatureCode","comment":"Long code indicating the Instance Element Type (such as Sub, Function, or Property) along with all modifiers (such as Public, Private, etc) of the Signature","valuetype":"Long","filenamebase":"SignatureCode_Method","fqnprefix":"VSID.BSXdocumentationUtils.CodeElement","qn":"Get.SignatureCode","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get SignatureCode As Long","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Long code indicating the Instance Element Type (such as Sub, Function, or Property) along with all modifiers (such as Public, Private, etc) of the Signature&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Long code indicating the Instance Element Type (such as Sub, Function, or Property) along with all modifiers (such as Public, Private, etc) of the Signature","inlinecomment":" \t &apos; Long code indicating the Instance Element Type (such as Sub, Function, or Property) along with all modifiers (such as Public, Private, etc) of the Signature","parentclassname":"CodeElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"SignatureElements","comment":"Signature Elements for the object. \nSignature Elements are generated based upon the SignatureCode passed in when constructing the object. ","valuetype":"String","filenamebase":"SignatureElements_Method","fqnprefix":"VSID.BSXdocumentationUtils.CodeElement","qn":"Get.SignatureElements","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get SignatureElements As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Signature Elements for the object. &lt;br /&gt;Signature Elements are generated based upon the SignatureCode passed in when constructing the object. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Signature Elements for the object. &lt;br /&gt;Signature Elements are generated based upon the SignatureCode passed in when constructing the object. ","inlinecomment":" \t &apos; Signature Elements for the object. \nSignature Elements are generated based upon the SignatureCode passed in when constructing the object. ","parentclassname":"CodeElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"SignatureModifiers","comment":"Signature Modifiers for the object. \nSignature Modifiers are generated based upon the SignatureCode used when constructing the object.","valuetype":"String","filenamebase":"SignatureModifiers_Method","fqnprefix":"VSID.BSXdocumentationUtils.CodeElement","qn":"Get.SignatureModifiers","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get SignatureModifiers As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Signature Modifiers for the object. &lt;br /&gt;Signature Modifiers are generated based upon the SignatureCode used when constructing the object.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Signature Modifiers for the object. &lt;br /&gt;Signature Modifiers are generated based upon the SignatureCode used when constructing the object.","inlinecomment":" \t &apos; Signature Modifiers for the object. \nSignature Modifiers are generated based upon the SignatureCode used when constructing the object.","parentclassname":"CodeElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"SignaturePrefix","comment":"Signature Prefix for the object. \nConcatenation of the object&amp;apos;s Signature Elements and Label delimited by a blank space","valuetype":"String","filenamebase":"SignaturePrefix_Method","fqnprefix":"VSID.BSXdocumentationUtils.CodeElement","qn":"Get.SignaturePrefix","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get SignaturePrefix As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Signature Prefix for the object. &lt;br /&gt;Concatenation of the object&amp;apos;s Signature Elements and Label delimited by a blank space&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Signature Prefix for the object. &lt;br /&gt;Concatenation of the object&amp;apos;s Signature Elements and Label delimited by a blank space","inlinecomment":" \t &apos; Signature Prefix for the object. \nConcatenation of the object&amp;apos;s Signature Elements and Label delimited by a blank space","parentclassname":"CodeElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"New","comment":"Constructor","valuetype":"","filenamebase":"New_Method","fqnprefix":"VSID.BSXdocumentationUtils.CodeElement","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"parentconstructor":"ValuedElement(||, Label, ValueType, Comment)","argumentsuffix":"(Parent As CodeElement, Label As String, ValueType As String, Comment As String, CodeSample As String, SignatureCode As Long)","signature":"Public Sub New(Parent As CodeElement, Label As String, ValueType As String, Comment As String, CodeSample As String, SignatureCode As Long)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructor&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructor","inlinecomment":" \t &apos; Constructor","parentclassname":"CodeElement","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"Parent","comment":"Parent Object for the Object","valuetype":"CodeElement","filenamebase":"Parent_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsCodeElementNew","qn":"Parent","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Parent Object for the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Parent Object for the Object","inlinecomment":" \t &apos; Parent Object for the Object"},{"label":"Label","comment":"Label Label (Name) for the CodeElement","valuetype":"String","filenamebase":"Label_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsCodeElementNew","qn":"Label","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Label Label (Name) for the CodeElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Label Label (Name) for the CodeElement","inlinecomment":" \t &apos; Label Label (Name) for the CodeElement"},{"label":"ValueType","comment":"Value Type of the CodeElement","valuetype":"String","filenamebase":"ValueType_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsCodeElementNew","qn":"ValueType","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Value Type of the CodeElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Value Type of the CodeElement","inlinecomment":" \t &apos; Value Type of the CodeElement"},{"label":"Comment","comment":"Comment about the CodeElement","valuetype":"String","filenamebase":"Comment_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsCodeElementNew","qn":"Comment","argumentindex":4,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Comment about the CodeElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Comment about the CodeElement","inlinecomment":" \t &apos; Comment about the CodeElement"},{"label":"CodeSample","comment":"any sample code for the CodeElement","valuetype":"String","filenamebase":"CodeSample_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsCodeElementNew","qn":"CodeSample","argumentindex":5,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;any sample code for the CodeElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"any sample code for the CodeElement","inlinecomment":" \t &apos; any sample code for the CodeElement"},{"label":"SignatureCode","comment":"Numeric code indicating the Object Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the CodeElement","valuetype":"Long","filenamebase":"SignatureCode_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsCodeElementNew","qn":"SignatureCode","argumentindex":6,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Numeric code indicating the Object Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the CodeElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Numeric code indicating the Object Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the CodeElement","inlinecomment":" \t &apos; Numeric code indicating the Object Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the CodeElement"}]}]},{"classname":"Constant","comment":"Represents a Constant ","valuetype":"CodeElement","filenamebase":"Constant_ObjectClass","fqnprefix":"VSID.BSXdocumentationUtils","qn":"Constant","codesample":"","signaturecode":3072,"instancecode":1024,"parentclassname":"CodeElement","classtype":"Derived","classderivetype":"CodeElement","projectid":"7D1A2972E666A25885258AE100482F18","classid":"37B896B78E2FF8B485258AE1006C9330","signature":"Public Class Constant As CodeElement","modifiers":"Public","classname":"Constant","constructorsignature":"Public Sub New(Parent As CodeElement, Label As String, Value As String, Comment As String, SignatureCode As Long)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Represents a Constant &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Represents a Constant ","inlinecomment":" \t &apos; Represents a Constant ","codesamplehtml":"", "methods":[{"label":"New","comment":"","valuetype":"","filenamebase":"New_Method","fqnprefix":"VSID.BSXdocumentationUtils.Constant","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"parentconstructor":"CodeElement(Parent, Label, ||, Comment, ||, SignatureCode)","argumentsuffix":"(Parent As CodeElement, Label As String, Value As String, Comment As String, SignatureCode As Long)","signature":"Public Sub New(Parent As CodeElement, Label As String, Value As String, Comment As String, SignatureCode As Long)","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"Constant","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"Parent","comment":"Parent Object for the Object","valuetype":"CodeElement","filenamebase":"Parent_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsConstantNew","qn":"Parent","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Parent Object for the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Parent Object for the Object","inlinecomment":" \t &apos; Parent Object for the Object"},{"label":"Label","comment":"Label (Name) for the Constant","valuetype":"String","filenamebase":"Label_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsConstantNew","qn":"Label","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Label (Name) for the Constant&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Label (Name) for the Constant","inlinecomment":" \t &apos; Label (Name) for the Constant"},{"label":"Value","comment":"Value of the Constant ","valuetype":"String","filenamebase":"Value_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsConstantNew","qn":"Value","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Value of the Constant &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Value of the Constant ","inlinecomment":" \t &apos; Value of the Constant "},{"label":"Comment","comment":"Comment about the Constant","valuetype":"String","filenamebase":"Comment_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsConstantNew","qn":"Comment","argumentindex":4,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Comment about the Constant&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Comment about the Constant","inlinecomment":" \t &apos; Comment about the Constant"},{"label":"SignatureCode","comment":"Long indicating the Method Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the Object","valuetype":"Long","filenamebase":"SignatureCode_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsConstantNew","qn":"SignatureCode","argumentindex":5,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Long indicating the Method Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Long indicating the Method Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the Object","inlinecomment":" \t &apos; Long indicating the Method Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the Object"}]}]},{"classname":"Context","comment":"Context Carrier","valuetype":"","filenamebase":"Context_ObjectClass","fqnprefix":"VSID.BSXdocumentationUtils","qn":"Context","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","projectid":"7D1A2972E666A25885258AE100482F18","classid":"433FF0C0AB04462C85258AE10070DB1C","signature":"Public Class Context","modifiers":"Public","classname":"Context","parentclassname":"None","constructorsignature":"Public Sub New()","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Context Carrier&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Context Carrier","inlinecomment":" \t &apos; Context Carrier","codesamplehtml":"", "methods":[{"label":"GeneratingAPIdoc","comment":"Flag indicating if currently generating API documentation","valuetype":"Boolean","filenamebase":"GeneratingAPIdoc_Method","fqnprefix":"VSID.BSXdocumentationUtils.Context","qn":"Get.GeneratingAPIdoc","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get GeneratingAPIdoc As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if currently generating API documentation&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if currently generating API documentation","inlinecomment":" \t &apos; Flag indicating if currently generating API documentation","parentclassname":"Context","codesamplehtml":"", "signatureelements":["Public","Property","Get"]},{"label":"GeneratingScript","comment":"Flag indicating if currently generating Script Code stubs ","valuetype":"Boolean","filenamebase":"GeneratingScript_Method","fqnprefix":"VSID.BSXdocumentationUtils.Context","qn":"Get.GeneratingScript","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get GeneratingScript As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if currently generating Script Code stubs &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if currently generating Script Code stubs ","inlinecomment":" \t &apos; Flag indicating if currently generating Script Code stubs ","parentclassname":"Context","codesamplehtml":"", "signatureelements":["Public","Property","Get"]},{"label":"GeneratingAPIdoc","comment":"Flag indicating if currently generating API documentation","valuetype":"Boolean","filenamebase":"GeneratingAPIdoc_Method","fqnprefix":"VSID.BSXdocumentationUtils.Context","qn":"Set.GeneratingAPIdoc","codesample":"","signaturecode":2308,"instancecode":256,"argumentsuffix":"","signature":"Public Property Set GeneratingAPIdoc As Boolean","modifiers":"Public Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if currently generating API documentation&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if currently generating API documentation","inlinecomment":" \t &apos; Flag indicating if currently generating API documentation","parentclassname":"Context","codesamplehtml":"", "signatureelements":["Public","Property","Set"]},{"label":"GeneratingScript","comment":"Flag indicating if currently generating Script Code stubs ","valuetype":"Boolean","filenamebase":"GeneratingScript_Method","fqnprefix":"VSID.BSXdocumentationUtils.Context","qn":"Set.GeneratingScript","codesample":"","signaturecode":2308,"instancecode":256,"argumentsuffix":"","signature":"Public Property Set GeneratingScript As Boolean","modifiers":"Public Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if currently generating Script Code stubs &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if currently generating Script Code stubs ","inlinecomment":" \t &apos; Flag indicating if currently generating Script Code stubs ","parentclassname":"Context","codesamplehtml":"", "signatureelements":["Public","Property","Set"]},{"label":"New","comment":"","valuetype":"Context","filenamebase":"New_Method","fqnprefix":"VSID.BSXdocumentationUtils.Context","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub New()","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"Context","codesamplehtml":"", "signatureelements":["Public","Sub"]}]},{"classname":"ExceptionElement","comment":"Represents a single programmatic Exception ","valuetype":"LabeledElement","filenamebase":"ExceptionElement_ObjectClass","fqnprefix":"VSID.BSXdocumentationUtils","qn":"ExceptionElement","codesample":"","signaturecode":3072,"instancecode":1024,"parentclassname":"LabeledElement","classtype":"Derived","classderivetype":"LabeledElement","projectid":"7D1A2972E666A25885258AE100482F18","classid":"4C77B0AE05725F1E85258AE10068C029","signature":"Public Class ExceptionElement As LabeledElement","modifiers":"Public","classname":"ExceptionElement","constructorsignature":"Public Sub New(Label As String, Comment As String, ErrCode As Integer)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Represents a single programmatic Exception &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Represents a single programmatic Exception ","inlinecomment":" \t &apos; Represents a single programmatic Exception ","codesamplehtml":"", "methods":[{"label":"ErrCode","comment":"Error Code for the ExceptionElement","valuetype":"Integer","filenamebase":"ErrCode_Method","fqnprefix":"VSID.BSXdocumentationUtils.ExceptionElement","qn":"Get.ErrCode","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get ErrCode As Integer","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Error Code for the ExceptionElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Error Code for the ExceptionElement","inlinecomment":" \t &apos; Error Code for the ExceptionElement","parentclassname":"ExceptionElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"New","comment":"Constructor","valuetype":"","filenamebase":"New_Method","fqnprefix":"VSID.BSXdocumentationUtils.ExceptionElement","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"parentconstructor":"LabeledElement(Label, Comment)","argumentsuffix":"(Label As String, Comment As String, ErrCode As Integer)","signature":"Public Sub New(Label As String, Comment As String, ErrCode As Integer)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructor&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructor","inlinecomment":" \t &apos; Constructor","parentclassname":"ExceptionElement","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"Label","comment":"Label (Name) for the ExceptionElement","valuetype":"String","filenamebase":"Label_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsExceptionElementNew","qn":"Label","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Label (Name) for the ExceptionElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Label (Name) for the ExceptionElement","inlinecomment":" \t &apos; Label (Name) for the ExceptionElement"},{"label":"Comment","comment":"Comment about the ExceptionElement","valuetype":"String","filenamebase":"Comment_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsExceptionElementNew","qn":"Comment","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Comment about the ExceptionElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Comment about the ExceptionElement","inlinecomment":" \t &apos; Comment about the ExceptionElement"},{"label":"ErrCode","comment":"Numeric Error Code for the ExceptionElement ","valuetype":"Integer","filenamebase":"ErrCode_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsExceptionElementNew","qn":"ErrCode","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Numeric Error Code for the ExceptionElement &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Numeric Error Code for the ExceptionElement ","inlinecomment":" \t &apos; Numeric Error Code for the ExceptionElement "}]}]},{"classname":"LabeledElement","comment":"Represents a single programmatic labeled element","valuetype":"StringList","filenamebase":"LabeledElement_ObjectClass","fqnprefix":"VSID.BSXdocumentationUtils","qn":"LabeledElement","codesample":"","signaturecode":3072,"instancecode":1024,"parentclassname":"StringList","classtype":"Derived","classderivetype":"StringList","projectid":"7D1A2972E666A25885258AE100482F18","classid":"0ED025D83AB90DA285258AE1005CB33A","signature":"Public Class LabeledElement As StringList","modifiers":"Public","classname":"LabeledElement","constructorsignature":"Public Sub New(Label As String, Comment As String)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Represents a single programmatic labeled element&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Represents a single programmatic labeled element","inlinecomment":" \t &apos; Represents a single programmatic labeled element","codesamplehtml":"", "methods":[{"label":"apiComment","comment":"HTML Comment about the LabeledElement","valuetype":"String","filenamebase":"apiComment_Method","fqnprefix":"VSID.BSXdocumentationUtils.LabeledElement","qn":"Get.apiComment","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get apiComment As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;HTML Comment about the LabeledElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"HTML Comment about the LabeledElement","inlinecomment":" \t &apos; HTML Comment about the LabeledElement","parentclassname":"LabeledElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"apiCommentBlock","comment":"HTML Comment Block about the LabeledElement","valuetype":"String","filenamebase":"apiCommentBlock_Method","fqnprefix":"VSID.BSXdocumentationUtils.LabeledElement","qn":"Get.apiCommentBlock","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get apiCommentBlock As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;HTML Comment Block about the LabeledElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"HTML Comment Block about the LabeledElement","inlinecomment":" \t &apos; HTML Comment Block about the LabeledElement","parentclassname":"LabeledElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"apiDoc","comment":"Generated API Documentation about the object.","valuetype":"StringsCarrier","filenamebase":"apiDoc_Method","fqnprefix":"VSID.BSXdocumentationUtils.LabeledElement","qn":"Get.apiDoc","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get apiDoc As StringsCarrier","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Generated API Documentation about the object.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Generated API Documentation about the object.","inlinecomment":" \t &apos; Generated API Documentation about the object.","parentclassname":"LabeledElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Comment","comment":"Comment about the LabeledElement","valuetype":"String","filenamebase":"Comment_Method","fqnprefix":"VSID.BSXdocumentationUtils.LabeledElement","qn":"Get.Comment","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Comment As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Comment about the LabeledElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Comment about the LabeledElement","inlinecomment":" \t &apos; Comment about the LabeledElement","parentclassname":"LabeledElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Label","comment":"Label (Name) for the LabeledElement","valuetype":"String","filenamebase":"Label_Method","fqnprefix":"VSID.BSXdocumentationUtils.LabeledElement","qn":"Get.Label","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Label As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Label (Name) for the LabeledElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Label (Name) for the LabeledElement","inlinecomment":" \t &apos; Label (Name) for the LabeledElement","parentclassname":"LabeledElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Script","comment":"Generated Script Source Code for the object","valuetype":"StringQueue","filenamebase":"Script_Method","fqnprefix":"VSID.BSXdocumentationUtils.LabeledElement","qn":"Get.Script","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Script As StringQueue","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Generated Script Source Code for the object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Generated Script Source Code for the object","inlinecomment":" \t &apos; Generated Script Source Code for the object","parentclassname":"LabeledElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"TaggedStringsCarriers","comment":"Tagged StringsCarriers for the Object. \n\t\tk = Tag\n\t\tv = StringsCarrier  ","valuetype":"StringsCarrierList","filenamebase":"TaggedStringsCarriers_Method","fqnprefix":"VSID.BSXdocumentationUtils.LabeledElement","qn":"Get.TaggedStringsCarriers","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get TaggedStringsCarriers As StringsCarrierList","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Tagged StringsCarriers for the Object. &lt;br /&gt;\t\tk = Tag&lt;br /&gt;\t\tv = StringsCarrier  &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Tagged StringsCarriers for the Object. &lt;br /&gt;\t\tk = Tag&lt;br /&gt;\t\tv = StringsCarrier  ","inlinecomment":" \t &apos; Tagged StringsCarriers for the Object. \n\t\tk = Tag\n\t\tv = StringsCarrier  ","parentclassname":"LabeledElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"New","comment":"Constructor","valuetype":"","filenamebase":"New_Method","fqnprefix":"VSID.BSXdocumentationUtils.LabeledElement","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(Label As String, Comment As String)","signature":"Public Sub New(Label As String, Comment As String)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructor&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructor","inlinecomment":" \t &apos; Constructor","parentclassname":"LabeledElement","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"Label","comment":"Label (Name) for the LabeledEle","valuetype":"String","filenamebase":"Label_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsLabeledElementNew","qn":"Label","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Label (Name) for the LabeledEle&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Label (Name) for the LabeledEle","inlinecomment":" \t &apos; Label (Name) for the LabeledEle"},{"label":"Comment","comment":"Comment about the LabeledElement","valuetype":"String","filenamebase":"Comment_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsLabeledElementNew","qn":"Comment","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Comment about the LabeledElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Comment about the LabeledElement","inlinecomment":" \t &apos; Comment about the LabeledElement"}]}]},{"classname":"Library","comment":"Represents a VoltScript Library","valuetype":"Project","filenamebase":"Library_ObjectClass","fqnprefix":"VSID.BSXdocumentationUtils","qn":"Library","codesample":"","signaturecode":3072,"instancecode":1024,"parentclassname":"Project","classtype":"Derived","classderivetype":"Project","projectid":"7D1A2972E666A25885258AE100482F18","classid":"1558EAF321B3CB4085258AE10073375E","signature":"Public Class Library As Project","modifiers":"Public","classname":"Library","constructorsignature":"Public Sub New(Parent As CodeElement, LibraryName As String, Summary As String, Description As String)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Represents a VoltScript Library&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Represents a VoltScript Library","inlinecomment":" \t &apos; Represents a VoltScript Library","codesamplehtml":"", "methods":[{"label":"removeIncludeExternalLibrary","comment":"removes an External Library Name frome the &amp;quot;%Include&amp;quot; option of the object","valuetype":"Boolean","filenamebase":"removeIncludeExternalLibrary_Method","fqnprefix":"VSID.BSXdocumentationUtils.Library","qn":"removeIncludeExternalLibrary","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(libraryname As String)","signature":"Public Function removeIncludeExternalLibrary(libraryname As String) As Boolean","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;removes an External Library Name frome the &amp;quot;%Include&amp;quot; option of the object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"removes an External Library Name frome the &amp;quot;%Include&amp;quot; option of the object","inlinecomment":" \t &apos; removes an External Library Name frome the &amp;quot;%Include&amp;quot; option of the object","parentclassname":"Library","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"libraryname","comment":"Library to be removed. ","valuetype":"String","filenamebase":"libraryname_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsLibraryremoveIncludeExternalLibrary","qn":"libraryname","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Library to be removed. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Library to be removed. ","inlinecomment":" \t &apos; Library to be removed. "}]},{"label":"removeUseLibrary","comment":"removes a Library Name frome the &amp;quot;Use&amp;quot; option of the object","valuetype":"Boolean","filenamebase":"removeUseLibrary_Method","fqnprefix":"VSID.BSXdocumentationUtils.Library","qn":"removeUseLibrary","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(libraryname As String)","signature":"Public Function removeUseLibrary(libraryname As String) As Boolean","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;removes a Library Name frome the &amp;quot;Use&amp;quot; option of the object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"removes a Library Name frome the &amp;quot;Use&amp;quot; option of the object","inlinecomment":" \t &apos; removes a Library Name frome the &amp;quot;Use&amp;quot; option of the object","parentclassname":"Library","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"libraryname","comment":"Library to be removed. ","valuetype":"String","filenamebase":"libraryname_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsLibraryremoveUseLibrary","qn":"libraryname","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Library to be removed. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Library to be removed. ","inlinecomment":" \t &apos; Library to be removed. "}]},{"label":"removeUseVSE","comment":"removes an VSE Name frome the &amp;quot;UseVSE&amp;quot; option of the object","valuetype":"Boolean","filenamebase":"removeUseVSE_Method","fqnprefix":"VSID.BSXdocumentationUtils.Library","qn":"removeUseVSE","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(lsxname As String)","signature":"Public Function removeUseVSE(lsxname As String) As Boolean","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;removes an VSE Name frome the &amp;quot;UseVSE&amp;quot; option of the object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"removes an VSE Name frome the &amp;quot;UseVSE&amp;quot; option of the object","inlinecomment":" \t &apos; removes an VSE Name frome the &amp;quot;UseVSE&amp;quot; option of the object","parentclassname":"Library","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"lsxname","comment":"VSE to be removed. ","valuetype":"String","filenamebase":"lsxname_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsLibraryremoveUseVSE","qn":"lsxname","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;VSE to be removed. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"VSE to be removed. ","inlinecomment":" \t &apos; VSE to be removed. "}]},{"label":"hasIncludeExternalLibraries","comment":"Flag indicating if the object has IncludeExternalLibraries ","valuetype":"Boolean","filenamebase":"hasIncludeExternalLibraries_Method","fqnprefix":"VSID.BSXdocumentationUtils.Library","qn":"Get.hasIncludeExternalLibraries","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get hasIncludeExternalLibraries As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the object has IncludeExternalLibraries &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the object has IncludeExternalLibraries ","inlinecomment":" \t &apos; Flag indicating if the object has IncludeExternalLibraries ","parentclassname":"Library","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"hasMajorElements","comment":"Overridden to check for Types and Classes\n\t\t\n@see MajorElement.Classes ","valuetype":"Boolean","filenamebase":"hasMajorElements_Method","fqnprefix":"VSID.BSXdocumentationUtils.Library","qn":"Get.hasMajorElements","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get hasMajorElements As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Overridden to check for Types and Classes&lt;br /&gt;\t\t&lt;br /&gt;@see MajorElement.Classes &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Overridden to check for Types and Classes&lt;br /&gt;\t\t&lt;br /&gt;@see MajorElement.Classes ","inlinecomment":" \t &apos; Overridden to check for Types and Classes\n\t\t\n@see MajorElement.Classes ","parentclassname":"Library","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"hasOptions","comment":"Flag indicating if the Library has Options","valuetype":"Boolean","filenamebase":"hasOptions_Method","fqnprefix":"VSID.BSXdocumentationUtils.Library","qn":"Get.hasOptions","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get hasOptions As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Library has Options&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Library has Options","inlinecomment":" \t &apos; Flag indicating if the Library has Options","parentclassname":"Library","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"hasTypes","comment":"Flag indicating if the Object has Types ","valuetype":"Boolean","filenamebase":"hasTypes_Method","fqnprefix":"VSID.BSXdocumentationUtils.Library","qn":"Get.hasTypes","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get hasTypes As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Object has Types &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Object has Types ","inlinecomment":" \t &apos; Flag indicating if the Object has Types ","parentclassname":"Library","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"hasUseLibraries","comment":"Flag indicating if the object has UseLibraries","valuetype":"Boolean","filenamebase":"hasUseLibraries_Method","fqnprefix":"VSID.BSXdocumentationUtils.Library","qn":"Get.hasUseLibraries","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get hasUseLibraries As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the object has UseLibraries&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the object has UseLibraries","inlinecomment":" \t &apos; Flag indicating if the object has UseLibraries","parentclassname":"Library","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"hasUseVSEs","comment":"Flag indicating if the object has UseVSE ","valuetype":"Boolean","filenamebase":"hasUseVSEs_Method","fqnprefix":"VSID.BSXdocumentationUtils.Library","qn":"Get.hasUseVSEs","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get hasUseVSEs As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the object has UseVSE &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the object has UseVSE ","inlinecomment":" \t &apos; Flag indicating if the object has UseVSE ","parentclassname":"Library","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"IncludeExternalLibraries","comment":"External Libraries needed by this Library \n\t\t\n@return StringsCarrier containing names of External Libraries to be included","valuetype":"StringQueue","filenamebase":"IncludeExternalLibraries_Method","fqnprefix":"VSID.BSXdocumentationUtils.Library","qn":"Get.IncludeExternalLibraries","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get IncludeExternalLibraries As StringQueue","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;External Libraries needed by this Library &lt;br /&gt;\t\t&lt;br /&gt;@return StringsCarrier containing names of External Libraries to be included&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"External Libraries needed by this Library &lt;br /&gt;\t\t&lt;br /&gt;@return StringsCarrier containing names of External Libraries to be included","inlinecomment":" \t &apos; External Libraries needed by this Library \n\t\t\n@return StringsCarrier containing names of External Libraries to be included","parentclassname":"Library","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"LibraryName","comment":"Name of the Library ","valuetype":"String","filenamebase":"LibraryName_Method","fqnprefix":"VSID.BSXdocumentationUtils.Library","qn":"Get.LibraryName","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get LibraryName As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the Library &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the Library ","inlinecomment":" \t &apos; Name of the Library ","parentclassname":"Library","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"MajorElements","comment":"Array containing MajorElements contained by the Object\nNote: The only MajorElement objects that can be contained by an explicit MajorElement object are ObjectClass objects. \nTherefore, this Property is a wrapper for the MajorElement.Classes property. \n\t\t\n@see MajorElement.Classes ","valuetype":"Variant","filenamebase":"MajorElements_Method","fqnprefix":"VSID.BSXdocumentationUtils.Library","qn":"Get.MajorElements","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get MajorElements As Variant","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Array containing MajorElements contained by the Object&lt;br /&gt;Note: The only MajorElement objects that can be contained by an explicit MajorElement object are ObjectClass objects. &lt;br /&gt;Therefore, this Property is a wrapper for the MajorElement.Classes property. &lt;br /&gt;\t\t&lt;br /&gt;@see MajorElement.Classes &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Array containing MajorElements contained by the Object&lt;br /&gt;Note: The only MajorElement objects that can be contained by an explicit MajorElement object are ObjectClass objects. &lt;br /&gt;Therefore, this Property is a wrapper for the MajorElement.Classes property. &lt;br /&gt;\t\t&lt;br /&gt;@see MajorElement.Classes ","inlinecomment":" \t &apos; Array containing MajorElements contained by the Object\nNote: The only MajorElement objects that can be contained by an explicit MajorElement object are ObjectClass objects. \nTherefore, this Property is a wrapper for the MajorElement.Classes property. \n\t\t\n@see MajorElement.Classes ","parentclassname":"Library","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Options","comment":"String Array containing Options for the Library","valuetype":"Variant","filenamebase":"Options_Method","fqnprefix":"VSID.BSXdocumentationUtils.Library","qn":"Get.Options","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Options As Variant","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;String Array containing Options for the Library&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"String Array containing Options for the Library","inlinecomment":" \t &apos; String Array containing Options for the Library","parentclassname":"Library","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Types","comment":"Array containing Types contained by the Object","valuetype":"Variant","filenamebase":"Types_Method","fqnprefix":"VSID.BSXdocumentationUtils.Library","qn":"Get.Types","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Types As Variant","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Array containing Types contained by the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Array containing Types contained by the Object","inlinecomment":" \t &apos; Array containing Types contained by the Object","parentclassname":"Library","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"UseLibraries","comment":"Libraries Used by this Library\n\t\t\n@return StringsCarrier containing names of Libraries used by this Library","valuetype":"StringQueue","filenamebase":"UseLibraries_Method","fqnprefix":"VSID.BSXdocumentationUtils.Library","qn":"Get.UseLibraries","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get UseLibraries As StringQueue","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Libraries Used by this Library&lt;br /&gt;\t\t&lt;br /&gt;@return StringsCarrier containing names of Libraries used by this Library&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Libraries Used by this Library&lt;br /&gt;\t\t&lt;br /&gt;@return StringsCarrier containing names of Libraries used by this Library","inlinecomment":" \t &apos; Libraries Used by this Library\n\t\t\n@return StringsCarrier containing names of Libraries used by this Library","parentclassname":"Library","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"UseVSEs","comment":"VSEs used by the Library\n\t\t\n@return StringQueue containing names of VSEs used by this Libary","valuetype":"StringQueue","filenamebase":"UseVSEs_Method","fqnprefix":"VSID.BSXdocumentationUtils.Library","qn":"Get.UseVSEs","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get UseVSEs As StringQueue","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;VSEs used by the Library&lt;br /&gt;\t\t&lt;br /&gt;@return StringQueue containing names of VSEs used by this Libary&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"VSEs used by the Library&lt;br /&gt;\t\t&lt;br /&gt;@return StringQueue containing names of VSEs used by this Libary","inlinecomment":" \t &apos; VSEs used by the Library\n\t\t\n@return StringQueue containing names of VSEs used by this Libary","parentclassname":"Library","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"appendIncludeExternalLibrary","comment":"appends an External Library Name to the &amp;quot;%Include&amp;quot; option of the object","valuetype":"","filenamebase":"appendIncludeExternalLibrary_Method","fqnprefix":"VSID.BSXdocumentationUtils.Library","qn":"appendIncludeExternalLibrary","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(library As String)","signature":"Public Sub appendIncludeExternalLibrary(library As String)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;appends an External Library Name to the &amp;quot;%Include&amp;quot; option of the object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"appends an External Library Name to the &amp;quot;%Include&amp;quot; option of the object","inlinecomment":" \t &apos; appends an External Library Name to the &amp;quot;%Include&amp;quot; option of the object","parentclassname":"Library","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"library","comment":"Name of the Library to append. ","valuetype":"String","filenamebase":"library_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsLibraryappendIncludeExternalLibrary","qn":"library","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the Library to append. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the Library to append. ","inlinecomment":" \t &apos; Name of the Library to append. "}]},{"label":"appendOption","comment":"Appends an Option to the Library ","valuetype":"","filenamebase":"appendOption_Method","fqnprefix":"VSID.BSXdocumentationUtils.Library","qn":"appendOption","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(source As String)","signature":"Public Sub appendOption(source As String)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Appends an Option to the Library &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Appends an Option to the Library ","inlinecomment":" \t &apos; Appends an Option to the Library ","parentclassname":"Library","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"source","comment":"Formatted string representing the option to be added\n\t\texamples: \t\t\n\t\t\tDeclare\n\t\t\tPublic\n\t\t\tBase 1 \n\t\t\tCompare NoCase NoPitch","valuetype":"String","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsLibraryappendOption","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Formatted string representing the option to be added&lt;br /&gt;\t\texamples: \t\t&lt;br /&gt;\t\t\tDeclare&lt;br /&gt;\t\t\tPublic&lt;br /&gt;\t\t\tBase 1 &lt;br /&gt;\t\t\tCompare NoCase NoPitch&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Formatted string representing the option to be added&lt;br /&gt;\t\texamples: \t\t&lt;br /&gt;\t\t\tDeclare&lt;br /&gt;\t\t\tPublic&lt;br /&gt;\t\t\tBase 1 &lt;br /&gt;\t\t\tCompare NoCase NoPitch","inlinecomment":" \t &apos; Formatted string representing the option to be added\n\t\texamples: \t\t\n\t\t\tDeclare\n\t\t\tPublic\n\t\t\tBase 1 \n\t\t\tCompare NoCase NoPitch"}]},{"label":"appendType","comment":"Appends a Type to the Object ","valuetype":"","filenamebase":"appendType_Method","fqnprefix":"VSID.BSXdocumentationUtils.Library","qn":"appendType","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(source As ObjectType)","signature":"Public Sub appendType(source As ObjectType)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Appends a Type to the Object &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Appends a Type to the Object ","inlinecomment":" \t &apos; Appends a Type to the Object ","parentclassname":"Library","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"source","comment":"ObjectType instance to be appended","valuetype":"ObjectType","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsLibraryappendType","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;ObjectType instance to be appended&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"ObjectType instance to be appended","inlinecomment":" \t &apos; ObjectType instance to be appended"}]},{"label":"appendUseLibrary","comment":"appends a Library Name to the &amp;quot;Use&amp;quot; option of the object","valuetype":"","filenamebase":"appendUseLibrary_Method","fqnprefix":"VSID.BSXdocumentationUtils.Library","qn":"appendUseLibrary","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(libraryname As String)","signature":"Public Sub appendUseLibrary(libraryname As String)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;appends a Library Name to the &amp;quot;Use&amp;quot; option of the object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"appends a Library Name to the &amp;quot;Use&amp;quot; option of the object","inlinecomment":" \t &apos; appends a Library Name to the &amp;quot;Use&amp;quot; option of the object","parentclassname":"Library","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"libraryname","comment":"Library to append","valuetype":"String","filenamebase":"libraryname_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsLibraryappendUseLibrary","qn":"libraryname","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Library to append&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Library to append","inlinecomment":" \t &apos; Library to append"}]},{"label":"appendUseVSE","comment":"appends a VSE Name to the &amp;quot;UseVSE&amp;quot; option of the object","valuetype":"","filenamebase":"appendUseVSE_Method","fqnprefix":"VSID.BSXdocumentationUtils.Library","qn":"appendUseVSE","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(lsxname As String)","signature":"Public Sub appendUseVSE(lsxname As String)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;appends a VSE Name to the &amp;quot;UseVSE&amp;quot; option of the object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"appends a VSE Name to the &amp;quot;UseVSE&amp;quot; option of the object","inlinecomment":" \t &apos; appends a VSE Name to the &amp;quot;UseVSE&amp;quot; option of the object","parentclassname":"Library","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"lsxname","comment":"VSE to append","valuetype":"String","filenamebase":"lsxname_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsLibraryappendUseVSE","qn":"lsxname","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;VSE to append&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"VSE to append","inlinecomment":" \t &apos; VSE to append"}]},{"label":"New","comment":"Constructor","valuetype":"","filenamebase":"New_Method","fqnprefix":"VSID.BSXdocumentationUtils.Library","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"parentconstructor":"Project(Parent, LibraryName, Summary, Description, SIGNATURE_VALUE_LIBRARY)","argumentsuffix":"(Parent As CodeElement, LibraryName As String, Summary As String, Description As String)","signature":"Public Sub New(Parent As CodeElement, LibraryName As String, Summary As String, Description As String)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructor&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructor","inlinecomment":" \t &apos; Constructor","parentclassname":"Library","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"Parent","comment":"Parent Object for the Object","valuetype":"CodeElement","filenamebase":"Parent_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsLibraryNew","qn":"Parent","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Parent Object for the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Parent Object for the Object","inlinecomment":" \t &apos; Parent Object for the Object"},{"label":"LibraryName","comment":"Label Label (Name) for the Object","valuetype":"String","filenamebase":"LibraryName_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsLibraryNew","qn":"LibraryName","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Label Label (Name) for the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Label Label (Name) for the Object","inlinecomment":" \t &apos; Label Label (Name) for the Object"},{"label":"Summary","comment":"Summary information about the Object","valuetype":"String","filenamebase":"Summary_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsLibraryNew","qn":"Summary","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Summary information about the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Summary information about the Object","inlinecomment":" \t &apos; Summary information about the Object"},{"label":"Description","comment":"Detailed Description of the Object","valuetype":"String","filenamebase":"Description_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsLibraryNew","qn":"Description","argumentindex":4,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Detailed Description of the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Detailed Description of the Object","inlinecomment":" \t &apos; Detailed Description of the Object"}]}]},{"classname":"MajorElement","comment":"Represents a major code Object, such as a Class or a Library ","valuetype":"CodeElement","filenamebase":"MajorElement_ObjectClass","fqnprefix":"VSID.BSXdocumentationUtils","qn":"MajorElement","codesample":"","signaturecode":3072,"instancecode":1024,"parentclassname":"CodeElement","classtype":"Derived","classderivetype":"CodeElement","projectid":"7D1A2972E666A25885258AE100482F18","classid":"9FC6F622B4F8791085258AE1006E5B94","signature":"Public Class MajorElement As CodeElement","modifiers":"Public","classname":"MajorElement","constructorsignature":"Public Sub New(Parent As CodeElement, Label As String, ValueType As String, Comment As String, CodeSample As String, SignatureCode As Long)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Represents a major code Object, such as a Class or a Library &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Represents a major code Object, such as a Class or a Library ","inlinecomment":" \t &apos; Represents a major code Object, such as a Class or a Library ","codesamplehtml":"", "methods":[{"label":"hasProperty","comment":"Indicates if the object has specific child property. ","valuetype":"Boolean","filenamebase":"hasProperty_Method","fqnprefix":"VSID.BSXdocumentationUtils.MajorElement","qn":"hasProperty","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(propertylabel As String)","signature":"Public Function hasProperty(propertylabel As String) As Boolean","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Indicates if the object has specific child property. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Indicates if the object has specific child property. ","inlinecomment":" \t &apos; Indicates if the object has specific child property. ","parentclassname":"MajorElement","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"propertylabel","comment":"Label of the Property for which to check. ","valuetype":"String","filenamebase":"propertylabel_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsMajorElementhasProperty","qn":"propertylabel","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Label of the Property for which to check. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Label of the Property for which to check. ","inlinecomment":" \t &apos; Label of the Property for which to check. "}]},{"label":"Classes","comment":"Array of ObjectClass objects contained by the MajorElement ","valuetype":"Variant","filenamebase":"Classes_Method","fqnprefix":"VSID.BSXdocumentationUtils.MajorElement","qn":"Get.Classes","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Classes As Variant","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Array of ObjectClass objects contained by the MajorElement &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Array of ObjectClass objects contained by the MajorElement ","inlinecomment":" \t &apos; Array of ObjectClass objects contained by the MajorElement ","parentclassname":"MajorElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"ClassName","comment":"Class Name of the MajorElement","valuetype":"String","filenamebase":"ClassName_Method","fqnprefix":"VSID.BSXdocumentationUtils.MajorElement","qn":"Get.ClassName","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get ClassName As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Class Name of the MajorElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Class Name of the MajorElement","inlinecomment":" \t &apos; Class Name of the MajorElement","parentclassname":"MajorElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Constants","comment":"Array containing the Object&amp;apos;s constants","valuetype":"Variant","filenamebase":"Constants_Method","fqnprefix":"VSID.BSXdocumentationUtils.MajorElement","qn":"Get.Constants","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Constants As Variant","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Array containing the Object&amp;apos;s constants&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Array containing the Object&amp;apos;s constants","inlinecomment":" \t &apos; Array containing the Object&amp;apos;s constants","parentclassname":"MajorElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Events","comment":"Array containing the Method Events of the MajorElement","valuetype":"Variant","filenamebase":"Events_Method","fqnprefix":"VSID.BSXdocumentationUtils.MajorElement","qn":"Get.Events","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Events As Variant","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Array containing the Method Events of the MajorElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Array containing the Method Events of the MajorElement","inlinecomment":" \t &apos; Array containing the Method Events of the MajorElement","parentclassname":"MajorElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Functions","comment":"Array containing the Method Functions of the MajorElement","valuetype":"Variant","filenamebase":"Functions_Method","fqnprefix":"VSID.BSXdocumentationUtils.MajorElement","qn":"Get.Functions","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Functions As Variant","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Array containing the Method Functions of the MajorElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Array containing the Method Functions of the MajorElement","inlinecomment":" \t &apos; Array containing the Method Functions of the MajorElement","parentclassname":"MajorElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"hasClasses","comment":"Flag indicating if the Object has Classes","valuetype":"Boolean","filenamebase":"hasClasses_Method","fqnprefix":"VSID.BSXdocumentationUtils.MajorElement","qn":"Get.hasClasses","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get hasClasses As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Object has Classes&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Object has Classes","inlinecomment":" \t &apos; Flag indicating if the Object has Classes","parentclassname":"MajorElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"hasConstants","comment":"Flag indicating if the Object has Constants","valuetype":"Boolean","filenamebase":"hasConstants_Method","fqnprefix":"VSID.BSXdocumentationUtils.MajorElement","qn":"Get.hasConstants","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get hasConstants As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Object has Constants&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Object has Constants","inlinecomment":" \t &apos; Flag indicating if the Object has Constants","parentclassname":"MajorElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"hasEvents","comment":"Flag indicating if the Object has Events","valuetype":"Boolean","filenamebase":"hasEvents_Method","fqnprefix":"VSID.BSXdocumentationUtils.MajorElement","qn":"Get.hasEvents","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get hasEvents As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Object has Events&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Object has Events","inlinecomment":" \t &apos; Flag indicating if the Object has Events","parentclassname":"MajorElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"hasFunctions","comment":"Flag indicating if the Object has Functions","valuetype":"Boolean","filenamebase":"hasFunctions_Method","fqnprefix":"VSID.BSXdocumentationUtils.MajorElement","qn":"Get.hasFunctions","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get hasFunctions As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Object has Functions&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Object has Functions","inlinecomment":" \t &apos; Flag indicating if the Object has Functions","parentclassname":"MajorElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"hasMajorElements","comment":"Flag indicating if the Object has Major Elements","valuetype":"Boolean","filenamebase":"hasMajorElements_Method","fqnprefix":"VSID.BSXdocumentationUtils.MajorElement","qn":"Get.hasMajorElements","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get hasMajorElements As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Object has Major Elements&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Object has Major Elements","inlinecomment":" \t &apos; Flag indicating if the Object has Major Elements","parentclassname":"MajorElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"hasMethods","comment":"Flag indicating if the Object has Methods","valuetype":"Boolean","filenamebase":"hasMethods_Method","fqnprefix":"VSID.BSXdocumentationUtils.MajorElement","qn":"Get.hasMethods","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get hasMethods As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Object has Methods&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Object has Methods","inlinecomment":" \t &apos; Flag indicating if the Object has Methods","parentclassname":"MajorElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"hasProperties","comment":"Flag indicating if the Object has Properties","valuetype":"Boolean","filenamebase":"hasProperties_Method","fqnprefix":"VSID.BSXdocumentationUtils.MajorElement","qn":"Get.hasProperties","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get hasProperties As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Object has Properties&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Object has Properties","inlinecomment":" \t &apos; Flag indicating if the Object has Properties","parentclassname":"MajorElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"hasSubs","comment":"Flag indicating if the Object has Subs","valuetype":"Boolean","filenamebase":"hasSubs_Method","fqnprefix":"VSID.BSXdocumentationUtils.MajorElement","qn":"Get.hasSubs","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get hasSubs As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Object has Subs&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Object has Subs","inlinecomment":" \t &apos; Flag indicating if the Object has Subs","parentclassname":"MajorElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"hasVariables","comment":"Flag indicating if the Object has Variables","valuetype":"Boolean","filenamebase":"hasVariables_Method","fqnprefix":"VSID.BSXdocumentationUtils.MajorElement","qn":"Get.hasVariables","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get hasVariables As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Object has Variables&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Object has Variables","inlinecomment":" \t &apos; Flag indicating if the Object has Variables","parentclassname":"MajorElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"MajorElements","comment":"Array containing MajorElements contained by the Object\n\t\t\nNote: The only MajorElement objects that can be contained by an explicit MajorElement object are ObjectClass objects. \nTherefore, this Property is a wrapper for the MajorElement.Classes property. \n\t\t\n@see MajorElement.Classes ","valuetype":"Variant","filenamebase":"MajorElements_Method","fqnprefix":"VSID.BSXdocumentationUtils.MajorElement","qn":"Get.MajorElements","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get MajorElements As Variant","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Array containing MajorElements contained by the Object&lt;br /&gt;\t\t&lt;br /&gt;Note: The only MajorElement objects that can be contained by an explicit MajorElement object are ObjectClass objects. &lt;br /&gt;Therefore, this Property is a wrapper for the MajorElement.Classes property. &lt;br /&gt;\t\t&lt;br /&gt;@see MajorElement.Classes &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Array containing MajorElements contained by the Object&lt;br /&gt;\t\t&lt;br /&gt;Note: The only MajorElement objects that can be contained by an explicit MajorElement object are ObjectClass objects. &lt;br /&gt;Therefore, this Property is a wrapper for the MajorElement.Classes property. &lt;br /&gt;\t\t&lt;br /&gt;@see MajorElement.Classes ","inlinecomment":" \t &apos; Array containing MajorElements contained by the Object\n\t\t\nNote: The only MajorElement objects that can be contained by an explicit MajorElement object are ObjectClass objects. \nTherefore, this Property is a wrapper for the MajorElement.Classes property. \n\t\t\n@see MajorElement.Classes ","parentclassname":"MajorElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Methods","comment":"Array containing the MajorElement Methods ","valuetype":"Variant","filenamebase":"Methods_Method","fqnprefix":"VSID.BSXdocumentationUtils.MajorElement","qn":"Get.Methods","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Methods As Variant","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Array containing the MajorElement Methods &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Array containing the MajorElement Methods ","inlinecomment":" \t &apos; Array containing the MajorElement Methods ","parentclassname":"MajorElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"NonPropertyMethods","comment":"Array containing Methods of the MajorElement that are NOT Properties","valuetype":"Variant","filenamebase":"NonPropertyMethods_Method","fqnprefix":"VSID.BSXdocumentationUtils.MajorElement","qn":"Get.NonPropertyMethods","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get NonPropertyMethods As Variant","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Array containing Methods of the MajorElement that are NOT Properties&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Array containing Methods of the MajorElement that are NOT Properties","inlinecomment":" \t &apos; Array containing Methods of the MajorElement that are NOT Properties","parentclassname":"MajorElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Properties","comment":"Array containing the Properties of the MajorElement","valuetype":"Variant","filenamebase":"Properties_Method","fqnprefix":"VSID.BSXdocumentationUtils.MajorElement","qn":"Get.Properties","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Properties As Variant","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Array containing the Properties of the MajorElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Array containing the Properties of the MajorElement","inlinecomment":" \t &apos; Array containing the Properties of the MajorElement","parentclassname":"MajorElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Subs","comment":"Array containing the Subs of the MajorElement","valuetype":"Variant","filenamebase":"Subs_Method","fqnprefix":"VSID.BSXdocumentationUtils.MajorElement","qn":"Get.Subs","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Subs As Variant","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Array containing the Subs of the MajorElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Array containing the Subs of the MajorElement","inlinecomment":" \t &apos; Array containing the Subs of the MajorElement","parentclassname":"MajorElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"SummaryTableHTML","comment":"PLACEHOLDER Property meant to be extended by child classes. \t\n\t\t\nSummaryTable HTML content for the object","valuetype":"StringQueue","filenamebase":"SummaryTableHTML_Method","fqnprefix":"VSID.BSXdocumentationUtils.MajorElement","qn":"Get.SummaryTableHTML","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get SummaryTableHTML As StringQueue","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;PLACEHOLDER Property meant to be extended by child classes. \t&lt;br /&gt;\t\t&lt;br /&gt;SummaryTable HTML content for the object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"PLACEHOLDER Property meant to be extended by child classes. \t&lt;br /&gt;\t\t&lt;br /&gt;SummaryTable HTML content for the object","inlinecomment":" \t &apos; PLACEHOLDER Property meant to be extended by child classes. \t\n\t\t\nSummaryTable HTML content for the object","parentclassname":"MajorElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Variables","comment":"Array containing the Object&amp;apos;s variables","valuetype":"Variant","filenamebase":"Variables_Method","fqnprefix":"VSID.BSXdocumentationUtils.MajorElement","qn":"Get.Variables","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Variables As Variant","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Array containing the Object&amp;apos;s variables&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Array containing the Object&amp;apos;s variables","inlinecomment":" \t &apos; Array containing the Object&amp;apos;s variables","parentclassname":"MajorElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"New","comment":"Constructor","valuetype":"","filenamebase":"New_Method","fqnprefix":"VSID.BSXdocumentationUtils.MajorElement","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(Parent As CodeElement, Label As String, ValueType As String, Comment As String, CodeSample As String, SignatureCode As Long)","signature":"Public Sub New(Parent As CodeElement, Label As String, ValueType As String, Comment As String, CodeSample As String, SignatureCode As Long)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructor&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructor","inlinecomment":" \t &apos; Constructor","parentclassname":"MajorElement","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"Parent","comment":"Parent Object for the Object","valuetype":"CodeElement","filenamebase":"Parent_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsMajorElementNew","qn":"Parent","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Parent Object for the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Parent Object for the Object","inlinecomment":" \t &apos; Parent Object for the Object"},{"label":"Label","comment":"Label Label (Name) for the MajorElement","valuetype":"String","filenamebase":"Label_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsMajorElementNew","qn":"Label","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Label Label (Name) for the MajorElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Label Label (Name) for the MajorElement","inlinecomment":" \t &apos; Label Label (Name) for the MajorElement"},{"label":"ValueType","comment":"Value Type of the MajorElement","valuetype":"String","filenamebase":"ValueType_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsMajorElementNew","qn":"ValueType","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Value Type of the MajorElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Value Type of the MajorElement","inlinecomment":" \t &apos; Value Type of the MajorElement"},{"label":"Comment","comment":"Comment about the MajorElement","valuetype":"String","filenamebase":"Comment_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsMajorElementNew","qn":"Comment","argumentindex":4,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Comment about the MajorElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Comment about the MajorElement","inlinecomment":" \t &apos; Comment about the MajorElement"},{"label":"CodeSample","comment":"any sample code for the MajorElement","valuetype":"String","filenamebase":"CodeSample_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsMajorElementNew","qn":"CodeSample","argumentindex":5,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;any sample code for the MajorElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"any sample code for the MajorElement","inlinecomment":" \t &apos; any sample code for the MajorElement"},{"label":"SignatureCode","comment":"Numeric code indicating the Object Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the MajorElement","valuetype":"Long","filenamebase":"SignatureCode_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsMajorElementNew","qn":"SignatureCode","argumentindex":6,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Numeric code indicating the Object Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the MajorElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Numeric code indicating the Object Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the MajorElement","inlinecomment":" \t &apos; Numeric code indicating the Object Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the MajorElement"}]}]},{"classname":"Method","comment":"Represents a Method (Sub, Function, or Property) ","valuetype":"CodeElement","filenamebase":"Method_ObjectClass","fqnprefix":"VSID.BSXdocumentationUtils","qn":"Method","codesample":"","signaturecode":3072,"instancecode":1024,"parentclassname":"CodeElement","classtype":"Derived","classderivetype":"CodeElement","projectid":"7D1A2972E666A25885258AE100482F18","classid":"D4B7363678FE843585258AE1006CE85A","signature":"Public Class Method As CodeElement","modifiers":"Public","classname":"Method","constructorsignature":"Public Sub New(Parent As CodeElement, Label As String, ValueType As String, Comment As String, CodeSample As String, SignatureCode As Long)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Represents a Method (Sub, Function, or Property) &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Represents a Method (Sub, Function, or Property) ","inlinecomment":" \t &apos; Represents a Method (Sub, Function, or Property) ","codesamplehtml":"", "methods":[{"label":"ArgumentRemarks","comment":"Remarks for the Method&amp;apos;s Arguments ","valuetype":"StringsCarrier","filenamebase":"ArgumentRemarks_Method","fqnprefix":"VSID.BSXdocumentationUtils.Method","qn":"Get.ArgumentRemarks","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get ArgumentRemarks As StringsCarrier","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Remarks for the Method&amp;apos;s Arguments &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Remarks for the Method&amp;apos;s Arguments ","inlinecomment":" \t &apos; Remarks for the Method&amp;apos;s Arguments ","parentclassname":"Method","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Arguments","comment":"Array containing the Method Arguments ","valuetype":"Variant","filenamebase":"Arguments_Method","fqnprefix":"VSID.BSXdocumentationUtils.Method","qn":"Get.Arguments","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Arguments As Variant","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Array containing the Method Arguments &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Array containing the Method Arguments ","inlinecomment":" \t &apos; Array containing the Method Arguments ","parentclassname":"Method","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"ArgumentSuffix","comment":"Argument Suffix for the method  \nUsed for constructing a fully qualified signature for the method. ","valuetype":"String","filenamebase":"ArgumentSuffix_Method","fqnprefix":"VSID.BSXdocumentationUtils.Method","qn":"Get.ArgumentSuffix","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get ArgumentSuffix As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Argument Suffix for the method  &lt;br /&gt;Used for constructing a fully qualified signature for the method. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Argument Suffix for the method  &lt;br /&gt;Used for constructing a fully qualified signature for the method. ","inlinecomment":" \t &apos; Argument Suffix for the method  \nUsed for constructing a fully qualified signature for the method. ","parentclassname":"Method","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Exceptions","comment":"Array containing the Method Exceptions ","valuetype":"Variant","filenamebase":"Exceptions_Method","fqnprefix":"VSID.BSXdocumentationUtils.Method","qn":"Get.Exceptions","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Exceptions As Variant","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Array containing the Method Exceptions &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Array containing the Method Exceptions ","inlinecomment":" \t &apos; Array containing the Method Exceptions ","parentclassname":"Method","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"ExceptionsRemarks","comment":"Remarks for the Method&amp;apos;s Exceptions ","valuetype":"StringsCarrier","filenamebase":"ExceptionsRemarks_Method","fqnprefix":"VSID.BSXdocumentationUtils.Method","qn":"Get.ExceptionsRemarks","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get ExceptionsRemarks As StringsCarrier","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Remarks for the Method&amp;apos;s Exceptions &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Remarks for the Method&amp;apos;s Exceptions ","inlinecomment":" \t &apos; Remarks for the Method&amp;apos;s Exceptions ","parentclassname":"Method","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"hasArguments","comment":"Flag indicating if the Method has Arguments ","valuetype":"Boolean","filenamebase":"hasArguments_Method","fqnprefix":"VSID.BSXdocumentationUtils.Method","qn":"Get.hasArguments","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get hasArguments As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Method has Arguments &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Method has Arguments ","inlinecomment":" \t &apos; Flag indicating if the Method has Arguments ","parentclassname":"Method","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"hasExceptions","comment":"Flag indicating if the Method has Exceptions ","valuetype":"Boolean","filenamebase":"hasExceptions_Method","fqnprefix":"VSID.BSXdocumentationUtils.Method","qn":"Get.hasExceptions","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get hasExceptions As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Method has Exceptions &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Method has Exceptions ","inlinecomment":" \t &apos; Flag indicating if the Method has Exceptions ","parentclassname":"Method","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isEvent","comment":"Flag indicating if the Method is an Event","valuetype":"Boolean","filenamebase":"isEvent_Method","fqnprefix":"VSID.BSXdocumentationUtils.Method","qn":"Get.isEvent","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isEvent As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Method is an Event&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Method is an Event","inlinecomment":" \t &apos; Flag indicating if the Method is an Event","parentclassname":"Method","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isFunction","comment":"Flag indicating if the Method is a Function","valuetype":"Boolean","filenamebase":"isFunction_Method","fqnprefix":"VSID.BSXdocumentationUtils.Method","qn":"Get.isFunction","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isFunction As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Method is a Function&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Method is a Function","inlinecomment":" \t &apos; Flag indicating if the Method is a Function","parentclassname":"Method","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isGetter","comment":"Flag indicating if the Method is a Getter Property","valuetype":"Boolean","filenamebase":"isGetter_Method","fqnprefix":"VSID.BSXdocumentationUtils.Method","qn":"Get.isGetter","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isGetter As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Method is a Getter Property&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Method is a Getter Property","inlinecomment":" \t &apos; Flag indicating if the Method is a Getter Property","parentclassname":"Method","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isProperty","comment":"Flag indicating if the Method is a Property ","valuetype":"Boolean","filenamebase":"isProperty_Method","fqnprefix":"VSID.BSXdocumentationUtils.Method","qn":"Get.isProperty","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isProperty As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Method is a Property &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Method is a Property ","inlinecomment":" \t &apos; Flag indicating if the Method is a Property ","parentclassname":"Method","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isSetter","comment":"Flag indicating if the Method is a Setter Property ","valuetype":"Boolean","filenamebase":"isSetter_Method","fqnprefix":"VSID.BSXdocumentationUtils.Method","qn":"Get.isSetter","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isSetter As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Method is a Setter Property &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Method is a Setter Property ","inlinecomment":" \t &apos; Flag indicating if the Method is a Setter Property ","parentclassname":"Method","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isSub","comment":"Flag indicating if the Method is a Sub","valuetype":"Boolean","filenamebase":"isSub_Method","fqnprefix":"VSID.BSXdocumentationUtils.Method","qn":"Get.isSub","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isSub As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Method is a Sub&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Method is a Sub","inlinecomment":" \t &apos; Flag indicating if the Method is a Sub","parentclassname":"Method","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"MethodType","comment":"String representation of the Method Type (Sub, Function, or Property) ","valuetype":"String","filenamebase":"MethodType_Method","fqnprefix":"VSID.BSXdocumentationUtils.Method","qn":"Get.MethodType","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get MethodType As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;String representation of the Method Type (Sub, Function, or Property) &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"String representation of the Method Type (Sub, Function, or Property) ","inlinecomment":" \t &apos; String representation of the Method Type (Sub, Function, or Property) ","parentclassname":"Method","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"ReturnsRemarks","comment":"Remarks for the Method&amp;apos;s Returns value ","valuetype":"StringsCarrier","filenamebase":"ReturnsRemarks_Method","fqnprefix":"VSID.BSXdocumentationUtils.Method","qn":"Get.ReturnsRemarks","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get ReturnsRemarks As StringsCarrier","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Remarks for the Method&amp;apos;s Returns value &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Remarks for the Method&amp;apos;s Returns value ","inlinecomment":" \t &apos; Remarks for the Method&amp;apos;s Returns value ","parentclassname":"Method","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"appendArgument","comment":"Appends an Argument to the Method","valuetype":"","filenamebase":"appendArgument_Method","fqnprefix":"VSID.BSXdocumentationUtils.Method","qn":"appendArgument","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(source As ValuedElement)","signature":"Public Sub appendArgument(source As ValuedElement)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Appends an Argument to the Method&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Appends an Argument to the Method","inlinecomment":" \t &apos; Appends an Argument to the Method","parentclassname":"Method","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"source","comment":"Argument to be appended","valuetype":"ValuedElement","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsMethodappendArgument","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Argument to be appended&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Argument to be appended","inlinecomment":" \t &apos; Argument to be appended"}]},{"label":"appendException","comment":"Appends an Exception to the Method ","valuetype":"","filenamebase":"appendException_Method","fqnprefix":"VSID.BSXdocumentationUtils.Method","qn":"appendException","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(source As ExceptionElement)","signature":"Public Sub appendException(source As ExceptionElement)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Appends an Exception to the Method &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Appends an Exception to the Method ","inlinecomment":" \t &apos; Appends an Exception to the Method ","parentclassname":"Method","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"source","comment":"Exception to be appended","valuetype":"ExceptionElement","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsMethodappendException","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Exception to be appended&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Exception to be appended","inlinecomment":" \t &apos; Exception to be appended"}]},{"label":"New","comment":"Constructor","valuetype":"","filenamebase":"New_Method","fqnprefix":"VSID.BSXdocumentationUtils.Method","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(Parent As CodeElement, Label As String, ValueType As String, Comment As String, CodeSample As String, SignatureCode As Long)","signature":"Public Sub New(Parent As CodeElement, Label As String, ValueType As String, Comment As String, CodeSample As String, SignatureCode As Long)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructor&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructor","inlinecomment":" \t &apos; Constructor","parentclassname":"Method","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"Parent","comment":"Parent Object for the Object","valuetype":"CodeElement","filenamebase":"Parent_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsMethodNew","qn":"Parent","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Parent Object for the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Parent Object for the Object","inlinecomment":" \t &apos; Parent Object for the Object"},{"label":"Label","comment":"Label Label (Name) for the CodeElement","valuetype":"String","filenamebase":"Label_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsMethodNew","qn":"Label","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Label Label (Name) for the CodeElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Label Label (Name) for the CodeElement","inlinecomment":" \t &apos; Label Label (Name) for the CodeElement"},{"label":"ValueType","comment":"Value Type of the CodeElement","valuetype":"String","filenamebase":"ValueType_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsMethodNew","qn":"ValueType","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Value Type of the CodeElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Value Type of the CodeElement","inlinecomment":" \t &apos; Value Type of the CodeElement"},{"label":"Comment","comment":"Comment about the CodeElement","valuetype":"String","filenamebase":"Comment_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsMethodNew","qn":"Comment","argumentindex":4,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Comment about the CodeElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Comment about the CodeElement","inlinecomment":" \t &apos; Comment about the CodeElement"},{"label":"CodeSample","comment":"any sample code for the CodeElement","valuetype":"String","filenamebase":"CodeSample_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsMethodNew","qn":"CodeSample","argumentindex":5,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;any sample code for the CodeElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"any sample code for the CodeElement","inlinecomment":" \t &apos; any sample code for the CodeElement"},{"label":"SignatureCode","comment":"Numeric code indicating the Object Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the CodeElement","valuetype":"Long","filenamebase":"SignatureCode_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsMethodNew","qn":"SignatureCode","argumentindex":6,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Numeric code indicating the Object Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the CodeElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Numeric code indicating the Object Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the CodeElement","inlinecomment":" \t &apos; Numeric code indicating the Object Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the CodeElement"}]}]},{"classname":"ObjectClass","comment":"Represents an Object Class","valuetype":"MajorElement","filenamebase":"ObjectClass_ObjectClass","fqnprefix":"VSID.BSXdocumentationUtils","qn":"ObjectClass","codesample":"","signaturecode":3072,"instancecode":1024,"parentclassname":"MajorElement","classtype":"Derived","classderivetype":"MajorElement","projectid":"7D1A2972E666A25885258AE100482F18","classid":"413FB141FC5171E985258AE100701456","signature":"Public Class ObjectClass As MajorElement","modifiers":"Public","classname":"ObjectClass","constructorsignature":"Public Sub New(Parent As CodeElement, ClassName As String, ParentClassName As String, Comment As String, CodeSample As String, SignatureCode As Long)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Represents an Object Class&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Represents an Object Class","inlinecomment":" \t &apos; Represents an Object Class","codesamplehtml":"", "methods":[{"label":"ConstructorSignature","comment":"Signature for constructing new instances of the object. ","valuetype":"String","filenamebase":"ConstructorSignature_Method","fqnprefix":"VSID.BSXdocumentationUtils.ObjectClass","qn":"Get.ConstructorSignature","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get ConstructorSignature As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Signature for constructing new instances of the object. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Signature for constructing new instances of the object. ","inlinecomment":" \t &apos; Signature for constructing new instances of the object. ","parentclassname":"ObjectClass","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"New","comment":"Constructor","valuetype":"","filenamebase":"New_Method","fqnprefix":"VSID.BSXdocumentationUtils.ObjectClass","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(Parent As CodeElement, ClassName As String, ParentClassName As String, Comment As String, CodeSample As String, SignatureCode As Long)","signature":"Public Sub New(Parent As CodeElement, ClassName As String, ParentClassName As String, Comment As String, CodeSample As String, SignatureCode As Long)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructor&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructor","inlinecomment":" \t &apos; Constructor","parentclassname":"ObjectClass","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"Parent","comment":"Parent Object for the Object","valuetype":"CodeElement","filenamebase":"Parent_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsObjectClassNew","qn":"Parent","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Parent Object for the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Parent Object for the Object","inlinecomment":" \t &apos; Parent Object for the Object"},{"label":"ClassName","comment":"Name of the Class","valuetype":"String","filenamebase":"ClassName_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsObjectClassNew","qn":"ClassName","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the Class&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the Class","inlinecomment":" \t &apos; Name of the Class"},{"label":"ParentClassName","comment":"Name of the Parent Class (overridden by Parent Object if Parent Object is an ObjectClass)","valuetype":"String","filenamebase":"ParentClassName_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsObjectClassNew","qn":"ParentClassName","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the Parent Class (overridden by Parent Object if Parent Object is an ObjectClass)&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the Parent Class (overridden by Parent Object if Parent Object is an ObjectClass)","inlinecomment":" \t &apos; Name of the Parent Class (overridden by Parent Object if Parent Object is an ObjectClass)"},{"label":"Comment","comment":"Comment about the Class","valuetype":"String","filenamebase":"Comment_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsObjectClassNew","qn":"Comment","argumentindex":4,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Comment about the Class&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Comment about the Class","inlinecomment":" \t &apos; Comment about the Class"},{"label":"CodeSample","comment":"any sample code for the Object","valuetype":"String","filenamebase":"CodeSample_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsObjectClassNew","qn":"CodeSample","argumentindex":5,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;any sample code for the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"any sample code for the Object","inlinecomment":" \t &apos; any sample code for the Object"},{"label":"SignatureCode","comment":"Numeric code indicating the Object Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the Object","valuetype":"Long","filenamebase":"SignatureCode_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsObjectClassNew","qn":"SignatureCode","argumentindex":6,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Numeric code indicating the Object Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Numeric code indicating the Object Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the Object","inlinecomment":" \t &apos; Numeric code indicating the Object Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the Object"}]}]},{"classname":"ObjectType","comment":"Represents an Object Type","valuetype":"MajorElement","filenamebase":"ObjectType_ObjectClass","fqnprefix":"VSID.BSXdocumentationUtils","qn":"ObjectType","codesample":"","signaturecode":3072,"instancecode":1024,"parentclassname":"MajorElement","classtype":"Derived","classderivetype":"MajorElement","projectid":"7D1A2972E666A25885258AE100482F18","classid":"BF4C78CF574667DD85258AE1006FF818","signature":"Public Class ObjectType As MajorElement","modifiers":"Public","classname":"ObjectType","constructorsignature":"Public Sub New(Parent As CodeElement, Label As String, ValueType As String, Comment As String, CodeSample As String, SignatureCode As Long)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Represents an Object Type&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Represents an Object Type","inlinecomment":" \t &apos; Represents an Object Type","codesamplehtml":"", "methods":[{"label":"New","comment":"Constructor","valuetype":"","filenamebase":"New_Method","fqnprefix":"VSID.BSXdocumentationUtils.ObjectType","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(Parent As CodeElement, Label As String, ValueType As String, Comment As String, CodeSample As String, SignatureCode As Long)","signature":"Public Sub New(Parent As CodeElement, Label As String, ValueType As String, Comment As String, CodeSample As String, SignatureCode As Long)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructor&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructor","inlinecomment":" \t &apos; Constructor","parentclassname":"ObjectType","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"Parent","comment":"Parent Object for the Object","valuetype":"CodeElement","filenamebase":"Parent_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsObjectTypeNew","qn":"Parent","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Parent Object for the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Parent Object for the Object","inlinecomment":" \t &apos; Parent Object for the Object"},{"label":"Label","comment":"Label Label (Name) for the ObjectType","valuetype":"String","filenamebase":"Label_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsObjectTypeNew","qn":"Label","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Label Label (Name) for the ObjectType&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Label Label (Name) for the ObjectType","inlinecomment":" \t &apos; Label Label (Name) for the ObjectType"},{"label":"ValueType","comment":"Value Type of the ObjectType","valuetype":"String","filenamebase":"ValueType_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsObjectTypeNew","qn":"ValueType","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Value Type of the ObjectType&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Value Type of the ObjectType","inlinecomment":" \t &apos; Value Type of the ObjectType"},{"label":"Comment","comment":"Comment about the ObjectType","valuetype":"String","filenamebase":"Comment_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsObjectTypeNew","qn":"Comment","argumentindex":4,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Comment about the ObjectType&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Comment about the ObjectType","inlinecomment":" \t &apos; Comment about the ObjectType"},{"label":"CodeSample","comment":"any sample code for the ObjectType","valuetype":"String","filenamebase":"CodeSample_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsObjectTypeNew","qn":"CodeSample","argumentindex":5,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;any sample code for the ObjectType&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"any sample code for the ObjectType","inlinecomment":" \t &apos; any sample code for the ObjectType"},{"label":"SignatureCode","comment":"Numeric code indicating the Object Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the ObjectType","valuetype":"Long","filenamebase":"SignatureCode_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsObjectTypeNew","qn":"SignatureCode","argumentindex":6,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Numeric code indicating the Object Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the ObjectType&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Numeric code indicating the Object Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the ObjectType","inlinecomment":" \t &apos; Numeric code indicating the Object Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the ObjectType"}]}]},{"classname":"Project","comment":"Common base-level class for VSID Library or VSID VSE classes. ","valuetype":"MajorElement","filenamebase":"Project_ObjectClass","fqnprefix":"VSID.BSXdocumentationUtils","qn":"Project","codesample":"","signaturecode":3072,"instancecode":1024,"parentclassname":"MajorElement","classtype":"Derived","classderivetype":"MajorElement","projectid":"7D1A2972E666A25885258AE100482F18","classid":"981B89CDB25C404B85258AE10071214C","signature":"Public Class Project As MajorElement","modifiers":"Public","classname":"Project","constructorsignature":"Public Sub New(Parent As CodeElement, LibraryName As String, Summary As String, Description As String, SignatureCode As Long)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Common base-level class for VSID Library or VSID VSE classes. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Common base-level class for VSID Library or VSID VSE classes. ","inlinecomment":" \t &apos; Common base-level class for VSID Library or VSID VSE classes. ","codesamplehtml":"", "methods":[{"label":"Description","comment":"Description of the Project","valuetype":"String","filenamebase":"Description_Method","fqnprefix":"VSID.BSXdocumentationUtils.Project","qn":"Get.Description","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Description As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Description of the Project&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Description of the Project","inlinecomment":" \t &apos; Description of the Project","parentclassname":"Project","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Summary","comment":"Summary of the Project","valuetype":"String","filenamebase":"Summary_Method","fqnprefix":"VSID.BSXdocumentationUtils.Project","qn":"Get.Summary","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Summary As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Summary of the Project&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Summary of the Project","inlinecomment":" \t &apos; Summary of the Project","parentclassname":"Project","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"New","comment":"Constructor","valuetype":"","filenamebase":"New_Method","fqnprefix":"VSID.BSXdocumentationUtils.Project","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"parentconstructor":"MajorElement(Parent, LibraryName, ||, Summary, ||, SignatureCode)","argumentsuffix":"(Parent As CodeElement, LibraryName As String, Summary As String, Description As String, SignatureCode As Long)","signature":"Public Sub New(Parent As CodeElement, LibraryName As String, Summary As String, Description As String, SignatureCode As Long)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructor&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructor","inlinecomment":" \t &apos; Constructor","parentclassname":"Project","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"Parent","comment":"Parent Object for the Object","valuetype":"CodeElement","filenamebase":"Parent_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsProjectNew","qn":"Parent","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Parent Object for the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Parent Object for the Object","inlinecomment":" \t &apos; Parent Object for the Object"},{"label":"LibraryName","comment":"Label Label (Name) for the Object","valuetype":"String","filenamebase":"LibraryName_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsProjectNew","qn":"LibraryName","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Label Label (Name) for the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Label Label (Name) for the Object","inlinecomment":" \t &apos; Label Label (Name) for the Object"},{"label":"Summary","comment":"Summary information about the Object","valuetype":"String","filenamebase":"Summary_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsProjectNew","qn":"Summary","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Summary information about the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Summary information about the Object","inlinecomment":" \t &apos; Summary information about the Object"},{"label":"Description","comment":"Detailed Description of the Object","valuetype":"String","filenamebase":"Description_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsProjectNew","qn":"Description","argumentindex":4,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Detailed Description of the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Detailed Description of the Object","inlinecomment":" \t &apos; Detailed Description of the Object"},{"label":"SignatureCode","comment":"Code indicating the Object Type (Library or VSE) and modifiers (such as Public, Private, etc) of the Object","valuetype":"Long","filenamebase":"SignatureCode_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsProjectNew","qn":"SignatureCode","argumentindex":5,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Code indicating the Object Type (Library or VSE) and modifiers (such as Public, Private, etc) of the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Code indicating the Object Type (Library or VSE) and modifiers (such as Public, Private, etc) of the Object","inlinecomment":" \t &apos; Code indicating the Object Type (Library or VSE) and modifiers (such as Public, Private, etc) of the Object"}]}]},{"classname":"ValuedElement","comment":"Represents a single programmatic minor element (Constant, Variable, Argument, etc)","valuetype":"LabeledElement","filenamebase":"ValuedElement_ObjectClass","fqnprefix":"VSID.BSXdocumentationUtils","qn":"ValuedElement","codesample":"","signaturecode":3072,"instancecode":1024,"parentclassname":"LabeledElement","classtype":"Derived","classderivetype":"LabeledElement","projectid":"7D1A2972E666A25885258AE100482F18","classid":"72308BEED6A373A685258AE10068F894","signature":"Public Class ValuedElement As LabeledElement","modifiers":"Public","classname":"ValuedElement","constructorsignature":"Public Sub New(FQNprefix As String, Label As String, ValueType As String, Comment As String)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Represents a single programmatic minor element (Constant, Variable, Argument, etc)&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Represents a single programmatic minor element (Constant, Variable, Argument, etc)","inlinecomment":" \t &apos; Represents a single programmatic minor element (Constant, Variable, Argument, etc)","codesamplehtml":"", "methods":[{"label":"removeAttribute","comment":"removes an Attribute from the object.","valuetype":"Boolean","filenamebase":"removeAttribute_Method","fqnprefix":"VSID.BSXdocumentationUtils.ValuedElement","qn":"removeAttribute","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(attribute As String)","signature":"Public Function removeAttribute(attribute As String) As Boolean","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;removes an Attribute from the object.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"removes an Attribute from the object.","inlinecomment":" \t &apos; removes an Attribute from the object.","parentclassname":"ValuedElement","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"attribute","comment":" Attribute to be removed. ","valuetype":"String","filenamebase":"attribute_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsValuedElementremoveAttribute","qn":"attribute","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt; Attribute to be removed. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":" Attribute to be removed. ","inlinecomment":" \t &apos;  Attribute to be removed. "}]},{"label":"AsType","comment":"String representing the &amp;quot;As xxxx&amp;quot; type of the object","valuetype":"String","filenamebase":"AsType_Method","fqnprefix":"VSID.BSXdocumentationUtils.ValuedElement","qn":"Get.AsType","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get AsType As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;String representing the &amp;quot;As xxxx&amp;quot; type of the object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"String representing the &amp;quot;As xxxx&amp;quot; type of the object","inlinecomment":" \t &apos; String representing the &amp;quot;As xxxx&amp;quot; type of the object","parentclassname":"ValuedElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Attributes","comment":"Attributes carried by the object.\n  \n@return StringsCarrier containing the Attributes of the object.  ","valuetype":"StringsCarrier","filenamebase":"Attributes_Method","fqnprefix":"VSID.BSXdocumentationUtils.ValuedElement","qn":"Get.Attributes","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Attributes As StringsCarrier","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Attributes carried by the object.&lt;br /&gt;  &lt;br /&gt;@return StringsCarrier containing the Attributes of the object.  &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Attributes carried by the object.&lt;br /&gt;  &lt;br /&gt;@return StringsCarrier containing the Attributes of the object.  ","inlinecomment":" \t &apos; Attributes carried by the object.\n  \n@return StringsCarrier containing the Attributes of the object.  ","parentclassname":"ValuedElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"FileNameBase","comment":"FileNameBase","valuetype":"String","filenamebase":"FileNameBase_Method","fqnprefix":"VSID.BSXdocumentationUtils.ValuedElement","qn":"Get.FileNameBase","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get FileNameBase As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;FileNameBase&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"FileNameBase","inlinecomment":" \t &apos; FileNameBase","parentclassname":"ValuedElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"FQN","comment":"Fully Qualified Name of the Object \n\t\t\nFQN is the FQNprefix (a constructor argument) concatenated (using a period character) with the object&amp;apos;s Label.\nNOTE: All whitespace in the FQN Prefix and Label will be removed.   \n\t\t\n@return Fully Qualified Name of the Object. ","valuetype":"String","filenamebase":"FQN_Method","fqnprefix":"VSID.BSXdocumentationUtils.ValuedElement","qn":"Get.FQN","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get FQN As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Fully Qualified Name of the Object &lt;br /&gt;\t\t&lt;br /&gt;FQN is the FQNprefix (a constructor argument) concatenated (using a period character) with the object&amp;apos;s Label.&lt;br /&gt;NOTE: All whitespace in the FQN Prefix and Label will be removed.   &lt;br /&gt;\t\t&lt;br /&gt;@return Fully Qualified Name of the Object. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Fully Qualified Name of the Object &lt;br /&gt;\t\t&lt;br /&gt;FQN is the FQNprefix (a constructor argument) concatenated (using a period character) with the object&amp;apos;s Label.&lt;br /&gt;NOTE: All whitespace in the FQN Prefix and Label will be removed.   &lt;br /&gt;\t\t&lt;br /&gt;@return Fully Qualified Name of the Object. ","inlinecomment":" \t &apos; Fully Qualified Name of the Object \n\t\t\nFQN is the FQNprefix (a constructor argument) concatenated (using a period character) with the object&amp;apos;s Label.\nNOTE: All whitespace in the FQN Prefix and Label will be removed.   \n\t\t\n@return Fully Qualified Name of the Object. ","parentclassname":"ValuedElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"FQNprefix","comment":"Fully Qualified Name Prefix for the Object","valuetype":"String","filenamebase":"FQNprefix_Method","fqnprefix":"VSID.BSXdocumentationUtils.ValuedElement","qn":"Get.FQNprefix","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get FQNprefix As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Fully Qualified Name Prefix for the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Fully Qualified Name Prefix for the Object","inlinecomment":" \t &apos; Fully Qualified Name Prefix for the Object","parentclassname":"ValuedElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"hasAttributes","comment":"Flag indicating if the object has Attributes ","valuetype":"Boolean","filenamebase":"hasAttributes_Method","fqnprefix":"VSID.BSXdocumentationUtils.ValuedElement","qn":"Get.hasAttributes","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get hasAttributes As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the object has Attributes &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the object has Attributes ","inlinecomment":" \t &apos; Flag indicating if the object has Attributes ","parentclassname":"ValuedElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isAList","comment":"Flag indicating if the Object is a List","valuetype":"Boolean","filenamebase":"isAList_Method","fqnprefix":"VSID.BSXdocumentationUtils.ValuedElement","qn":"Get.isAList","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isAList As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Object is a List&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Object is a List","inlinecomment":" \t &apos; Flag indicating if the Object is a List","parentclassname":"ValuedElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isAnArray","comment":"Flag indicating if the Object is an Array","valuetype":"Boolean","filenamebase":"isAnArray_Method","fqnprefix":"VSID.BSXdocumentationUtils.ValuedElement","qn":"Get.isAnArray","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isAnArray As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Object is an Array&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Object is an Array","inlinecomment":" \t &apos; Flag indicating if the Object is an Array","parentclassname":"ValuedElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isArgument","comment":"Flag indicating if the ValuedElement is an Argument","valuetype":"Boolean","filenamebase":"isArgument_Method","fqnprefix":"VSID.BSXdocumentationUtils.ValuedElement","qn":"Get.isArgument","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isArgument As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the ValuedElement is an Argument&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the ValuedElement is an Argument","inlinecomment":" \t &apos; Flag indicating if the ValuedElement is an Argument","parentclassname":"ValuedElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isValueTypeObject","comment":"isValueTypeObject","valuetype":"Boolean","filenamebase":"isValueTypeObject_Method","fqnprefix":"VSID.BSXdocumentationUtils.ValuedElement","qn":"Get.isValueTypeObject","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isValueTypeObject As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;isValueTypeObject&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"isValueTypeObject","inlinecomment":" \t &apos; isValueTypeObject","parentclassname":"ValuedElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"QN","comment":"Qualified Name of the Object \n\t\t\nDoes NOT include the FQNPrefix\n\t\t\n@return Qualified Name of the Object. ","valuetype":"String","filenamebase":"QN_Method","fqnprefix":"VSID.BSXdocumentationUtils.ValuedElement","qn":"Get.QN","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get QN As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Qualified Name of the Object &lt;br /&gt;\t\t&lt;br /&gt;Does NOT include the FQNPrefix&lt;br /&gt;\t\t&lt;br /&gt;@return Qualified Name of the Object. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Qualified Name of the Object &lt;br /&gt;\t\t&lt;br /&gt;Does NOT include the FQNPrefix&lt;br /&gt;\t\t&lt;br /&gt;@return Qualified Name of the Object. ","inlinecomment":" \t &apos; Qualified Name of the Object \n\t\t\nDoes NOT include the FQNPrefix\n\t\t\n@return Qualified Name of the Object. ","parentclassname":"ValuedElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Signature","comment":"Signature of the Object","valuetype":"String","filenamebase":"Signature_Method","fqnprefix":"VSID.BSXdocumentationUtils.ValuedElement","qn":"Get.Signature","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Signature As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Signature of the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Signature of the Object","inlinecomment":" \t &apos; Signature of the Object","parentclassname":"ValuedElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"ValueType","comment":"Value Type of the ValuedElement","valuetype":"String","filenamebase":"ValueType_Method","fqnprefix":"VSID.BSXdocumentationUtils.ValuedElement","qn":"Get.ValueType","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get ValueType As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Value Type of the ValuedElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Value Type of the ValuedElement","inlinecomment":" \t &apos; Value Type of the ValuedElement","parentclassname":"ValuedElement","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"appendAttribute","comment":"appends an Attribute to the object","valuetype":"","filenamebase":"appendAttribute_Method","fqnprefix":"VSID.BSXdocumentationUtils.ValuedElement","qn":"appendAttribute","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(attribute As String)","signature":"Public Sub appendAttribute(attribute As String)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;appends an Attribute to the object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"appends an Attribute to the object","inlinecomment":" \t &apos; appends an Attribute to the object","parentclassname":"ValuedElement","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"attribute","comment":"Attribute to append.","valuetype":"String","filenamebase":"attribute_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsValuedElementappendAttribute","qn":"attribute","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Attribute to append.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Attribute to append.","inlinecomment":" \t &apos; Attribute to append."}]},{"label":"New","comment":"Constructor","valuetype":"","filenamebase":"New_Method","fqnprefix":"VSID.BSXdocumentationUtils.ValuedElement","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"parentconstructor":"LabeledElement(Label, Comment)","argumentsuffix":"(FQNprefix As String, Label As String, ValueType As String, Comment As String)","signature":"Public Sub New(FQNprefix As String, Label As String, ValueType As String, Comment As String)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructor&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructor","inlinecomment":" \t &apos; Constructor","parentclassname":"ValuedElement","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"FQNprefix","comment":"Fully Qualified Name Prefix for the Object","valuetype":"String","filenamebase":"FQNprefix_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsValuedElementNew","qn":"FQNprefix","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Fully Qualified Name Prefix for the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Fully Qualified Name Prefix for the Object","inlinecomment":" \t &apos; Fully Qualified Name Prefix for the Object"},{"label":"Label","comment":"Label (Name) for the ValuedElement","valuetype":"String","filenamebase":"Label_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsValuedElementNew","qn":"Label","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Label (Name) for the ValuedElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Label (Name) for the ValuedElement","inlinecomment":" \t &apos; Label (Name) for the ValuedElement"},{"label":"ValueType","comment":"Value Type of the ValuedElement","valuetype":"String","filenamebase":"ValueType_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsValuedElementNew","qn":"ValueType","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Value Type of the ValuedElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Value Type of the ValuedElement","inlinecomment":" \t &apos; Value Type of the ValuedElement"},{"label":"Comment","comment":"Comment about the ValuedElement","valuetype":"String","filenamebase":"Comment_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsValuedElementNew","qn":"Comment","argumentindex":4,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Comment about the ValuedElement&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Comment about the ValuedElement","inlinecomment":" \t &apos; Comment about the ValuedElement"}]}]},{"classname":"Variable","comment":"Represents a Variable ","valuetype":"CodeElement","filenamebase":"Variable_ObjectClass","fqnprefix":"VSID.BSXdocumentationUtils","qn":"Variable","codesample":"","signaturecode":3072,"instancecode":1024,"parentclassname":"CodeElement","classtype":"Derived","classderivetype":"CodeElement","projectid":"7D1A2972E666A25885258AE100482F18","classid":"06B343BB58DBFF7685258AE1006C1BAC","signature":"Public Class Variable As CodeElement","modifiers":"Public","classname":"Variable","constructorsignature":"Public Sub New(Parent As CodeElement, Label As String, ValueType As String, Comment As String, CodeSample As String, SignatureCode As Long)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Represents a Variable &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Represents a Variable ","inlinecomment":" \t &apos; Represents a Variable ","codesamplehtml":"", "methods":[{"label":"New","comment":"","valuetype":"","filenamebase":"New_Method","fqnprefix":"VSID.BSXdocumentationUtils.Variable","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(Parent As CodeElement, Label As String, ValueType As String, Comment As String, CodeSample As String, SignatureCode As Long)","signature":"Public Sub New(Parent As CodeElement, Label As String, ValueType As String, Comment As String, CodeSample As String, SignatureCode As Long)","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"Variable","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"Parent","comment":"Parent Object for the Object","valuetype":"CodeElement","filenamebase":"Parent_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVariableNew","qn":"Parent","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Parent Object for the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Parent Object for the Object","inlinecomment":" \t &apos; Parent Object for the Object"},{"label":"Label","comment":"Label (Name) for the Object","valuetype":"String","filenamebase":"Label_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVariableNew","qn":"Label","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Label (Name) for the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Label (Name) for the Object","inlinecomment":" \t &apos; Label (Name) for the Object"},{"label":"ValueType","comment":"Value Type of the Object","valuetype":"String","filenamebase":"ValueType_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVariableNew","qn":"ValueType","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Value Type of the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Value Type of the Object","inlinecomment":" \t &apos; Value Type of the Object"},{"label":"Comment","comment":"Comment about the Object","valuetype":"String","filenamebase":"Comment_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVariableNew","qn":"Comment","argumentindex":4,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Comment about the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Comment about the Object","inlinecomment":" \t &apos; Comment about the Object"},{"label":"CodeSample","comment":"any sample code for the Object","valuetype":"String","filenamebase":"CodeSample_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVariableNew","qn":"CodeSample","argumentindex":5,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;any sample code for the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"any sample code for the Object","inlinecomment":" \t &apos; any sample code for the Object"},{"label":"SignatureCode","comment":"Long indicating the Object Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the Object","valuetype":"Long","filenamebase":"SignatureCode_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVariableNew","qn":"SignatureCode","argumentindex":6,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Long indicating the Object Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Long indicating the Object Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the Object","inlinecomment":" \t &apos; Long indicating the Object Type (such as Sub, Function, or Property) and modifiers (such as Public, Private, etc) of the Object"}]}]},{"classname":"VSE","comment":"Represents a VoltScript Extension Object","valuetype":"Project","filenamebase":"VSE_ObjectClass","fqnprefix":"VSID.BSXdocumentationUtils","qn":"VSE","codesample":"","signaturecode":3072,"instancecode":1024,"parentclassname":"Project","classtype":"Derived","classderivetype":"Project","projectid":"7D1A2972E666A25885258AE100482F18","classid":"9081EF6437CB7E8085258AE10071B7FC","signature":"Public Class VSE As Project","modifiers":"Public","classname":"VSE","constructorsignature":"Public Sub New(Parent As CodeElement, VSEName As String, Summary As String, Description As String)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Represents a VoltScript Extension Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Represents a VoltScript Extension Object","inlinecomment":" \t &apos; Represents a VoltScript Extension Object","codesamplehtml":"", "methods":[{"label":"BaseGUID","comment":"Base Globally Unique Identifier of the VSE","valuetype":"String","filenamebase":"BaseGUID_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSE","qn":"Get.BaseGUID","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get BaseGUID As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Base Globally Unique Identifier of the VSE&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Base Globally Unique Identifier of the VSE","inlinecomment":" \t &apos; Base Globally Unique Identifier of the VSE","parentclassname":"VSE","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"BaseID","comment":"BaseID value of the VSE","valuetype":"String","filenamebase":"BaseID_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSE","qn":"Get.BaseID","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get BaseID As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;BaseID value of the VSE&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"BaseID value of the VSE","inlinecomment":" \t &apos; BaseID value of the VSE","parentclassname":"VSE","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"CharacterSet","comment":"Chararacter Set of the VSE","valuetype":"String","filenamebase":"CharacterSet_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSE","qn":"Get.CharacterSet","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get CharacterSet As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Chararacter Set of the VSE&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Chararacter Set of the VSE","inlinecomment":" \t &apos; Chararacter Set of the VSE","parentclassname":"VSE","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"hasPlatforms","comment":"Flag indicating if the object has Platforms","valuetype":"Boolean","filenamebase":"hasPlatforms_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSE","qn":"Get.hasPlatforms","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get hasPlatforms As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the object has Platforms&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the object has Platforms","inlinecomment":" \t &apos; Flag indicating if the object has Platforms","parentclassname":"VSE","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Platforms","comment":"Platforms supported by the VSE\n\t\t\n@return StringsCarrier containing all supported platforms","valuetype":"StringsCarrier","filenamebase":"Platforms_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSE","qn":"Get.Platforms","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Platforms As StringsCarrier","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Platforms supported by the VSE&lt;br /&gt;\t\t&lt;br /&gt;@return StringsCarrier containing all supported platforms&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Platforms supported by the VSE&lt;br /&gt;\t\t&lt;br /&gt;@return StringsCarrier containing all supported platforms","inlinecomment":" \t &apos; Platforms supported by the VSE\n\t\t\n@return StringsCarrier containing all supported platforms","parentclassname":"VSE","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"VSEName","comment":"Name of the VSE","valuetype":"String","filenamebase":"VSEName_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSE","qn":"Get.VSEName","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get VSEName As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the VSE&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the VSE","inlinecomment":" \t &apos; Name of the VSE","parentclassname":"VSE","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"appendPlatform","comment":"Appends a Supported Platform To the VSE","valuetype":"","filenamebase":"appendPlatform_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSE","qn":"appendPlatform","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(platform As String)","signature":"Public Sub appendPlatform(platform As String)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Appends a Supported Platform To the VSE&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Appends a Supported Platform To the VSE","inlinecomment":" \t &apos; Appends a Supported Platform To the VSE","parentclassname":"VSE","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"platform","comment":"Supported Platform To be appended","valuetype":"String","filenamebase":"platform_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSEappendPlatform","qn":"platform","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Supported Platform To be appended&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Supported Platform To be appended","inlinecomment":" \t &apos; Supported Platform To be appended"}]},{"label":"New","comment":"Constructor","valuetype":"","filenamebase":"New_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSE","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"parentconstructor":"Project(Parent, VSEName, Summary, Description, SIGNATURE_VALUE_VSE)","argumentsuffix":"(Parent As CodeElement, VSEName As String, Summary As String, Description As String)","signature":"Public Sub New(Parent As CodeElement, VSEName As String, Summary As String, Description As String)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructor&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructor","inlinecomment":" \t &apos; Constructor","parentclassname":"VSE","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"Parent","comment":"Parent Object for the Object","valuetype":"CodeElement","filenamebase":"Parent_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSENew","qn":"Parent","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Parent Object for the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Parent Object for the Object","inlinecomment":" \t &apos; Parent Object for the Object"},{"label":"VSEName","comment":"Label Label (Name) for the Object","valuetype":"String","filenamebase":"VSEName_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSENew","qn":"VSEName","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Label Label (Name) for the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Label Label (Name) for the Object","inlinecomment":" \t &apos; Label Label (Name) for the Object"},{"label":"Summary","comment":"Summary information about the Object","valuetype":"String","filenamebase":"Summary_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSENew","qn":"Summary","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Summary information about the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Summary information about the Object","inlinecomment":" \t &apos; Summary information about the Object"},{"label":"Description","comment":"Detailed Description of the Object","valuetype":"String","filenamebase":"Description_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSENew","qn":"Description","argumentindex":4,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Detailed Description of the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Detailed Description of the Object","inlinecomment":" \t &apos; Detailed Description of the Object"}]}]},{"classname":"VSID","comment":"Represents all VSEs / Libraries (and their children) in a VSID Database.  ","valuetype":"MajorElement","filenamebase":"VSID_ObjectClass","fqnprefix":"VSID.BSXdocumentationUtils","qn":"VSID","codesample":"","signaturecode":3072,"instancecode":1024,"parentclassname":"MajorElement","classtype":"Derived","classderivetype":"MajorElement","projectid":"7D1A2972E666A25885258AE100482F18","classid":"3052ADAD185F7FE185258AE100728C35","signature":"Public Class VSID As MajorElement","modifiers":"Public","classname":"VSID","constructorsignature":"Public Sub New(VSIDname As String, Summary As String, Description As String)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Represents all VSEs / Libraries (and their children) in a VSID Database.  &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Represents all VSEs / Libraries (and their children) in a VSID Database.  ","inlinecomment":" \t &apos; Represents all VSEs / Libraries (and their children) in a VSID Database.  ","codesamplehtml":"", "methods":[{"label":"hasLibraries","comment":"Flag indicating if the VSID has Libraries ","valuetype":"Boolean","filenamebase":"hasLibraries_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSID","qn":"Get.hasLibraries","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get hasLibraries As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the VSID has Libraries &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the VSID has Libraries ","inlinecomment":" \t &apos; Flag indicating if the VSID has Libraries ","parentclassname":"VSID","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"hasVSEs","comment":"Flag indicating if the VSID has VSEs ","valuetype":"Boolean","filenamebase":"hasVSEs_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSID","qn":"Get.hasVSEs","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get hasVSEs As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the VSID has VSEs &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the VSID has VSEs ","inlinecomment":" \t &apos; Flag indicating if the VSID has VSEs ","parentclassname":"VSID","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Libraries","comment":"Array containing the Library names used bye the Object","valuetype":"Variant","filenamebase":"Libraries_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSID","qn":"Get.Libraries","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Libraries As Variant","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Array containing the Library names used bye the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Array containing the Library names used bye the Object","inlinecomment":" \t &apos; Array containing the Library names used bye the Object","parentclassname":"VSID","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"VSEs","comment":"Array containing the VSE names used by the Library","valuetype":"Variant","filenamebase":"VSEs_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSID","qn":"Get.VSEs","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get VSEs As Variant","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Array containing the VSE names used by the Library&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Array containing the VSE names used by the Library","inlinecomment":" \t &apos; Array containing the VSE names used by the Library","parentclassname":"VSID","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"VSIDname","comment":"Name of the VSID","valuetype":"String","filenamebase":"VSIDname_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSID","qn":"Get.VSIDname","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get VSIDname As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the VSID&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the VSID","inlinecomment":" \t &apos; Name of the VSID","parentclassname":"VSID","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"appendLibrary","comment":"Appends a Library to the Object ","valuetype":"","filenamebase":"appendLibrary_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSID","qn":"appendLibrary","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(source As Library)","signature":"Public Sub appendLibrary(source As Library)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Appends a Library to the Object &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Appends a Library to the Object ","inlinecomment":" \t &apos; Appends a Library to the Object ","parentclassname":"VSID","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"source","comment":"Library to be appended to the object","valuetype":"Library","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSIDappendLibrary","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Library to be appended to the object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Library to be appended to the object","inlinecomment":" \t &apos; Library to be appended to the object"}]},{"label":"appendVSE","comment":"Appends an VSE to the Object","valuetype":"","filenamebase":"appendVSE_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSID","qn":"appendVSE","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(source As VSE)","signature":"Public Sub appendVSE(source As VSE)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Appends an VSE to the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Appends an VSE to the Object","inlinecomment":" \t &apos; Appends an VSE to the Object","parentclassname":"VSID","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"source","comment":"VSE to be appended to the object. ","valuetype":"VSE","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSIDappendVSE","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;VSE to be appended to the object. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"VSE to be appended to the object. ","inlinecomment":" \t &apos; VSE to be appended to the object. "}]},{"label":"New","comment":"Constructor","valuetype":"","filenamebase":"New_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSID","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"parentconstructor":"MajorElement(Nothing, VSIDname, ||, Summary, Description, SIGNATURE_VALUE_VSID)","argumentsuffix":"(VSIDname As String, Summary As String, Description As String)","signature":"Public Sub New(VSIDname As String, Summary As String, Description As String)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructor&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructor","inlinecomment":" \t &apos; Constructor","parentclassname":"VSID","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"VSIDname","comment":"Name of the Object","valuetype":"String","filenamebase":"VSIDname_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSIDNew","qn":"VSIDname","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the Object","inlinecomment":" \t &apos; Name of the Object"},{"label":"Summary","comment":"Summary information about the Object","valuetype":"String","filenamebase":"Summary_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSIDNew","qn":"Summary","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Summary information about the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Summary information about the Object","inlinecomment":" \t &apos; Summary information about the Object"},{"label":"Description","comment":"Detailed Description of the Object","valuetype":"String","filenamebase":"Description_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSIDNew","qn":"Description","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Detailed Description of the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Detailed Description of the Object","inlinecomment":" \t &apos; Detailed Description of the Object"}]}]},{"classname":"VSIDwriter","comment":"Writer Class for writing BaliScript documentation and source code files. ","valuetype":"","filenamebase":"VSIDwriter_ObjectClass","fqnprefix":"VSID.BSXdocumentationUtils","qn":"VSIDwriter","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","projectid":"7D1A2972E666A25885258AE100482F18","classid":"BDED1D3EC1CEFAE985258AE2004C25B5","signature":"Public Class VSIDwriter","modifiers":"Public","classname":"VSIDwriter","parentclassname":"None","constructorsignature":"Public Sub New()","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Writer Class for writing BaliScript documentation and source code files. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Writer Class for writing BaliScript documentation and source code files. ","inlinecomment":" \t &apos; Writer Class for writing BaliScript documentation and source code files. ","codesamplehtml":"", "methods":[{"label":"createCodeElementFilepath","comment":"Creates a Filepath for a CodeElement\n\t\nConcatenates the TargetFolder and the CodeElement&amp;apos;s Parent Hierarchy to compute the filepath \n\t","valuetype":"String","filenamebase":"createCodeElementFilepath_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSIDwriter","qn":"createCodeElementFilepath","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(source As CodeElement, includesource As Boolean)","signature":"Public Function createCodeElementFilepath(source As CodeElement, includesource As Boolean) As String","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Creates a Filepath for a CodeElement&lt;br /&gt;\t&lt;br /&gt;Concatenates the TargetFolder and the CodeElement&amp;apos;s Parent Hierarchy to compute the filepath &lt;br /&gt;\t&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Creates a Filepath for a CodeElement&lt;br /&gt;\t&lt;br /&gt;Concatenates the TargetFolder and the CodeElement&amp;apos;s Parent Hierarchy to compute the filepath &lt;br /&gt;\t","inlinecomment":" \t &apos; Creates a Filepath for a CodeElement\n\t\nConcatenates the TargetFolder and the CodeElement&amp;apos;s Parent Hierarchy to compute the filepath \n\t","parentclassname":"VSIDwriter","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"CodeElement object from which to create the filepath ","valuetype":"CodeElement","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSIDwritercreateCodeElementFilepath","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;CodeElement object from which to create the filepath &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"CodeElement object from which to create the filepath ","inlinecomment":" \t &apos; CodeElement object from which to create the filepath "},{"label":"includesource","comment":"Flag indicating if the source CodeElement&amp;apos;s FileNameBase should be included in the filepath","valuetype":"Boolean","filenamebase":"includesource_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSIDwritercreateCodeElementFilepath","qn":"includesource","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the source CodeElement&amp;apos;s FileNameBase should be included in the filepath&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the source CodeElement&amp;apos;s FileNameBase should be included in the filepath","inlinecomment":" \t &apos; Flag indicating if the source CodeElement&amp;apos;s FileNameBase should be included in the filepath"}]},{"label":"getAPIdoc_MajorElement","comment":"Gets the API documentation content for a MajorElement instance.\n\t\t\nConditionally writes API documentation for Classes of the MajorElement ","valuetype":"StringQueue","filenamebase":"getAPIdocMajorElement_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSIDwriter","qn":"getAPIdocMajorElement","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(source As MajorElement, writeMajorElements As Boolean)","signature":"Public Function getAPIdoc_MajorElement(source As MajorElement, writeMajorElements As Boolean) As StringQueue","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets the API documentation content for a MajorElement instance.&lt;br /&gt;\t\t&lt;br /&gt;Conditionally writes API documentation for Classes of the MajorElement &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets the API documentation content for a MajorElement instance.&lt;br /&gt;\t\t&lt;br /&gt;Conditionally writes API documentation for Classes of the MajorElement ","inlinecomment":" \t &apos; Gets the API documentation content for a MajorElement instance.\n\t\t\nConditionally writes API documentation for Classes of the MajorElement ","parentclassname":"VSIDwriter","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"MajorElement object for which to write the documentation","valuetype":"MajorElement","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSIDwritergetAPIdocMajorElement","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;MajorElement object for which to write the documentation&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"MajorElement object for which to write the documentation","inlinecomment":" \t &apos; MajorElement object for which to write the documentation"},{"label":"writeMajorElements","comment":"Flag indicating if API documentation for child MajorElements should be written","valuetype":"Boolean","filenamebase":"writeMajorElements_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSIDwritergetAPIdocMajorElement","qn":"writeMajorElements","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if API documentation for child MajorElements should be written&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if API documentation for child MajorElements should be written","inlinecomment":" \t &apos; Flag indicating if API documentation for child MajorElements should be written"}]},{"label":"getCodeElementFilepath","comment":"Generates a Filepath for a CodeElement\n\t\nConcatenates the TargetFolder and the CodeElement&amp;apos;s Parent Hierarchy to compute the filepath ","valuetype":"String","filenamebase":"getCodeElementFilepath_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSIDwriter","qn":"getCodeElementFilepath","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(source As CodeElement, includesource As Boolean)","signature":"Public Function getCodeElementFilepath(source As CodeElement, includesource As Boolean) As String","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Generates a Filepath for a CodeElement&lt;br /&gt;\t&lt;br /&gt;Concatenates the TargetFolder and the CodeElement&amp;apos;s Parent Hierarchy to compute the filepath &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Generates a Filepath for a CodeElement&lt;br /&gt;\t&lt;br /&gt;Concatenates the TargetFolder and the CodeElement&amp;apos;s Parent Hierarchy to compute the filepath ","inlinecomment":" \t &apos; Generates a Filepath for a CodeElement\n\t\nConcatenates the TargetFolder and the CodeElement&amp;apos;s Parent Hierarchy to compute the filepath ","parentclassname":"VSIDwriter","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"CodeElement object from which to create the filepath","valuetype":"CodeElement","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSIDwritergetCodeElementFilepath","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;CodeElement object from which to create the filepath&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"CodeElement object from which to create the filepath","inlinecomment":" \t &apos; CodeElement object from which to create the filepath"},{"label":"includesource","comment":"Flag indicating if the source CodeElement&amp;apos;s FileNameBase should be included in the filepath","valuetype":"Boolean","filenamebase":"includesource_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSIDwritergetCodeElementFilepath","qn":"includesource","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the source CodeElement&amp;apos;s FileNameBase should be included in the filepath&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the source CodeElement&amp;apos;s FileNameBase should be included in the filepath","inlinecomment":" \t &apos; Flag indicating if the source CodeElement&amp;apos;s FileNameBase should be included in the filepath"}]},{"label":"getCodeElementResourcePath","comment":"Generates a relative filepath to the resources folder for a CodeElement \n\t\nCreates a ../.. pattern as as appropriate for the CodeElement&amp;apos;s Parent Hierarchy","valuetype":"String","filenamebase":"getCodeElementResourcePath_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSIDwriter","qn":"getCodeElementResourcePath","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(soure As CodeElement)","signature":"Public Function getCodeElementResourcePath(soure As CodeElement) As String","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Generates a relative filepath to the resources folder for a CodeElement &lt;br /&gt;\t&lt;br /&gt;Creates a ../.. pattern as as appropriate for the CodeElement&amp;apos;s Parent Hierarchy&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Generates a relative filepath to the resources folder for a CodeElement &lt;br /&gt;\t&lt;br /&gt;Creates a ../.. pattern as as appropriate for the CodeElement&amp;apos;s Parent Hierarchy","inlinecomment":" \t &apos; Generates a relative filepath to the resources folder for a CodeElement \n\t\nCreates a ../.. pattern as as appropriate for the CodeElement&amp;apos;s Parent Hierarchy","parentclassname":"VSIDwriter","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"soure","comment":"CodeElement object from which to create the resource relative filepath","valuetype":"CodeElement","filenamebase":"soure_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSIDwritergetCodeElementResourcePath","qn":"soure","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;CodeElement object from which to create the resource relative filepath&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"CodeElement object from which to create the resource relative filepath","inlinecomment":" \t &apos; CodeElement object from which to create the resource relative filepath"}]},{"label":"getCodeElementRootPath","comment":"Generates a relative filepath to the root API documentation folder for a CodeElement \n\t\nCreates a ../.. pattern as as appropriate for the CodeElement&amp;apos;s Parent Hierarchy","valuetype":"String","filenamebase":"getCodeElementRootPath_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSIDwriter","qn":"getCodeElementRootPath","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(source As CodeElement)","signature":"Public Function getCodeElementRootPath(source As CodeElement) As String","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Generates a relative filepath to the root API documentation folder for a CodeElement &lt;br /&gt;\t&lt;br /&gt;Creates a ../.. pattern as as appropriate for the CodeElement&amp;apos;s Parent Hierarchy&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Generates a relative filepath to the root API documentation folder for a CodeElement &lt;br /&gt;\t&lt;br /&gt;Creates a ../.. pattern as as appropriate for the CodeElement&amp;apos;s Parent Hierarchy","inlinecomment":" \t &apos; Generates a relative filepath to the root API documentation folder for a CodeElement \n\t\nCreates a ../.. pattern as as appropriate for the CodeElement&amp;apos;s Parent Hierarchy","parentclassname":"VSIDwriter","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"CodeElement object from which to create the relative root filepath","valuetype":"CodeElement","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSIDwritergetCodeElementRootPath","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;CodeElement object from which to create the relative root filepath&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"CodeElement object from which to create the relative root filepath","inlinecomment":" \t &apos; CodeElement object from which to create the relative root filepath"}]},{"label":"update_VSIDlist","comment":"Updates the API documentation vsid-list file","valuetype":"StringQueue","filenamebase":"updateVSIDlist_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSIDwriter","qn":"updateVSIDlist","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(source As VSID)","signature":"Public Function update_VSIDlist(source As VSID) As StringQueue","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Updates the API documentation vsid-list file&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Updates the API documentation vsid-list file","inlinecomment":" \t &apos; Updates the API documentation vsid-list file","parentclassname":"VSIDwriter","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"API documentation VSID to be checked / added to the vsid-list file\n\t\t\nThe vsid-list file contains lines of formmated text, with each line representing a VSID\n\t\tFORMAT: \n\t\tFQN|FileNameBase|Label","valuetype":"VSID","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSIDwriterupdateVSIDlist","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;API documentation VSID to be checked / added to the vsid-list file&lt;br /&gt;\t\t&lt;br /&gt;The vsid-list file contains lines of formmated text, with each line representing a VSID&lt;br /&gt;\t\tFORMAT: &lt;br /&gt;\t\tFQN|FileNameBase|Label&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"API documentation VSID to be checked / added to the vsid-list file&lt;br /&gt;\t\t&lt;br /&gt;The vsid-list file contains lines of formmated text, with each line representing a VSID&lt;br /&gt;\t\tFORMAT: &lt;br /&gt;\t\tFQN|FileNameBase|Label","inlinecomment":" \t &apos; API documentation VSID to be checked / added to the vsid-list file\n\t\t\nThe vsid-list file contains lines of formmated text, with each line representing a VSID\n\t\tFORMAT: \n\t\tFQN|FileNameBase|Label"}]},{"label":"writeAPIdoc_Container","comment":"Writes API documentation html files for an array of BSX MajorElement Objects\n\t\t\nValid object types are: VSID, VSE, Library, ObjectClass ","valuetype":"StringQueue","filenamebase":"writeAPIdocContainer_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSIDwriter","qn":"writeAPIdocContainer","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(container As Variant)","signature":"Public Function writeAPIdoc_Container(container As Variant) As StringQueue","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Writes API documentation html files for an array of BSX MajorElement Objects&lt;br /&gt;\t\t&lt;br /&gt;Valid object types are: VSID, VSE, Library, ObjectClass &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Writes API documentation html files for an array of BSX MajorElement Objects&lt;br /&gt;\t\t&lt;br /&gt;Valid object types are: VSID, VSE, Library, ObjectClass ","inlinecomment":" \t &apos; Writes API documentation html files for an array of BSX MajorElement Objects\n\t\t\nValid object types are: VSID, VSE, Library, ObjectClass ","parentclassname":"VSIDwriter","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"container","comment":"Array containing BSX objects for which to write the API documentation html files","valuetype":"Variant","filenamebase":"container_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSIDwriterwriteAPIdocContainer","qn":"container","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Array containing BSX objects for which to write the API documentation html files&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Array containing BSX objects for which to write the API documentation html files","inlinecomment":" \t &apos; Array containing BSX objects for which to write the API documentation html files"}]},{"label":"writeAPIdoc_MajorElement","comment":"Writes the documentation for a MajorElement instance.","valuetype":"String","filenamebase":"writeAPIdocMajorElement_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSIDwriter","qn":"writeAPIdocMajorElement","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(source As MajorElement)","signature":"Public Function writeAPIdoc_MajorElement(source As MajorElement) As String","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Writes the documentation for a MajorElement instance.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Writes the documentation for a MajorElement instance.","inlinecomment":" \t &apos; Writes the documentation for a MajorElement instance.","parentclassname":"VSIDwriter","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"MajorElement object for which to write the documentation","valuetype":"MajorElement","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSIDwriterwriteAPIdocMajorElement","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;MajorElement object for which to write the documentation&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"MajorElement object for which to write the documentation","inlinecomment":" \t &apos; MajorElement object for which to write the documentation"}]},{"label":"writeAPIdoc_MajorElementsFiles","comment":"Updates the API documentation majorelements file\n\t\t\nThe majorelements file contains lines of formmated text, with each line representing a MajorElement\n\tFORMAT: \n\tInstanceType|FQN|Relative Filepath|Label","valuetype":"StringQueue","filenamebase":"writeAPIdocMajorElementsFiles_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSIDwriter","qn":"writeAPIdocMajorElementsFiles","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(source As MajorElement)","signature":"Public Function writeAPIdoc_MajorElementsFiles(source As MajorElement) As StringQueue","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Updates the API documentation majorelements file&lt;br /&gt;\t\t&lt;br /&gt;The majorelements file contains lines of formmated text, with each line representing a MajorElement&lt;br /&gt;\tFORMAT: &lt;br /&gt;\tInstanceType|FQN|Relative Filepath|Label&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Updates the API documentation majorelements file&lt;br /&gt;\t\t&lt;br /&gt;The majorelements file contains lines of formmated text, with each line representing a MajorElement&lt;br /&gt;\tFORMAT: &lt;br /&gt;\tInstanceType|FQN|Relative Filepath|Label","inlinecomment":" \t &apos; Updates the API documentation majorelements file\n\t\t\nThe majorelements file contains lines of formmated text, with each line representing a MajorElement\n\tFORMAT: \n\tInstanceType|FQN|Relative Filepath|Label","parentclassname":"VSIDwriter","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"API documentation MajorElement whose content MajorElements information should be written to the majorelements file.","valuetype":"MajorElement","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSIDwriterwriteAPIdocMajorElementsFiles","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;API documentation MajorElement whose content MajorElements information should be written to the majorelements file.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"API documentation MajorElement whose content MajorElements information should be written to the majorelements file.","inlinecomment":" \t &apos; API documentation MajorElement whose content MajorElements information should be written to the majorelements file."}]},{"label":"writeAPIdoc_VSID","comment":"Writes the documentation for a VSID instance.","valuetype":"String","filenamebase":"writeAPIdocVSID_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSIDwriter","qn":"writeAPIdocVSID","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(source As VSID)","signature":"Public Function writeAPIdoc_VSID(source As VSID) As String","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Writes the documentation for a VSID instance.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Writes the documentation for a VSID instance.","inlinecomment":" \t &apos; Writes the documentation for a VSID instance.","parentclassname":"VSIDwriter","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"VSID object for which to write the documentation","valuetype":"VSID","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSIDwriterwriteAPIdocVSID","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;VSID object for which to write the documentation&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"VSID object for which to write the documentation","inlinecomment":" \t &apos; VSID object for which to write the documentation"}]},{"label":"DocumentationDirectory","comment":"Target Directory wherein API documentation documentation should be written. ","valuetype":"String","filenamebase":"DocumentationDirectory_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSIDwriter","qn":"Get.DocumentationDirectory","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get DocumentationDirectory As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Target Directory wherein API documentation documentation should be written. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Target Directory wherein API documentation documentation should be written. ","inlinecomment":" \t &apos; Target Directory wherein API documentation documentation should be written. ","parentclassname":"VSIDwriter","codesamplehtml":"", "signatureelements":["Public","Property","Get"]},{"label":"isUpdatingFrameset","comment":"Flag indicating if the API documentation Frameset is being updated ","valuetype":"Boolean","filenamebase":"isUpdatingFrameset_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSIDwriter","qn":"Get.isUpdatingFrameset","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isUpdatingFrameset As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the API documentation Frameset is being updated &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the API documentation Frameset is being updated ","inlinecomment":" \t &apos; Flag indicating if the API documentation Frameset is being updated ","parentclassname":"VSIDwriter","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"ScriptDirectory","comment":"Target Directory wherein Script source files should be written. ","valuetype":"String","filenamebase":"ScriptDirectory_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSIDwriter","qn":"Get.ScriptDirectory","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get ScriptDirectory As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Target Directory wherein Script source files should be written. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Target Directory wherein Script source files should be written. ","inlinecomment":" \t &apos; Target Directory wherein Script source files should be written. ","parentclassname":"VSIDwriter","codesamplehtml":"", "signatureelements":["Public","Property","Get"]},{"label":"DocumentationDirectory","comment":"Target Directory wherein API documentation documentation should be written. ","valuetype":"String","filenamebase":"DocumentationDirectory_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSIDwriter","qn":"Set.DocumentationDirectory","codesample":"","signaturecode":2308,"instancecode":256,"argumentsuffix":"","signature":"Public Property Set DocumentationDirectory As String","modifiers":"Public Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Target Directory wherein API documentation documentation should be written. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Target Directory wherein API documentation documentation should be written. ","inlinecomment":" \t &apos; Target Directory wherein API documentation documentation should be written. ","parentclassname":"VSIDwriter","codesamplehtml":"", "signatureelements":["Public","Property","Set"]},{"label":"ScriptDirectory","comment":"Target Directory wherein Script source files should be written. ","valuetype":"String","filenamebase":"ScriptDirectory_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSIDwriter","qn":"Set.ScriptDirectory","codesample":"","signaturecode":2308,"instancecode":256,"argumentsuffix":"","signature":"Public Property Set ScriptDirectory As String","modifiers":"Public Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Target Directory wherein Script source files should be written. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Target Directory wherein Script source files should be written. ","inlinecomment":" \t &apos; Target Directory wherein Script source files should be written. ","parentclassname":"VSIDwriter","codesamplehtml":"", "signatureelements":["Public","Property","Set"]},{"label":"New","comment":"","valuetype":"VSIDwriter","filenamebase":"New_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSIDwriter","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub New()","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"VSIDwriter","codesamplehtml":"", "signatureelements":["Public","Sub"]},{"label":"updateBalidoc_Frameset","comment":"Updates the API documentation Frameset Files ","valuetype":"","filenamebase":"updateBalidocFrameset_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSIDwriter","qn":"updateBalidocFrameset","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(source As VSID)","signature":"Public Sub updateBalidoc_Frameset(source As VSID)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Updates the API documentation Frameset Files &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Updates the API documentation Frameset Files ","inlinecomment":" \t &apos; Updates the API documentation Frameset Files ","parentclassname":"VSIDwriter","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"source","comment":"API documentation VSID to be checked / added to the vsid-list file","valuetype":"VSID","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSIDwriterupdateBalidocFrameset","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;API documentation VSID to be checked / added to the vsid-list file&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"API documentation VSID to be checked / added to the vsid-list file","inlinecomment":" \t &apos; API documentation VSID to be checked / added to the vsid-list file"}]},{"label":"writeAPIdoc_MajorElementsFrameHTML","comment":"Writes the API documentation Nav-Content-Frame HTML file. ","valuetype":"","filenamebase":"writeAPIdocMajorElementsFrameHTML_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSIDwriter","qn":"writeAPIdocMajorElementsFrameHTML","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub writeAPIdoc_MajorElementsFrameHTML()","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Writes the API documentation Nav-Content-Frame HTML file. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Writes the API documentation Nav-Content-Frame HTML file. ","inlinecomment":" \t &apos; Writes the API documentation Nav-Content-Frame HTML file. ","parentclassname":"VSIDwriter","codesamplehtml":"", "signatureelements":["Public","Sub"]},{"label":"writeAPIdoc_OverviewFrameHTML","comment":"Writes the API documentation OverView Frame HTML file.\n\t\t\t\t\nThe vsid-list file contains lines of formmated text, with each line representing a VSID\n\tFORMAT: \n\tFQN|Relative Filepath|Label","valuetype":"","filenamebase":"writeAPIdocOverviewFrameHTML_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSIDwriter","qn":"writeAPIdocOverviewFrameHTML","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(source As MajorElement)","signature":"Public Sub writeAPIdoc_OverviewFrameHTML(source As MajorElement)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Writes the API documentation OverView Frame HTML file.&lt;br /&gt;\t\t\t\t&lt;br /&gt;The vsid-list file contains lines of formmated text, with each line representing a VSID&lt;br /&gt;\tFORMAT: &lt;br /&gt;\tFQN|Relative Filepath|Label&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Writes the API documentation OverView Frame HTML file.&lt;br /&gt;\t\t\t\t&lt;br /&gt;The vsid-list file contains lines of formmated text, with each line representing a VSID&lt;br /&gt;\tFORMAT: &lt;br /&gt;\tFQN|Relative Filepath|Label","inlinecomment":" \t &apos; Writes the API documentation OverView Frame HTML file.\n\t\t\t\t\nThe vsid-list file contains lines of formmated text, with each line representing a VSID\n\tFORMAT: \n\tFQN|Relative Filepath|Label","parentclassname":"VSIDwriter","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"source","comment":"VSID information for all current API documentation VSIDs","valuetype":"MajorElement","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSIDwriterwriteAPIdocOverviewFrameHTML","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;VSID information for all current API documentation VSIDs&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"VSID information for all current API documentation VSIDs","inlinecomment":" \t &apos; VSID information for all current API documentation VSIDs"}]},{"label":"writeAPIdoc_OverviewSummaryHTML","comment":"Writes the API documentation OverView Summary HTML file.\nThe vsid-list file contains lines of formmated text, with each line representing a VSID\n\tFORMAT: \n\tFQN|Relative Filepath|Label","valuetype":"","filenamebase":"writeAPIdocOverviewSummaryHTML_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSIDwriter","qn":"writeAPIdocOverviewSummaryHTML","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(source As StringQueue)","signature":"Public Sub writeAPIdoc_OverviewSummaryHTML(source As StringQueue)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Writes the API documentation OverView Summary HTML file.&lt;br /&gt;The vsid-list file contains lines of formmated text, with each line representing a VSID&lt;br /&gt;\tFORMAT: &lt;br /&gt;\tFQN|Relative Filepath|Label&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Writes the API documentation OverView Summary HTML file.&lt;br /&gt;The vsid-list file contains lines of formmated text, with each line representing a VSID&lt;br /&gt;\tFORMAT: &lt;br /&gt;\tFQN|Relative Filepath|Label","inlinecomment":" \t &apos; Writes the API documentation OverView Summary HTML file.\nThe vsid-list file contains lines of formmated text, with each line representing a VSID\n\tFORMAT: \n\tFQN|Relative Filepath|Label","parentclassname":"VSIDwriter","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"source","comment":"StringQueue containing the VSID information for all current API documentation VSIDs","valuetype":"StringQueue","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSIDwriterwriteAPIdocOverviewSummaryHTML","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;StringQueue containing the VSID information for all current API documentation VSIDs&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"StringQueue containing the VSID information for all current API documentation VSIDs","inlinecomment":" \t &apos; StringQueue containing the VSID information for all current API documentation VSIDs"}]},{"label":"writeAPIdoc_VSIDFrameHTML","comment":"Writes the API documentation vsid-frame.html file for the specific VSID","valuetype":"","filenamebase":"writeAPIdocVSIDFrameHTML_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSIDwriter","qn":"writeAPIdocVSIDFrameHTML","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(source As VSID)","signature":"Public Sub writeAPIdoc_VSIDFrameHTML(source As VSID)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Writes the API documentation vsid-frame.html file for the specific VSID&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Writes the API documentation vsid-frame.html file for the specific VSID","inlinecomment":" \t &apos; Writes the API documentation vsid-frame.html file for the specific VSID","parentclassname":"VSIDwriter","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"source","comment":"API documentation VSID for which to write the vsid-frame.html file","valuetype":"VSID","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXdocumentationUtilsVSIDwriterwriteAPIdocVSIDFrameHTML","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;API documentation VSID for which to write the vsid-frame.html file&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"API documentation VSID for which to write the vsid-frame.html file","inlinecomment":" \t &apos; API documentation VSID for which to write the vsid-frame.html file"}]},{"label":"write_IndexHTML","comment":"Writes the API documentation index.html file ","valuetype":"","filenamebase":"writeIndexHTML_Method","fqnprefix":"VSID.BSXdocumentationUtils.VSIDwriter","qn":"writeIndexHTML","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub write_IndexHTML()","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Writes the API documentation index.html file &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Writes the API documentation index.html file ","inlinecomment":" \t &apos; Writes the API documentation index.html file ","parentclassname":"VSIDwriter","codesamplehtml":"", "signatureelements":["Public","Sub"]}]}]}
