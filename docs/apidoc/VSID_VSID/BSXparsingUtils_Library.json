{"label":"BSXparsingUtils","comment":"Created Nov 2022 by Devin Olson/USA/PNPHCL\n\tBaliSX Script Reading / Parsing Utilities","valuetype":"","filenamebase":"BSXparsingUtils_Library","fqnprefix":"VSID","qn":"BSXparsingUtils","codesample":"","signaturecode":65536,"instancecode":65536,"description":"","codesamplehtml":"","scriptcreator":"Devin Olson","signature":"Library BSXparsingUtils","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Created Nov 2022 by Devin Olson/USA/PNPHCL&lt;br /&gt;\tBaliSX Script Reading / Parsing Utilities&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Created Nov 2022 by Devin Olson/USA/PNPHCL&lt;br /&gt;\tBaliSX Script Reading / Parsing Utilities","inlinecomment":" \t &apos; Created Nov 2022 by Devin Olson/USA/PNPHCL\n\tBaliSX Script Reading / Parsing Utilities", "methods":[{"label":"getBeginIndices","comment":"Returns an array of Integers containing the beginning index positions of all instances of a substring within a source string.","valuetype":"IntegerQueue","filenamebase":"getBeginIndices_Method","fqnprefix":"VSID.BSXparsingUtils","qn":"getBeginIndices","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(source As String, substring As String, maxindex As Integer)","signature":"Public Function getBeginIndices(source As String, substring As String, maxindex As Integer) As IntegerQueue","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Returns an array of Integers containing the beginning index positions of all instances of a substring within a source string.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Returns an array of Integers containing the beginning index positions of all instances of a substring within a source string.","inlinecomment":" \t &apos; Returns an array of Integers containing the beginning index positions of all instances of a substring within a source string.","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"String to search","valuetype":"String","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsgetBeginIndices","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;String to search&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"String to search","inlinecomment":" \t &apos; String to search"},{"label":"substring","comment":"Substring to search for for instances within source","valuetype":"String","filenamebase":"substring_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsgetBeginIndices","qn":"substring","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Substring to search for for instances within source&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Substring to search for for instances within source","inlinecomment":" \t &apos; Substring to search for for instances within source"},{"label":"maxindex","comment":"The maximum index number allowed to be returned.","valuetype":"Integer","filenamebase":"maxindex_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsgetBeginIndices","qn":"maxindex","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The maximum index number allowed to be returned.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The maximum index number allowed to be returned.","inlinecomment":" \t &apos; The maximum index number allowed to be returned."}]},{"label":"mergeScriptSource","comment":"Merges source script script object with existing content. ","valuetype":"StringQueue","filenamebase":"mergeScriptSource_Method","fqnprefix":"VSID.BSXparsingUtils","qn":"mergeScriptSource","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(source As StringQueue, projectname As String, filepath As String, instance_code As Integer, unmerged As StringQueue, duplicateoutput As Boolean, writeJSON As Boolean)","signature":"Public Function mergeScriptSource(source As StringQueue, projectname As String, filepath As String, instance_code As Integer, unmerged As StringQueue, duplicateoutput As Boolean, writeJSON As Boolean) As StringQueue","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Merges source script script object with existing content. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Merges source script script object with existing content. ","inlinecomment":" \t &apos; Merges source script script object with existing content. ","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"Source Script object","valuetype":"StringQueue","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsmergeScriptSource","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Source Script object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Source Script object","inlinecomment":" \t &apos; Source Script object"},{"label":"projectname","comment":"Name of the Project ","valuetype":"String","filenamebase":"projectname_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsmergeScriptSource","qn":"projectname","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the Project &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the Project ","inlinecomment":" \t &apos; Name of the Project "},{"label":"filepath","comment":"Filepath of the existing source script file","valuetype":"String","filenamebase":"filepath_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsmergeScriptSource","qn":"filepath","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Filepath of the existing source script file&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Filepath of the existing source script file","inlinecomment":" \t &apos; Filepath of the existing source script file"},{"label":"instance_code","comment":"Integer code indicating the type of code block this object (Library, Function, Class, etc) represents.","valuetype":"Integer","filenamebase":"instancecode_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsmergeScriptSource","qn":"instancecode","argumentindex":4,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Integer code indicating the type of code block this object (Library, Function, Class, etc) represents.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Integer code indicating the type of code block this object (Library, Function, Class, etc) represents.","inlinecomment":" \t &apos; Integer code indicating the type of code block this object (Library, Function, Class, etc) represents."},{"label":"unmerged","comment":"StringQueue containing unmerged script (code that could not be matched)","valuetype":"StringQueue","filenamebase":"unmerged_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsmergeScriptSource","qn":"unmerged","argumentindex":5,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;StringQueue containing unmerged script (code that could not be matched)&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"StringQueue containing unmerged script (code that could not be matched)","inlinecomment":" \t &apos; StringQueue containing unmerged script (code that could not be matched)"},{"label":"duplicateoutput","comment":"Flag indicating if the existing source script file should be duplicated (extension &amp;quot;output.vss&amp;quot; will be added)","valuetype":"Boolean","filenamebase":"duplicateoutput_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsmergeScriptSource","qn":"duplicateoutput","argumentindex":6,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the existing source script file should be duplicated (extension &amp;quot;output.vss&amp;quot; will be added)&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the existing source script file should be duplicated (extension &amp;quot;output.vss&amp;quot; will be added)","inlinecomment":" \t &apos; Flag indicating if the existing source script file should be duplicated (extension &amp;quot;output.vss&amp;quot; will be added)"},{"label":"writeJSON","comment":"Flag indicating if the JSON generated from the source script should be written to a file (extension &amp;quot;.json&amp;quot; will be added)","valuetype":"Boolean","filenamebase":"writeJSON_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsmergeScriptSource","qn":"writeJSON","argumentindex":7,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the JSON generated from the source script should be written to a file (extension &amp;quot;.json&amp;quot; will be added)&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the JSON generated from the source script should be written to a file (extension &amp;quot;.json&amp;quot; will be added)","inlinecomment":" \t &apos; Flag indicating if the JSON generated from the source script should be written to a file (extension &amp;quot;.json&amp;quot; will be added)"}]},{"label":"spawnScriptNodeFromFile","comment":"Loads a script source library file into a new BSXscriptNode","valuetype":"BSXscriptNode","filenamebase":"spawnScriptNodeFromFile_Method","fqnprefix":"VSID.BSXparsingUtils","qn":"spawnScriptNodeFromFile","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(projectname As String, filepath As String, instance_code As Integer, duplicateoutput As Boolean, writeJSON As Boolean)","signature":"Public Function spawnScriptNodeFromFile(projectname As String, filepath As String, instance_code As Integer, duplicateoutput As Boolean, writeJSON As Boolean) As BSXscriptNode","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Loads a script source library file into a new BSXscriptNode&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Loads a script source library file into a new BSXscriptNode","inlinecomment":" \t &apos; Loads a script source library file into a new BSXscriptNode","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"projectname","comment":"Name of the Project ","valuetype":"String","filenamebase":"projectname_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsspawnScriptNodeFromFile","qn":"projectname","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the Project &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the Project ","inlinecomment":" \t &apos; Name of the Project "},{"label":"filepath","comment":"Filepath of the existing source script file","valuetype":"String","filenamebase":"filepath_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsspawnScriptNodeFromFile","qn":"filepath","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Filepath of the existing source script file&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Filepath of the existing source script file","inlinecomment":" \t &apos; Filepath of the existing source script file"},{"label":"instance_code","comment":"Integer code indicating the type of code block this object (Library, Function, Class, etc) represents.","valuetype":"Integer","filenamebase":"instancecode_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsspawnScriptNodeFromFile","qn":"instancecode","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Integer code indicating the type of code block this object (Library, Function, Class, etc) represents.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Integer code indicating the type of code block this object (Library, Function, Class, etc) represents.","inlinecomment":" \t &apos; Integer code indicating the type of code block this object (Library, Function, Class, etc) represents."},{"label":"duplicateoutput","comment":"Flag indicating if the existing source script file should be duplicated (extension &amp;quot;output.vss&amp;quot; will be added)","valuetype":"Boolean","filenamebase":"duplicateoutput_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsspawnScriptNodeFromFile","qn":"duplicateoutput","argumentindex":4,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the existing source script file should be duplicated (extension &amp;quot;output.vss&amp;quot; will be added)&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the existing source script file should be duplicated (extension &amp;quot;output.vss&amp;quot; will be added)","inlinecomment":" \t &apos; Flag indicating if the existing source script file should be duplicated (extension &amp;quot;output.vss&amp;quot; will be added)"},{"label":"writeJSON","comment":"Flag indicating if the JSON generated from the source script should be written to a file (extension &amp;quot;.json&amp;quot; will be added)","valuetype":"Boolean","filenamebase":"writeJSON_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsspawnScriptNodeFromFile","qn":"writeJSON","argumentindex":5,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the JSON generated from the source script should be written to a file (extension &amp;quot;.json&amp;quot; will be added)&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the JSON generated from the source script should be written to a file (extension &amp;quot;.json&amp;quot; will be added)","inlinecomment":" \t &apos; Flag indicating if the JSON generated from the source script should be written to a file (extension &amp;quot;.json&amp;quot; will be added)"}]}], "classes":[{"classname":"BSXscriptNode","comment":"Represents a block of script code. ","valuetype":"ValuedElement","filenamebase":"BSXscriptNode_ObjectClass","fqnprefix":"VSID.BSXparsingUtils","qn":"BSXscriptNode","codesample":"","signaturecode":3072,"instancecode":1024,"parentclassname":"ValuedElement","classtype":"Derived","classderivetype":"ValuedElement","projectid":"F4643802ED642DBA85258AE5006336F9","classid":"09320DD873E6C00485258AE500634583","signature":"Public Class BSXscriptNode As ValuedElement","modifiers":"Public","classname":"BSXscriptNode","constructorsignature":"Public Sub New(parent As BSXscriptNode, FQNprefix As String, Comment As String)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Represents a block of script code. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Represents a block of script code. ","inlinecomment":" \t &apos; Represents a block of script code. ","codesamplehtml":"", "methods":[{"label":"getNode","comment":"Retrieves the child node matching the associated key. \n\t\t\nSearches for direct child node first, if none found then searches in all partially matched child nodes.  ","valuetype":"BSXscriptNode","filenamebase":"getNode_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"getNode","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(key As String)","signature":"Public Function getNode(key As String) As BSXscriptNode","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Retrieves the child node matching the associated key. &lt;br /&gt;\t\t&lt;br /&gt;Searches for direct child node first, if none found then searches in all partially matched child nodes.  &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Retrieves the child node matching the associated key. &lt;br /&gt;\t\t&lt;br /&gt;Searches for direct child node first, if none found then searches in all partially matched child nodes.  ","inlinecomment":" \t &apos; Retrieves the child node matching the associated key. \n\t\t\nSearches for direct child node first, if none found then searches in all partially matched child nodes.  ","parentclassname":"BSXscriptNode","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"key","comment":"QN identifier of the child node to retrive","valuetype":"String","filenamebase":"key_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsBSXscriptNodegetNode","qn":"key","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;QN identifier of the child node to retrive&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"QN identifier of the child node to retrive","inlinecomment":" \t &apos; QN identifier of the child node to retrive", "attributes":["ByVal"]}]},{"label":"hasNode","comment":"Indicates if the object has a child node matching the specified key. \n\t\t\nSearches for direct child node first, if none found then searches in all partially matched child nodes.  ","valuetype":"Boolean","filenamebase":"hasNode_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"hasNode","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(key As String)","signature":"Public Function hasNode(key As String) As Boolean","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Indicates if the object has a child node matching the specified key. &lt;br /&gt;\t\t&lt;br /&gt;Searches for direct child node first, if none found then searches in all partially matched child nodes.  &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Indicates if the object has a child node matching the specified key. &lt;br /&gt;\t\t&lt;br /&gt;Searches for direct child node first, if none found then searches in all partially matched child nodes.  ","inlinecomment":" \t &apos; Indicates if the object has a child node matching the specified key. \n\t\t\nSearches for direct child node first, if none found then searches in all partially matched child nodes.  ","parentclassname":"BSXscriptNode","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"key","comment":"QN identifier of the child node for which to search","valuetype":"String","filenamebase":"key_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsBSXscriptNodehasNode","qn":"key","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;QN identifier of the child node for which to search&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"QN identifier of the child node for which to search","inlinecomment":" \t &apos; QN identifier of the child node for which to search", "attributes":["ByVal"]}]},{"label":"insertNode","comment":"Inserts the specified node to the object. \n\t\t\nUses the node&amp;apos;s QN to determine the appropritate location to place the node (either as a direct child or as a descendent within the appropriate childe node).  \nIf the new node does not have an appropriate matching node to replace it will be added as a new child node.  ","valuetype":"Boolean","filenamebase":"insertNode_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"insertNode","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(source As BSXscriptNode)","signature":"Public Function insertNode(source As BSXscriptNode) As Boolean","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Inserts the specified node to the object. &lt;br /&gt;\t\t&lt;br /&gt;Uses the node&amp;apos;s QN to determine the appropritate location to place the node (either as a direct child or as a descendent within the appropriate childe node).  &lt;br /&gt;If the new node does not have an appropriate matching node to replace it will be added as a new child node.  &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Inserts the specified node to the object. &lt;br /&gt;\t\t&lt;br /&gt;Uses the node&amp;apos;s QN to determine the appropritate location to place the node (either as a direct child or as a descendent within the appropriate childe node).  &lt;br /&gt;If the new node does not have an appropriate matching node to replace it will be added as a new child node.  ","inlinecomment":" \t &apos; Inserts the specified node to the object. \n\t\t\nUses the node&amp;apos;s QN to determine the appropritate location to place the node (either as a direct child or as a descendent within the appropriate childe node).  \nIf the new node does not have an appropriate matching node to replace it will be added as a new child node.  ","parentclassname":"BSXscriptNode","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"Node to be added to the object. ","valuetype":"BSXscriptNode","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsBSXscriptNodeinsertNode","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Node to be added to the object. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Node to be added to the object. ","inlinecomment":" \t &apos; Node to be added to the object. "}]},{"label":"removeNode","comment":"Removes a child node matching the associated key. \n\t\t\nSearches for direct child node first, if none found then searches in all partially matched child nodes.\nIf a matching node is found it will be removed.\t","valuetype":"Boolean","filenamebase":"removeNode_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"removeNode","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(key As String)","signature":"Public Function removeNode(key As String) As Boolean","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Removes a child node matching the associated key. &lt;br /&gt;\t\t&lt;br /&gt;Searches for direct child node first, if none found then searches in all partially matched child nodes.&lt;br /&gt;If a matching node is found it will be removed.\t&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Removes a child node matching the associated key. &lt;br /&gt;\t\t&lt;br /&gt;Searches for direct child node first, if none found then searches in all partially matched child nodes.&lt;br /&gt;If a matching node is found it will be removed.\t","inlinecomment":" \t &apos; Removes a child node matching the associated key. \n\t\t\nSearches for direct child node first, if none found then searches in all partially matched child nodes.\nIf a matching node is found it will be removed.\t","parentclassname":"BSXscriptNode","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"key","comment":"QN identifier of the child node to retrive","valuetype":"String","filenamebase":"key_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsBSXscriptNoderemoveNode","qn":"key","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;QN identifier of the child node to retrive&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"QN identifier of the child node to retrive","inlinecomment":" \t &apos; QN identifier of the child node to retrive"}]},{"label":"spawnBSXScriptCodeObject","comment":"Spawns a CodeOjbect from the Script Node. ","valuetype":"Variant","filenamebase":"spawnBSXScriptCodeObject_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"spawnBSXScriptCodeObject","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(objParent As CodeElement)","signature":"Public Function spawnBSXScriptCodeObject(objParent As CodeElement) As Variant","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Spawns a CodeOjbect from the Script Node. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Spawns a CodeOjbect from the Script Node. ","inlinecomment":" \t &apos; Spawns a CodeOjbect from the Script Node. ","parentclassname":"BSXscriptNode","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"objParent","comment":"Parent Object for the Object","valuetype":"CodeElement","filenamebase":"objParent_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsBSXscriptNodespawnBSXScriptCodeObject","qn":"objParent","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Parent Object for the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Parent Object for the Object","inlinecomment":" \t &apos; Parent Object for the Object"}]},{"label":"authorNodeFQNs","comment":"FQNs of all descendent nodes that represent VSID Author Blocks\n\t\t\n@return StringQueue containing the FQNs of all descendent VSID Author Nodes. ","valuetype":"StringQueue","filenamebase":"authorNodeFQNs_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.authorNodeFQNs","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get authorNodeFQNs As StringQueue","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;FQNs of all descendent nodes that represent VSID Author Blocks&lt;br /&gt;\t\t&lt;br /&gt;@return StringQueue containing the FQNs of all descendent VSID Author Nodes. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"FQNs of all descendent nodes that represent VSID Author Blocks&lt;br /&gt;\t\t&lt;br /&gt;@return StringQueue containing the FQNs of all descendent VSID Author Nodes. ","inlinecomment":" \t &apos; FQNs of all descendent nodes that represent VSID Author Blocks\n\t\t\n@return StringQueue containing the FQNs of all descendent VSID Author Nodes. ","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Arguments","comment":"Array containing the Object Arguments","valuetype":"Variant","filenamebase":"Arguments_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.Arguments","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Arguments As Variant","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Array containing the Object Arguments&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Array containing the Object Arguments","inlinecomment":" \t &apos; Array containing the Object Arguments","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"childCount","comment":"Number of Child Nodes for this object","valuetype":"Integer","filenamebase":"childCount_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.childCount","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get childCount As Integer","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Number of Child Nodes for this object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Number of Child Nodes for this object","inlinecomment":" \t &apos; Number of Child Nodes for this object","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Classes","comment":" All child BSXscriptNodes that have an instancecode of SIGNATURE_VALUE_CLASS\n\t\t\n@return Array of all child BSXscriptNodes that have an instancecode of SIGNATURE_VALUE_CLASS.  If no such nodes exist, returns a single-element array containing Nothing","valuetype":"Variant","filenamebase":"Classes_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.Classes","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Classes As Variant","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt; All child BSXscriptNodes that have an instancecode of SIGNATURE_VALUE_CLASS&lt;br /&gt;\t\t&lt;br /&gt;@return Array of all child BSXscriptNodes that have an instancecode of SIGNATURE_VALUE_CLASS.  If no such nodes exist, returns a single-element array containing Nothing&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":" All child BSXscriptNodes that have an instancecode of SIGNATURE_VALUE_CLASS&lt;br /&gt;\t\t&lt;br /&gt;@return Array of all child BSXscriptNodes that have an instancecode of SIGNATURE_VALUE_CLASS.  If no such nodes exist, returns a single-element array containing Nothing","inlinecomment":" \t &apos;  All child BSXscriptNodes that have an instancecode of SIGNATURE_VALUE_CLASS\n\t\t\n@return Array of all child BSXscriptNodes that have an instancecode of SIGNATURE_VALUE_CLASS.  If no such nodes exist, returns a single-element array containing Nothing","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"CodeSample","comment":"CodeSample for the object","valuetype":"String","filenamebase":"CodeSample_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.CodeSample","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get CodeSample As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;CodeSample for the object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"CodeSample for the object","inlinecomment":" \t &apos; CodeSample for the object","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Comment","comment":"Comment for the object","valuetype":"String","filenamebase":"Comment_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.Comment","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Comment As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Comment for the object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Comment for the object","inlinecomment":" \t &apos; Comment for the object","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"FirstRemContent","comment":"Everything between the first child node that begins with &amp;quot;%REM&amp;quot; and the first child node that begins with &amp;quot;%END REM&amp;quot;\n\t\t\n@return First Rem Content, concatenated with a CRLF ","valuetype":"String","filenamebase":"FirstRemContent_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.FirstRemContent","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get FirstRemContent As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Everything between the first child node that begins with &amp;quot;%REM&amp;quot; and the first child node that begins with &amp;quot;%END REM&amp;quot;&lt;br /&gt;\t\t&lt;br /&gt;@return First Rem Content, concatenated with a CRLF &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Everything between the first child node that begins with &amp;quot;%REM&amp;quot; and the first child node that begins with &amp;quot;%END REM&amp;quot;&lt;br /&gt;\t\t&lt;br /&gt;@return First Rem Content, concatenated with a CRLF ","inlinecomment":" \t &apos; Everything between the first child node that begins with &amp;quot;%REM&amp;quot; and the first child node that begins with &amp;quot;%END REM&amp;quot;\n\t\t\n@return First Rem Content, concatenated with a CRLF ","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"FQN","comment":"Fully Qualified Name of the Object \n\t\t\n@return Fully Qualified Name of the Object","valuetype":"String","filenamebase":"FQN_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.FQN","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get FQN As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Fully Qualified Name of the Object &lt;br /&gt;\t\t&lt;br /&gt;@return Fully Qualified Name of the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Fully Qualified Name of the Object &lt;br /&gt;\t\t&lt;br /&gt;@return Fully Qualified Name of the Object","inlinecomment":" \t &apos; Fully Qualified Name of the Object \n\t\t\n@return Fully Qualified Name of the Object","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"hasArguments","comment":"Flag indicating if the Object has Arguments","valuetype":"Boolean","filenamebase":"hasArguments_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.hasArguments","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get hasArguments As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Object has Arguments&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Object has Arguments","inlinecomment":" \t &apos; Flag indicating if the Object has Arguments","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"hasChildNodes","comment":"Flag indicating the object has child nodes","valuetype":"Boolean","filenamebase":"hasChildNodes_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.hasChildNodes","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get hasChildNodes As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating the object has child nodes&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating the object has child nodes","inlinecomment":" \t &apos; Flag indicating the object has child nodes","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isClass","comment":"Flag indicating if the Object is a Class","valuetype":"Boolean","filenamebase":"isClass_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.isClass","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isClass As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Object is a Class&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Object is a Class","inlinecomment":" \t &apos; Flag indicating if the Object is a Class","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isEvent","comment":"Flag indicating if the Object represents an Event","valuetype":"Boolean","filenamebase":"isEvent_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.isEvent","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isEvent As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Object represents an Event&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Object represents an Event","inlinecomment":" \t &apos; Flag indicating if the Object represents an Event","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isFunction","comment":"Flag indicating if the Object represents a Function","valuetype":"Boolean","filenamebase":"isFunction_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.isFunction","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isFunction As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Object represents a Function&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Object represents a Function","inlinecomment":" \t &apos; Flag indicating if the Object represents a Function","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isGetter","comment":"Flag indicating if the Object represents a Getter ","valuetype":"Boolean","filenamebase":"isGetter_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.isGetter","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isGetter As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Object represents a Getter &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Object represents a Getter ","inlinecomment":" \t &apos; Flag indicating if the Object represents a Getter ","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isInstanceComplete","comment":"Flag indicating the current Instance element being parsed is complete (has reached and read the &amp;quot;End XXX&amp;quot; line)","valuetype":"Boolean","filenamebase":"isInstanceComplete_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.isInstanceComplete","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isInstanceComplete As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating the current Instance element being parsed is complete (has reached and read the &amp;quot;End XXX&amp;quot; line)&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating the current Instance element being parsed is complete (has reached and read the &amp;quot;End XXX&amp;quot; line)","inlinecomment":" \t &apos; Flag indicating the current Instance element being parsed is complete (has reached and read the &amp;quot;End XXX&amp;quot; line)","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isLastChildComplete","comment":"Flag indicating the last child object of the current Instance element is considered complete (has reached and read the &amp;quot;End XXX&amp;quot; line)\n\t\t\n@return if last child exists, the value of lastchild.isInstanceComplete.","valuetype":"Boolean","filenamebase":"isLastChildComplete_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.isLastChildComplete","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isLastChildComplete As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating the last child object of the current Instance element is considered complete (has reached and read the &amp;quot;End XXX&amp;quot; line)&lt;br /&gt;\t\t&lt;br /&gt;@return if last child exists, the value of lastchild.isInstanceComplete.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating the last child object of the current Instance element is considered complete (has reached and read the &amp;quot;End XXX&amp;quot; line)&lt;br /&gt;\t\t&lt;br /&gt;@return if last child exists, the value of lastchild.isInstanceComplete.","inlinecomment":" \t &apos; Flag indicating the last child object of the current Instance element is considered complete (has reached and read the &amp;quot;End XXX&amp;quot; line)\n\t\t\n@return if last child exists, the value of lastchild.isInstanceComplete.","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isLastChildRemarkComplete","comment":"Flag indicating the last child object of the current Instance element is a Remark (%REM...%END REM) and is complete\n\t\t\n@return if the last child exists, the value of (lastchild.isRemark AND lastchild.isInstanceComplete).","valuetype":"Boolean","filenamebase":"isLastChildRemarkComplete_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.isLastChildRemarkComplete","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isLastChildRemarkComplete As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating the last child object of the current Instance element is a Remark (%REM...%END REM) and is complete&lt;br /&gt;\t\t&lt;br /&gt;@return if the last child exists, the value of (lastchild.isRemark AND lastchild.isInstanceComplete).&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating the last child object of the current Instance element is a Remark (%REM...%END REM) and is complete&lt;br /&gt;\t\t&lt;br /&gt;@return if the last child exists, the value of (lastchild.isRemark AND lastchild.isInstanceComplete).","inlinecomment":" \t &apos; Flag indicating the last child object of the current Instance element is a Remark (%REM...%END REM) and is complete\n\t\t\n@return if the last child exists, the value of (lastchild.isRemark AND lastchild.isInstanceComplete).","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isLibrary","comment":"Flag indicating if the Object represents a Library","valuetype":"Boolean","filenamebase":"isLibrary_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.isLibrary","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isLibrary As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Object represents a Library&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Object represents a Library","inlinecomment":" \t &apos; Flag indicating if the Object represents a Library","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isProperty","comment":"Flag indicating if the Object represents a Property","valuetype":"Boolean","filenamebase":"isProperty_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.isProperty","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isProperty As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Object represents a Property&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Object represents a Property","inlinecomment":" \t &apos; Flag indicating if the Object represents a Property","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isRemark","comment":"Flag indicating if the Object represents a Remark","valuetype":"Boolean","filenamebase":"isRemark_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.isRemark","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isRemark As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Object represents a Remark&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Object represents a Remark","inlinecomment":" \t &apos; Flag indicating if the Object represents a Remark","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isSetter","comment":"Flag indicating if the Object represents a Setter","valuetype":"Boolean","filenamebase":"isSetter_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.isSetter","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isSetter As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Object represents a Setter&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Object represents a Setter","inlinecomment":" \t &apos; Flag indicating if the Object represents a Setter","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isSub","comment":"Flag indicating if the Object represents a Sub","valuetype":"Boolean","filenamebase":"isSub_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.isSub","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isSub As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Object represents a Sub&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Object represents a Sub","inlinecomment":" \t &apos; Flag indicating if the Object represents a Sub","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isType","comment":"Flag indicating if the Object represents a Type","valuetype":"Boolean","filenamebase":"isType_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.isType","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isType As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Object represents a Type&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Object represents a Type","inlinecomment":" \t &apos; Flag indicating if the Object represents a Type","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isVariable","comment":"Flag indicating if the Object represents a Variable","valuetype":"Boolean","filenamebase":"isVariable_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.isVariable","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isVariable As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the Object represents a Variable&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the Object represents a Variable","inlinecomment":" \t &apos; Flag indicating if the Object represents a Variable","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isVSID_AUTHOR_BLOCK","comment":"Flag indicating if this object instance a VSID Author Block","valuetype":"Boolean","filenamebase":"isVSIDAUTHORBLOCK_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.isVSIDAUTHORBLOCK","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isVSID_AUTHOR_BLOCK As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if this object instance a VSID Author Block&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if this object instance a VSID Author Block","inlinecomment":" \t &apos; Flag indicating if this object instance a VSID Author Block","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"InstanceCode","comment":"Numeric code indicating the Instance Type (such as Sub, Function, or Property)","valuetype":"Long","filenamebase":"InstanceCode_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.InstanceCode","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get InstanceCode As Long","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Numeric code indicating the Instance Type (such as Sub, Function, or Property)&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Numeric code indicating the Instance Type (such as Sub, Function, or Property)","inlinecomment":" \t &apos; Numeric code indicating the Instance Type (such as Sub, Function, or Property)","parentclassname":"BSXscriptNode","codesamplehtml":"", "signatureelements":["Public","Property","Get"]},{"label":"InstanceNumber","comment":"Instance number of the node (relative to sibling nodes)","valuetype":"Long","filenamebase":"InstanceNumber_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.InstanceNumber","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get InstanceNumber As Long","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Instance number of the node (relative to sibling nodes)&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Instance number of the node (relative to sibling nodes)","inlinecomment":" \t &apos; Instance number of the node (relative to sibling nodes)","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"InstanceType","comment":"String representing the Instance Type (such as Sub, Function, or Property)","valuetype":"String","filenamebase":"InstanceType_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.InstanceType","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get InstanceType As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;String representing the Instance Type (such as Sub, Function, or Property)&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"String representing the Instance Type (such as Sub, Function, or Property)","inlinecomment":" \t &apos; String representing the Instance Type (such as Sub, Function, or Property)","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"LastChild","comment":"The last child BSXscriptNode contained by the object.","valuetype":"BSXscriptNode","filenamebase":"LastChild_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.LastChild","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get LastChild As BSXscriptNode","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The last child BSXscriptNode contained by the object.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The last child BSXscriptNode contained by the object.","inlinecomment":" \t &apos; The last child BSXscriptNode contained by the object.","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"LastRemContent","comment":"Everything between the last child node that begins with &amp;quot;%REM&amp;quot; and the last child node that begins with &amp;quot;%END REM&amp;quot;\n\t\t\n@return Last Rem Content, concatenated with a CRLF ","valuetype":"String","filenamebase":"LastRemContent_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.LastRemContent","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get LastRemContent As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Everything between the last child node that begins with &amp;quot;%REM&amp;quot; and the last child node that begins with &amp;quot;%END REM&amp;quot;&lt;br /&gt;\t\t&lt;br /&gt;@return Last Rem Content, concatenated with a CRLF &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Everything between the last child node that begins with &amp;quot;%REM&amp;quot; and the last child node that begins with &amp;quot;%END REM&amp;quot;&lt;br /&gt;\t\t&lt;br /&gt;@return Last Rem Content, concatenated with a CRLF ","inlinecomment":" \t &apos; Everything between the last child node that begins with &amp;quot;%REM&amp;quot; and the last child node that begins with &amp;quot;%END REM&amp;quot;\n\t\t\n@return Last Rem Content, concatenated with a CRLF ","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"LineCount","comment":"Total Lines of Code for the object (and all children)\n\t\t\n@return Number of lines of code for the object, including all childre","valuetype":"Long","filenamebase":"LineCount_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.LineCount","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get LineCount As Long","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Total Lines of Code for the object (and all children)&lt;br /&gt;\t\t&lt;br /&gt;@return Number of lines of code for the object, including all childre&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Total Lines of Code for the object (and all children)&lt;br /&gt;\t\t&lt;br /&gt;@return Number of lines of code for the object, including all childre","inlinecomment":" \t &apos; Total Lines of Code for the object (and all children)\n\t\t\n@return Number of lines of code for the object, including all childre","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"MethodType","comment":"String representation of the Method Type (Sub, Function, or Property) ","valuetype":"String","filenamebase":"MethodType_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.MethodType","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get MethodType As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;String representation of the Method Type (Sub, Function, or Property) &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"String representation of the Method Type (Sub, Function, or Property) ","inlinecomment":" \t &apos; String representation of the Method Type (Sub, Function, or Property) ","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"nodeTags","comment":"Tags for all nodes (and child nodes) contained within this object. \n\t\t\n@return StringQueue containing tags for all nodes.  If no nodes exist, StringQueue will be empty","valuetype":"StringQueue","filenamebase":"nodeTags_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.nodeTags","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get nodeTags As StringQueue","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Tags for all nodes (and child nodes) contained within this object. &lt;br /&gt;\t\t&lt;br /&gt;@return StringQueue containing tags for all nodes.  If no nodes exist, StringQueue will be empty&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Tags for all nodes (and child nodes) contained within this object. &lt;br /&gt;\t\t&lt;br /&gt;@return StringQueue containing tags for all nodes.  If no nodes exist, StringQueue will be empty","inlinecomment":" \t &apos; Tags for all nodes (and child nodes) contained within this object. \n\t\t\n@return StringQueue containing tags for all nodes.  If no nodes exist, StringQueue will be empty","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"ParentFQN","comment":"Fully Qualified Name of the Object&amp;apos;s Parent\n\t\t\n@return Fully Qualified Name of the Object&amp;apos;s Parent","valuetype":"String","filenamebase":"ParentFQN_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.ParentFQN","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get ParentFQN As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Fully Qualified Name of the Object&amp;apos;s Parent&lt;br /&gt;\t\t&lt;br /&gt;@return Fully Qualified Name of the Object&amp;apos;s Parent&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Fully Qualified Name of the Object&amp;apos;s Parent&lt;br /&gt;\t\t&lt;br /&gt;@return Fully Qualified Name of the Object&amp;apos;s Parent","inlinecomment":" \t &apos; Fully Qualified Name of the Object&amp;apos;s Parent\n\t\t\n@return Fully Qualified Name of the Object&amp;apos;s Parent","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"QN","comment":"Qualified Name of the Object \n\t\t\nQN is the FQNprefix (a constructor argument) concatenated (using a period character) with the object&amp;apos;s Label.\nNOTE: All whitespace in the QN Prefix and Label will be removed.   ","valuetype":"String","filenamebase":"QN_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.QN","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get QN As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Qualified Name of the Object &lt;br /&gt;\t\t&lt;br /&gt;QN is the FQNprefix (a constructor argument) concatenated (using a period character) with the object&amp;apos;s Label.&lt;br /&gt;NOTE: All whitespace in the QN Prefix and Label will be removed.   &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Qualified Name of the Object &lt;br /&gt;\t\t&lt;br /&gt;QN is the FQNprefix (a constructor argument) concatenated (using a period character) with the object&amp;apos;s Label.&lt;br /&gt;NOTE: All whitespace in the QN Prefix and Label will be removed.   ","inlinecomment":" \t &apos; Qualified Name of the Object \n\t\t\nQN is the FQNprefix (a constructor argument) concatenated (using a period character) with the object&amp;apos;s Label.\nNOTE: All whitespace in the QN Prefix and Label will be removed.   ","parentclassname":"BSXscriptNode","codesamplehtml":"", "signatureelements":["Public","Property","Get"]},{"label":"Script","comment":"Generated Script Source Code for the object","valuetype":"String","filenamebase":"Script_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.Script","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Script As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Generated Script Source Code for the object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Generated Script Source Code for the object","inlinecomment":" \t &apos; Generated Script Source Code for the object","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"SignatureCode","comment":"Numeric code indicating the Instance Type (such as Sub, Function, or Property)","valuetype":"Long","filenamebase":"SignatureCode_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.SignatureCode","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get SignatureCode As Long","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Numeric code indicating the Instance Type (such as Sub, Function, or Property)&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Numeric code indicating the Instance Type (such as Sub, Function, or Property)","inlinecomment":" \t &apos; Numeric code indicating the Instance Type (such as Sub, Function, or Property)","parentclassname":"BSXscriptNode","codesamplehtml":"", "signatureelements":["Public","Property","Get"]},{"label":"ValueType","comment":"Extrapolated type (such as String, Integer, etc) - pulled from the first line of the object&amp;apos;s Script property","valuetype":"String","filenamebase":"ValueType_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Get.ValueType","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get ValueType As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Extrapolated type (such as String, Integer, etc) - pulled from the first line of the object&amp;apos;s Script property&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Extrapolated type (such as String, Integer, etc) - pulled from the first line of the object&amp;apos;s Script property","inlinecomment":" \t &apos; Extrapolated type (such as String, Integer, etc) - pulled from the first line of the object&amp;apos;s Script property","parentclassname":"BSXscriptNode","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"InstanceCode","comment":"Numeric code indicating the Instance Type (such as Sub, Function, or Property)","valuetype":"Long","filenamebase":"InstanceCode_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Set.InstanceCode","codesample":"","signaturecode":2308,"instancecode":256,"argumentsuffix":"","signature":"Public Property Set InstanceCode As Long","modifiers":"Public Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Numeric code indicating the Instance Type (such as Sub, Function, or Property)&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Numeric code indicating the Instance Type (such as Sub, Function, or Property)","inlinecomment":" \t &apos; Numeric code indicating the Instance Type (such as Sub, Function, or Property)","parentclassname":"BSXscriptNode","codesamplehtml":"", "signatureelements":["Public","Property","Set"]},{"label":"QN","comment":"Qualified Name of the Object \n\t\t\nQN is the FQNprefix (a constructor argument) concatenated (using a period character) with the object&amp;apos;s Label.\nNOTE: All whitespace in the QN Prefix and Label will be removed.   ","valuetype":"String","filenamebase":"QN_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Set.QN","codesample":"","signaturecode":2308,"instancecode":256,"argumentsuffix":"","signature":"Public Property Set QN As String","modifiers":"Public Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Qualified Name of the Object &lt;br /&gt;\t\t&lt;br /&gt;QN is the FQNprefix (a constructor argument) concatenated (using a period character) with the object&amp;apos;s Label.&lt;br /&gt;NOTE: All whitespace in the QN Prefix and Label will be removed.   &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Qualified Name of the Object &lt;br /&gt;\t\t&lt;br /&gt;QN is the FQNprefix (a constructor argument) concatenated (using a period character) with the object&amp;apos;s Label.&lt;br /&gt;NOTE: All whitespace in the QN Prefix and Label will be removed.   ","inlinecomment":" \t &apos; Qualified Name of the Object \n\t\t\nQN is the FQNprefix (a constructor argument) concatenated (using a period character) with the object&amp;apos;s Label.\nNOTE: All whitespace in the QN Prefix and Label will be removed.   ","parentclassname":"BSXscriptNode","codesamplehtml":"", "signatureelements":["Public","Property","Set"]},{"label":"SignatureCode","comment":"Numeric code indicating the Instance Type (such as Sub, Function, or Property)","valuetype":"Long","filenamebase":"SignatureCode_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"Set.SignatureCode","codesample":"","signaturecode":2308,"instancecode":256,"argumentsuffix":"","signature":"Public Property Set SignatureCode As Long","modifiers":"Public Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Numeric code indicating the Instance Type (such as Sub, Function, or Property)&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Numeric code indicating the Instance Type (such as Sub, Function, or Property)","inlinecomment":" \t &apos; Numeric code indicating the Instance Type (such as Sub, Function, or Property)","parentclassname":"BSXscriptNode","codesamplehtml":"", "signatureelements":["Public","Property","Set"]},{"label":"appendArgument","comment":"Appends an Argument to the Object ","valuetype":"","filenamebase":"appendArgument_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"appendArgument","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(source As ValuedElement)","signature":"Public Sub appendArgument(source As ValuedElement)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Appends an Argument to the Object &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Appends an Argument to the Object ","inlinecomment":" \t &apos; Appends an Argument to the Object ","parentclassname":"BSXscriptNode","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"source","comment":"Argument to be appended","valuetype":"ValuedElement","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsBSXscriptNodeappendArgument","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Argument to be appended&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Argument to be appended","inlinecomment":" \t &apos; Argument to be appended"}]},{"label":"clearInstanceCode","comment":"Sets the object&amp;apos;s InstanceCode to zero ","valuetype":"","filenamebase":"clearInstanceCode_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"clearInstanceCode","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub clearInstanceCode()","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Sets the object&amp;apos;s InstanceCode to zero &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Sets the object&amp;apos;s InstanceCode to zero ","inlinecomment":" \t &apos; Sets the object&amp;apos;s InstanceCode to zero ","parentclassname":"BSXscriptNode","codesamplehtml":"", "signatureelements":["Public","Sub"]},{"label":"markIncomplete","comment":"Sets the object&amp;apos;s isInstanceComplete flag to False ","valuetype":"","filenamebase":"markIncomplete_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"markIncomplete","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub markIncomplete()","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Sets the object&amp;apos;s isInstanceComplete flag to False &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Sets the object&amp;apos;s isInstanceComplete flag to False ","inlinecomment":" \t &apos; Sets the object&amp;apos;s isInstanceComplete flag to False ","parentclassname":"BSXscriptNode","codesamplehtml":"", "signatureelements":["Public","Sub"]},{"label":"New","comment":"Constructor","valuetype":"","filenamebase":"New_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptNode","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"parentconstructor":"ValuedElement(FQNprefix, ||, ||, Comment)","argumentsuffix":"(parent As BSXscriptNode, FQNprefix As String, Comment As String)","signature":"Public Sub New(parent As BSXscriptNode, FQNprefix As String, Comment As String)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructor&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructor","inlinecomment":" \t &apos; Constructor","parentclassname":"BSXscriptNode","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"parent","comment":"BSXscriptNode for the Object","valuetype":"BSXscriptNode","filenamebase":"parent_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsBSXscriptNodeNew","qn":"parent","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;BSXscriptNode for the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"BSXscriptNode for the Object","inlinecomment":" \t &apos; BSXscriptNode for the Object"},{"label":"FQNprefix","comment":"Fully Qualified Name Prefix for the Object","valuetype":"String","filenamebase":"FQNprefix_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsBSXscriptNodeNew","qn":"FQNprefix","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Fully Qualified Name Prefix for the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Fully Qualified Name Prefix for the Object","inlinecomment":" \t &apos; Fully Qualified Name Prefix for the Object"},{"label":"Comment","comment":"Comment about the Object","valuetype":"String","filenamebase":"Comment_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsBSXscriptNodeNew","qn":"Comment","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Comment about the Object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Comment about the Object","inlinecomment":" \t &apos; Comment about the Object"}]}], "variables":[]},{"classname":"BSXscriptParser","comment":"Utilitiy class for parsing BSX script source content","valuetype":"","filenamebase":"BSXscriptParser_ObjectClass","fqnprefix":"VSID.BSXparsingUtils","qn":"BSXscriptParser","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","projectid":"F4643802ED642DBA85258AE5006336F9","classid":"DFE619FAF936FEF385258AE500681CF0","signature":"Public Class BSXscriptParser","modifiers":"Public","classname":"BSXscriptParser","parentclassname":"None","constructorsignature":"Public Sub New(projectname As String, FQN As String, instance_code As Long)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Utilitiy class for parsing BSX script source content&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Utilitiy class for parsing BSX script source content","inlinecomment":" \t &apos; Utilitiy class for parsing BSX script source content","codesamplehtml":"", "methods":[{"label":"isInstanceComplete","comment":"Flag indicating the current Instance element being parsed is complete (has reached and read the &amp;quot;End XXX&amp;quot; line)","valuetype":"Boolean","filenamebase":"isInstanceComplete_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptParser","qn":"Get.isInstanceComplete","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isInstanceComplete As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating the current Instance element being parsed is complete (has reached and read the &amp;quot;End XXX&amp;quot; line)&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating the current Instance element being parsed is complete (has reached and read the &amp;quot;End XXX&amp;quot; line)","inlinecomment":" \t &apos; Flag indicating the current Instance element being parsed is complete (has reached and read the &amp;quot;End XXX&amp;quot; line)","parentclassname":"BSXscriptParser","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Script","comment":"Generated Script Source Code for the object","valuetype":"StringQueue","filenamebase":"Script_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptParser","qn":"Get.Script","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Script As StringQueue","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Generated Script Source Code for the object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Generated Script Source Code for the object","inlinecomment":" \t &apos; Generated Script Source Code for the object","parentclassname":"BSXscriptParser","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"ScriptNode","comment":"BSXscriptNode for the object","valuetype":"BSXscriptNode","filenamebase":"ScriptNode_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptParser","qn":"Get.ScriptNode","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get ScriptNode As BSXscriptNode","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;BSXscriptNode for the object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"BSXscriptNode for the object","inlinecomment":" \t &apos; BSXscriptNode for the object","parentclassname":"BSXscriptParser","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"clear","comment":"Clears the object.","valuetype":"","filenamebase":"clear_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptParser","qn":"clear","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub clear()","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Clears the object.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Clears the object.","inlinecomment":" \t &apos; Clears the object.","parentclassname":"BSXscriptParser","codesamplehtml":"", "signatureelements":["Public","Sub"]},{"label":"New","comment":"Constructor","valuetype":"","filenamebase":"New_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptParser","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(projectname As String, FQN As String, instance_code As Long)","signature":"Public Sub New(projectname As String, FQN As String, instance_code As Long)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructor&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructor","inlinecomment":" \t &apos; Constructor","parentclassname":"BSXscriptParser","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"projectname","comment":"Project Name of the Object. ","valuetype":"String","filenamebase":"projectname_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsBSXscriptParserNew","qn":"projectname","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Project Name of the Object. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Project Name of the Object. ","inlinecomment":" \t &apos; Project Name of the Object. "},{"label":"FQN","comment":"Fully Qualified Name for the object","valuetype":"String","filenamebase":"FQN_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsBSXscriptParserNew","qn":"FQN","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Fully Qualified Name for the object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Fully Qualified Name for the object","inlinecomment":" \t &apos; Fully Qualified Name for the object"},{"label":"instance_code","comment":"Integer code indicating the type of code block this object (Library, Function, Class, etc) represents.","valuetype":"Long","filenamebase":"instancecode_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsBSXscriptParserNew","qn":"instancecode","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Integer code indicating the type of code block this object (Library, Function, Class, etc) represents.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Integer code indicating the type of code block this object (Library, Function, Class, etc) represents.","inlinecomment":" \t &apos; Integer code indicating the type of code block this object (Library, Function, Class, etc) represents."}]},{"label":"parseLine","comment":"Parses a line of text (script sourcecode) into the object","valuetype":"","filenamebase":"parseLine_Method","fqnprefix":"VSID.BSXparsingUtils.BSXscriptParser","qn":"parseLine","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(source As String)","signature":"Public Sub parseLine(source As String)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Parses a line of text (script sourcecode) into the object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Parses a line of text (script sourcecode) into the object","inlinecomment":" \t &apos; Parses a line of text (script sourcecode) into the object","parentclassname":"BSXscriptParser","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"source","comment":"Line of Script source code to parse","valuetype":"String","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsBSXscriptParserparseLine","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Line of Script source code to parse&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Line of Script source code to parse","inlinecomment":" \t &apos; Line of Script source code to parse"}]}]},{"classname":"ScriptLine","comment":"Represents a Line of Script Code","valuetype":"","filenamebase":"ScriptLine_ObjectClass","fqnprefix":"VSID.BSXparsingUtils","qn":"ScriptLine","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","projectid":"F4643802ED642DBA85258AE5006336F9","classid":"752A69C102880A0585258AE500724BEF","signature":"Public Class ScriptLine","modifiers":"Public","classname":"ScriptLine","parentclassname":"None","constructorsignature":"Public Sub New(source As String)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Represents a Line of Script Code&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Represents a Line of Script Code","inlinecomment":" \t &apos; Represents a Line of Script Code","codesamplehtml":"", "methods":[{"label":"Code","comment":"Code portion of the line","valuetype":"String","filenamebase":"Code_Method","fqnprefix":"VSID.BSXparsingUtils.ScriptLine","qn":"Get.Code","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Code As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Code portion of the line&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Code portion of the line","inlinecomment":" \t &apos; Code portion of the line","parentclassname":"ScriptLine","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Comment","comment":"in-line comment portion of the line","valuetype":"String","filenamebase":"Comment_Method","fqnprefix":"VSID.BSXparsingUtils.ScriptLine","qn":"Get.Comment","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get Comment As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;in-line comment portion of the line&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"in-line comment portion of the line","inlinecomment":" \t &apos; in-line comment portion of the line","parentclassname":"ScriptLine","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"hasCode","comment":"Flag indicating if this object has code","valuetype":"Boolean","filenamebase":"hasCode_Method","fqnprefix":"VSID.BSXparsingUtils.ScriptLine","qn":"Get.hasCode","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get hasCode As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if this object has code&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if this object has code","inlinecomment":" \t &apos; Flag indicating if this object has code","parentclassname":"ScriptLine","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"hasComment","comment":"Flag indicating if this object has a comment","valuetype":"Boolean","filenamebase":"hasComment_Method","fqnprefix":"VSID.BSXparsingUtils.ScriptLine","qn":"Get.hasComment","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get hasComment As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if this object has a comment&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if this object has a comment","inlinecomment":" \t &apos; Flag indicating if this object has a comment","parentclassname":"ScriptLine","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"isBlank","comment":"Flag indicating if this object has neither code nor comment","valuetype":"Boolean","filenamebase":"isBlank_Method","fqnprefix":"VSID.BSXparsingUtils.ScriptLine","qn":"Get.isBlank","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get isBlank As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if this object has neither code nor comment&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if this object has neither code nor comment","inlinecomment":" \t &apos; Flag indicating if this object has neither code nor comment","parentclassname":"ScriptLine","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"JSON","comment":"JSON representation of the object","valuetype":"String","filenamebase":"JSON_Method","fqnprefix":"VSID.BSXparsingUtils.ScriptLine","qn":"Get.JSON","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get JSON As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;JSON representation of the object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"JSON representation of the object","inlinecomment":" \t &apos; JSON representation of the object","parentclassname":"ScriptLine","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"SourceLine","comment":"Source line of code used to instantiate this object.","valuetype":"String","filenamebase":"SourceLine_Method","fqnprefix":"VSID.BSXparsingUtils.ScriptLine","qn":"Get.SourceLine","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get SourceLine As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Source line of code used to instantiate this object.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Source line of code used to instantiate this object.","inlinecomment":" \t &apos; Source line of code used to instantiate this object.","parentclassname":"ScriptLine","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"appendScriptLine","comment":"Appends information from another ScriptLine object. ","valuetype":"","filenamebase":"appendScriptLine_Method","fqnprefix":"VSID.BSXparsingUtils.ScriptLine","qn":"appendScriptLine","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(source As ScriptLine)","signature":"Public Sub appendScriptLine(source As ScriptLine)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Appends information from another ScriptLine object. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Appends information from another ScriptLine object. ","inlinecomment":" \t &apos; Appends information from another ScriptLine object. ","parentclassname":"ScriptLine","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"source","comment":"ScriptLine from which to append content ","valuetype":"ScriptLine","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsScriptLineappendScriptLine","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;ScriptLine from which to append content &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"ScriptLine from which to append content ","inlinecomment":" \t &apos; ScriptLine from which to append content "}]},{"label":"New","comment":"Constructs a new ScriptLine instance ","valuetype":"","filenamebase":"New_Method","fqnprefix":"VSID.BSXparsingUtils.ScriptLine","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(source As String)","signature":"Public Sub New(source As String)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructs a new ScriptLine instance &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructs a new ScriptLine instance ","inlinecomment":" \t &apos; Constructs a new ScriptLine instance ","parentclassname":"ScriptLine","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"source","comment":"Line of sourcecode used to construct the object. ","valuetype":"String","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsScriptLineNew","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Line of sourcecode used to construct the object. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Line of sourcecode used to construct the object. ","inlinecomment":" \t &apos; Line of sourcecode used to construct the object. "}]}]},{"classname":"ScriptLineQueue","comment":"Queue implementation for ScriptLines","valuetype":"ScriptLinesCarrier","filenamebase":"ScriptLineQueue_ObjectClass","fqnprefix":"VSID.BSXparsingUtils","qn":"ScriptLineQueue","codesample":"","signaturecode":3072,"instancecode":1024,"parentclassname":"ScriptLinesCarrier","classtype":"Derived","classderivetype":"ScriptLinesCarrier","projectid":"F4643802ED642DBA85258AE5006336F9","classid":"C76EB1E546105CEC85258AE50075E241","signature":"Public Class ScriptLineQueue As ScriptLinesCarrier","modifiers":"Public","classname":"ScriptLineQueue","constructorsignature":"Public Sub New()","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Queue implementation for ScriptLines&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Queue implementation for ScriptLines","inlinecomment":" \t &apos; Queue implementation for ScriptLines","codesamplehtml":"", "methods":[{"label":"pop","comment":"Gets the first (first added) object from the queue, then removes it from the queue.\n\t\t\n@overrides ScriptLinesCarrier.pop()","valuetype":"ScriptLine","filenamebase":"pop_Method","fqnprefix":"VSID.BSXparsingUtils.ScriptLineQueue","qn":"pop","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Public Function pop() As ScriptLine","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets the first (first added) object from the queue, then removes it from the queue.&lt;br /&gt;\t\t&lt;br /&gt;@overrides ScriptLinesCarrier.pop()&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets the first (first added) object from the queue, then removes it from the queue.&lt;br /&gt;\t\t&lt;br /&gt;@overrides ScriptLinesCarrier.pop()","inlinecomment":" \t &apos; Gets the first (first added) object from the queue, then removes it from the queue.\n\t\t\n@overrides ScriptLinesCarrier.pop()","parentclassname":"ScriptLineQueue","codesamplehtml":"", "signatureelements":["Public","Function"]},{"label":"New","comment":"","valuetype":"ScriptLineQueue","filenamebase":"New_Method","fqnprefix":"VSID.BSXparsingUtils.ScriptLineQueue","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub New()","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"ScriptLineQueue","codesamplehtml":"", "signatureelements":["Public","Sub"]}]},{"classname":"ScriptLinesCarrier","comment":"Carrier class for ScriptLines ","valuetype":"","filenamebase":"ScriptLinesCarrier_ObjectClass","fqnprefix":"VSID.BSXparsingUtils","qn":"ScriptLinesCarrier","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","projectid":"F4643802ED642DBA85258AE5006336F9","classid":"488B9D3B45CEC62B85258AE500747FD1","signature":"Public Class ScriptLinesCarrier","modifiers":"Public","classname":"ScriptLinesCarrier","parentclassname":"None","constructorsignature":"Public Sub New()","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Carrier class for ScriptLines &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Carrier class for ScriptLines ","inlinecomment":" \t &apos; Carrier class for ScriptLines ","codesamplehtml":"", "methods":[{"label":"pop","comment":"Gets the top (last added) object from the stack, then removes it from the stack.","valuetype":"ScriptLine","filenamebase":"pop_Method","fqnprefix":"VSID.BSXparsingUtils.ScriptLinesCarrier","qn":"pop","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Public Function pop() As ScriptLine","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets the top (last added) object from the stack, then removes it from the stack.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets the top (last added) object from the stack, then removes it from the stack.","inlinecomment":" \t &apos; Gets the top (last added) object from the stack, then removes it from the stack.","parentclassname":"ScriptLinesCarrier","codesamplehtml":"", "signatureelements":["Public","Function"]},{"label":"first","comment":"Gets the first element in the carrier","valuetype":"ScriptLine","filenamebase":"first_Method","fqnprefix":"VSID.BSXparsingUtils.ScriptLinesCarrier","qn":"Get.first","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get first As ScriptLine","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets the first element in the carrier&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets the first element in the carrier","inlinecomment":" \t &apos; Gets the first element in the carrier","parentclassname":"ScriptLinesCarrier","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"hasContent","comment":"Flag indicating if the object has content","valuetype":"Boolean","filenamebase":"hasContent_Method","fqnprefix":"VSID.BSXparsingUtils.ScriptLinesCarrier","qn":"Get.hasContent","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get hasContent As Boolean","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the object has content&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the object has content","inlinecomment":" \t &apos; Flag indicating if the object has content","parentclassname":"ScriptLinesCarrier","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"JSON","comment":"JSON representation of the object","valuetype":"String","filenamebase":"JSON_Method","fqnprefix":"VSID.BSXparsingUtils.ScriptLinesCarrier","qn":"Get.JSON","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get JSON As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;JSON representation of the object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"JSON representation of the object","inlinecomment":" \t &apos; JSON representation of the object","parentclassname":"ScriptLinesCarrier","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"last","comment":"Gets the last element in the carrier","valuetype":"ScriptLine","filenamebase":"last_Method","fqnprefix":"VSID.BSXparsingUtils.ScriptLinesCarrier","qn":"Get.last","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get last As ScriptLine","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets the last element in the carrier&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets the last element in the carrier","inlinecomment":" \t &apos; Gets the last element in the carrier","parentclassname":"ScriptLinesCarrier","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"MergedScriptLine","comment":"All internal ScriptLine objects merged into a single ScriptLine","valuetype":"ScriptLine","filenamebase":"MergedScriptLine_Method","fqnprefix":"VSID.BSXparsingUtils.ScriptLinesCarrier","qn":"Get.MergedScriptLine","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get MergedScriptLine As ScriptLine","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;All internal ScriptLine objects merged into a single ScriptLine&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"All internal ScriptLine objects merged into a single ScriptLine","inlinecomment":" \t &apos; All internal ScriptLine objects merged into a single ScriptLine","parentclassname":"ScriptLinesCarrier","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"size","comment":"Number of elements in the object","valuetype":"Long","filenamebase":"size_Method","fqnprefix":"VSID.BSXparsingUtils.ScriptLinesCarrier","qn":"Get.size","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get size As Long","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Number of elements in the object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Number of elements in the object","inlinecomment":" \t &apos; Number of elements in the object","parentclassname":"ScriptLinesCarrier","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"SourceLine","comment":"Merged SourceLine property of all internal ScriptLine objects. ","valuetype":"String","filenamebase":"SourceLine_Method","fqnprefix":"VSID.BSXparsingUtils.ScriptLinesCarrier","qn":"Get.SourceLine","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get SourceLine As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Merged SourceLine property of all internal ScriptLine objects. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Merged SourceLine property of all internal ScriptLine objects. ","inlinecomment":" \t &apos; Merged SourceLine property of all internal ScriptLine objects. ","parentclassname":"ScriptLinesCarrier","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"values","comment":"Values carried by the object. \n\t\t\n@return Array of ScriptLines containing the values of the object.   \n\tIf the object has no values then an array with a single Nothing instance will be returned.","valuetype":"Variant","filenamebase":"values_Method","fqnprefix":"VSID.BSXparsingUtils.ScriptLinesCarrier","qn":"Get.values","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get values As Variant","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Values carried by the object. &lt;br /&gt;\t\t&lt;br /&gt;@return Array of ScriptLines containing the values of the object.   &lt;br /&gt;\tIf the object has no values then an array with a single Nothing instance will be returned.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Values carried by the object. &lt;br /&gt;\t\t&lt;br /&gt;@return Array of ScriptLines containing the values of the object.   &lt;br /&gt;\tIf the object has no values then an array with a single Nothing instance will be returned.","inlinecomment":" \t &apos; Values carried by the object. \n\t\t\n@return Array of ScriptLines containing the values of the object.   \n\tIf the object has no values then an array with a single Nothing instance will be returned.","parentclassname":"ScriptLinesCarrier","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"clear","comment":"Clears the carrier","valuetype":"","filenamebase":"clear_Method","fqnprefix":"VSID.BSXparsingUtils.ScriptLinesCarrier","qn":"clear","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub clear()","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Clears the carrier&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Clears the carrier","inlinecomment":" \t &apos; Clears the carrier","parentclassname":"ScriptLinesCarrier","codesamplehtml":"", "signatureelements":["Public","Sub"]},{"label":"load","comment":"Loads the object with content from source","valuetype":"","filenamebase":"load_Method","fqnprefix":"VSID.BSXparsingUtils.ScriptLinesCarrier","qn":"load","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(source As Variant)","signature":"Public Sub load(source As Variant)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Loads the object with content from source&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Loads the object with content from source","inlinecomment":" \t &apos; Loads the object with content from source","parentclassname":"ScriptLinesCarrier","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"source","comment":"ScriptLinesCarrier OR Array of ScriptLines","valuetype":"Variant","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsScriptLinesCarrierload","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;ScriptLinesCarrier OR Array of ScriptLines&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"ScriptLinesCarrier OR Array of ScriptLines","inlinecomment":" \t &apos; ScriptLinesCarrier OR Array of ScriptLines"}]},{"label":"New","comment":"Constructor","valuetype":"","filenamebase":"New_Method","fqnprefix":"VSID.BSXparsingUtils.ScriptLinesCarrier","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub New()","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructor&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructor","inlinecomment":" \t &apos; Constructor","parentclassname":"ScriptLinesCarrier","codesamplehtml":"", "signatureelements":["Public","Sub"]},{"label":"push","comment":"Adds a ScriptLine to the top of the carrier","valuetype":"","filenamebase":"push_Method","fqnprefix":"VSID.BSXparsingUtils.ScriptLinesCarrier","qn":"push","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(source As ScriptLine)","signature":"Public Sub push(source As ScriptLine)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Adds a ScriptLine to the top of the carrier&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Adds a ScriptLine to the top of the carrier","inlinecomment":" \t &apos; Adds a ScriptLine to the top of the carrier","parentclassname":"ScriptLinesCarrier","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"source","comment":"ScriptLine to be added to the carrier","valuetype":"ScriptLine","filenamebase":"source_ValuedElement","fqnprefix":"VSIDBSXparsingUtilsScriptLinesCarrierpush","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;ScriptLine to be added to the carrier&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"ScriptLine to be added to the carrier","inlinecomment":" \t &apos; ScriptLine to be added to the carrier"}]}]}]}
