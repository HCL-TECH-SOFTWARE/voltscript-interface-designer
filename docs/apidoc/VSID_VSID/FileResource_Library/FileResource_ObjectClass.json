{"classname":"FileResource","comment":"Represents a design element of the file-resource type or a relative, such as stylesheet or xpage. \n\t\t\nThe data are manipulated internally using DXL and DOM.\n\t\t\nThis class has no objection if you want to also manipulate the other items of the document, e.g. by using the DOMElement property to get the node representing the design element, then using the DOM to locate other items and attributes.\n\t\t\nHowever, please use this class and FileItem for manipulation of base-64 encoded file data items. ","valuetype":"","filenamebase":"FileResource_ObjectClass","fqnprefix":"VSID.FileResource","qn":"FileResource","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","projectid":"3EF59CC821EBE72F85258AE2007313C7","classid":"A1CF0755E52CBC4285258AE2007355C2","signature":"Public Class FileResource","modifiers":"Public","classname":"FileResource","parentclassname":"None","constructorsignature":"Public Sub New(db As NotesDatabase, elElement As NotesDOMDocumentNode, domp As NotesDOMParser)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Represents a design element of the file-resource type or a relative, such as stylesheet or xpage. &lt;br /&gt;\t\t&lt;br /&gt;The data are manipulated internally using DXL and DOM.&lt;br /&gt;\t\t&lt;br /&gt;This class has no objection if you want to also manipulate the other items of the document, e.g. by using the DOMElement property to get the node representing the design element, then using the DOM to locate other items and attributes.&lt;br /&gt;\t\t&lt;br /&gt;However, please use this class and FileItem for manipulation of base-64 encoded file data items. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Represents a design element of the file-resource type or a relative, such as stylesheet or xpage. &lt;br /&gt;\t\t&lt;br /&gt;The data are manipulated internally using DXL and DOM.&lt;br /&gt;\t\t&lt;br /&gt;This class has no objection if you want to also manipulate the other items of the document, e.g. by using the DOMElement property to get the node representing the design element, then using the DOM to locate other items and attributes.&lt;br /&gt;\t\t&lt;br /&gt;However, please use this class and FileItem for manipulation of base-64 encoded file data items. ","inlinecomment":" \t &apos; Represents a design element of the file-resource type or a relative, such as stylesheet or xpage. \n\t\t\nThe data are manipulated internally using DXL and DOM.\n\t\t\nThis class has no objection if you want to also manipulate the other items of the document, e.g. by using the DOMElement property to get the node representing the design element, then using the DOM to locate other items and attributes.\n\t\t\nHowever, please use this class and FileItem for manipulation of base-64 encoded file data items. ","codesamplehtml":"", "methods":[{"label":"GetFileItem","comment":"Retrieve the FileItem object associated with a CD-record item.\n\t\t\t\nAn object will be returned even if the item doesn&amp;apos;t exist, which you can use to create the item via UpdateFile method.\n\t\t\t\nUse this only for items other than the default $FileData item, which you can handle via ReadFileData and UpdateFileData methods.","valuetype":"FileItem","filenamebase":"GetFileItem_Method","fqnprefix":"VSID.FileResource","qn":"GetFileItem","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(itemname As FileItem)","signature":"Public Function GetFileItem(itemname As FileItem) As FileItem","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Retrieve the FileItem object associated with a CD-record item.&lt;br /&gt;\t\t\t&lt;br /&gt;An object will be returned even if the item doesn&amp;apos;t exist, which you can use to create the item via UpdateFile method.&lt;br /&gt;\t\t\t&lt;br /&gt;Use this only for items other than the default $FileData item, which you can handle via ReadFileData and UpdateFileData methods.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Retrieve the FileItem object associated with a CD-record item.&lt;br /&gt;\t\t\t&lt;br /&gt;An object will be returned even if the item doesn&amp;apos;t exist, which you can use to create the item via UpdateFile method.&lt;br /&gt;\t\t\t&lt;br /&gt;Use this only for items other than the default $FileData item, which you can handle via ReadFileData and UpdateFileData methods.","inlinecomment":" \t &apos; Retrieve the FileItem object associated with a CD-record item.\n\t\t\t\nAn object will be returned even if the item doesn&amp;apos;t exist, which you can use to create the item via UpdateFile method.\n\t\t\t\nUse this only for items other than the default $FileData item, which you can handle via ReadFileData and UpdateFileData methods.","parentclassname":"FileResource","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"itemname","comment":"Name of the FileItem to retrieve","valuetype":"FileItem","filenamebase":"itemname_ValuedElement","fqnprefix":"VSIDFileResourceGetFileItem","qn":"itemname","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the FileItem to retrieve&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the FileItem to retrieve","inlinecomment":" \t &apos; Name of the FileItem to retrieve"}]},{"label":"HasItem","comment":"Determine whether there&amp;apos;s an item element in the note DXL with a given item name.\n\t\t\t\nNote that the presence of an item doesn&amp;apos;t guarantee it&amp;apos;s formatted as a file CD record.","valuetype":"Boolean","filenamebase":"HasItem_Method","fqnprefix":"VSID.FileResource","qn":"HasItem","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(itemName As String)","signature":"Public Function HasItem(itemName As String) As Boolean","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Determine whether there&amp;apos;s an item element in the note DXL with a given item name.&lt;br /&gt;\t\t\t&lt;br /&gt;Note that the presence of an item doesn&amp;apos;t guarantee it&amp;apos;s formatted as a file CD record.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Determine whether there&amp;apos;s an item element in the note DXL with a given item name.&lt;br /&gt;\t\t\t&lt;br /&gt;Note that the presence of an item doesn&amp;apos;t guarantee it&amp;apos;s formatted as a file CD record.","inlinecomment":" \t &apos; Determine whether there&amp;apos;s an item element in the note DXL with a given item name.\n\t\t\t\nNote that the presence of an item doesn&amp;apos;t guarantee it&amp;apos;s formatted as a file CD record.","parentclassname":"FileResource","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"itemName","comment":"Name of the item for which to check. ","valuetype":"String","filenamebase":"itemName_ValuedElement","fqnprefix":"VSIDFileResourceHasItem","qn":"itemName","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the item for which to check. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the item for which to check. ","inlinecomment":" \t &apos; Name of the item for which to check. "}]},{"label":"Save","comment":"Save changes to disk by importing the (presumably modified) DOM tree.","valuetype":"Boolean","filenamebase":"Save_Method","fqnprefix":"VSID.FileResource","qn":"Save","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Function Save() As Boolean","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Save changes to disk by importing the (presumably modified) DOM tree.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Save changes to disk by importing the (presumably modified) DOM tree.","inlinecomment":" \t &apos; Save changes to disk by importing the (presumably modified) DOM tree.","parentclassname":"FileResource","codesamplehtml":"", "signatureelements":["Public","Function"]},{"label":"DOMElement","comment":"Element node representing the design element.","valuetype":"NotesDOMElementNode","filenamebase":"DOMElement_Method","fqnprefix":"VSID.FileResource","qn":"Get.DOMElement","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get DOMElement As NotesDOMElementNode","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Element node representing the design element.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Element node representing the design element.","inlinecomment":" \t &apos; Element node representing the design element.","parentclassname":"FileResource","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"DOMParser","comment":"DOM parser containing this design element description.","valuetype":"NotesDOMParser","filenamebase":"DOMParser_Method","fqnprefix":"VSID.FileResource","qn":"Get.DOMParser","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get DOMParser As NotesDOMParser","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;DOM parser containing this design element description.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"DOM parser containing this design element description.","inlinecomment":" \t &apos; DOM parser containing this design element description.","parentclassname":"FileResource","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"MimeCharSet","comment":"Use this to read the $MimeCharSet item and discover what character set was used to encode the text file data (if it is text). \n\t\t\t\nNote some design elements don&amp;apos;t have this because it&amp;apos;s assumed based on the design element type.","valuetype":"String","filenamebase":"MimeCharSet_Method","fqnprefix":"VSID.FileResource","qn":"Get.MimeCharSet","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get MimeCharSet As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Use this to read the $MimeCharSet item and discover what character set was used to encode the text file data (if it is text). &lt;br /&gt;\t\t\t&lt;br /&gt;Note some design elements don&amp;apos;t have this because it&amp;apos;s assumed based on the design element type.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Use this to read the $MimeCharSet item and discover what character set was used to encode the text file data (if it is text). &lt;br /&gt;\t\t\t&lt;br /&gt;Note some design elements don&amp;apos;t have this because it&amp;apos;s assumed based on the design element type.","inlinecomment":" \t &apos; Use this to read the $MimeCharSet item and discover what character set was used to encode the text file data (if it is text). \n\t\t\t\nNote some design elements don&amp;apos;t have this because it&amp;apos;s assumed based on the design element type.","parentclassname":"FileResource","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"Delete","comment":"Destructor","valuetype":"","filenamebase":"Delete_Method","fqnprefix":"VSID.FileResource","qn":"Delete","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub Delete()","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Destructor&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Destructor","inlinecomment":" \t &apos; Destructor","parentclassname":"FileResource","codesamplehtml":"", "signatureelements":["Public","Sub"]},{"label":"DeleteItem","comment":"Delete an item with a specified name from the note data.","valuetype":"","filenamebase":"DeleteItem_Method","fqnprefix":"VSID.FileResource","qn":"DeleteItem","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(itemname As String)","signature":"Public Sub DeleteItem(itemname As String)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Delete an item with a specified name from the note data.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Delete an item with a specified name from the note data.","inlinecomment":" \t &apos; Delete an item with a specified name from the note data.","parentclassname":"FileResource","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"itemname","comment":"Name of the item to be deleted","valuetype":"String","filenamebase":"itemname_ValuedElement","fqnprefix":"VSIDFileResourceDeleteItem","qn":"itemname","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the item to be deleted&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the item to be deleted","inlinecomment":" \t &apos; Name of the item to be deleted"}]},{"label":"New","comment":"Create a new FileResource.","valuetype":"","filenamebase":"New_Method","fqnprefix":"VSID.FileResource","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(db As NotesDatabase, elElement As NotesDOMDocumentNode, domp As NotesDOMParser)","signature":"Public Sub New(db As NotesDatabase, elElement As NotesDOMDocumentNode, domp As NotesDOMParser)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Create a new FileResource.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Create a new FileResource.","inlinecomment":" \t &apos; Create a new FileResource.","parentclassname":"FileResource","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"db","comment":"database containing the design element.","valuetype":"NotesDatabase","filenamebase":"db_ValuedElement","fqnprefix":"VSIDFileResourceNew","qn":"db","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;database containing the design element.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"database containing the design element.","inlinecomment":" \t &apos; database containing the design element."},{"label":"elElement","comment":"the DOM element corresponding to the design note (e.g. the &amp;lt;note&amp;gt; element).","valuetype":"NotesDOMDocumentNode","filenamebase":"elElement_ValuedElement","fqnprefix":"VSIDFileResourceNew","qn":"elElement","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;the DOM element corresponding to the design note (e.g. the &amp;lt;note&amp;gt; element).&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"the DOM element corresponding to the design note (e.g. the &amp;lt;note&amp;gt; element).","inlinecomment":" \t &apos; the DOM element corresponding to the design note (e.g. the &amp;lt;note&amp;gt; element)."},{"label":"domp","comment":"The DOM parser object containing elElement.","valuetype":"NotesDOMParser","filenamebase":"domp_ValuedElement","fqnprefix":"VSIDFileResourceNew","qn":"domp","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The DOM parser object containing elElement.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The DOM parser object containing elElement.","inlinecomment":" \t &apos; The DOM parser object containing elElement."}]},{"label":"ReadFileData","comment":"Read the file data from the design note. The caller provides a stream to read into, for ease of streaming directly into a disk file (since you have to open the file before writing to the stream).","valuetype":"","filenamebase":"ReadFileData_Method","fqnprefix":"VSID.FileResource","qn":"ReadFileData","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(stream As NotesStream)","signature":"Public Sub ReadFileData(stream As NotesStream)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Read the file data from the design note. The caller provides a stream to read into, for ease of streaming directly into a disk file (since you have to open the file before writing to the stream).&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Read the file data from the design note. The caller provides a stream to read into, for ease of streaming directly into a disk file (since you have to open the file before writing to the stream).","inlinecomment":" \t &apos; Read the file data from the design note. The caller provides a stream to read into, for ease of streaming directly into a disk file (since you have to open the file before writing to the stream).","parentclassname":"FileResource","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"stream","comment":"Target stream for the file data","valuetype":"NotesStream","filenamebase":"stream_ValuedElement","fqnprefix":"VSIDFileResourceReadFileData","qn":"stream","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Target stream for the file data&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Target stream for the file data","inlinecomment":" \t &apos; Target stream for the file data"}]},{"label":"RegisterFileItem","comment":"For internal use -- lets the FileItem class notify us that it&amp;apos;s referencing our DOM tree so that we can delete the object if we erase the corresponding item element.","valuetype":"","filenamebase":"RegisterFileItem_Method","fqnprefix":"VSID.FileResource","qn":"RegisterFileItem","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(x As FileItem)","signature":"Public Sub RegisterFileItem(x As FileItem)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;For internal use -- lets the FileItem class notify us that it&amp;apos;s referencing our DOM tree so that we can delete the object if we erase the corresponding item element.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"For internal use -- lets the FileItem class notify us that it&amp;apos;s referencing our DOM tree so that we can delete the object if we erase the corresponding item element.","inlinecomment":" \t &apos; For internal use -- lets the FileItem class notify us that it&amp;apos;s referencing our DOM tree so that we can delete the object if we erase the corresponding item element.","parentclassname":"FileResource","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"x","comment":"FileItem objet to be registered. ","valuetype":"FileItem","filenamebase":"x_ValuedElement","fqnprefix":"VSIDFileResourceRegisterFileItem","qn":"x","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;FileItem objet to be registered. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"FileItem objet to be registered. ","inlinecomment":" \t &apos; FileItem objet to be registered. "}]},{"label":"UpdateFileData","comment":"Take a binary data stream (it may contain text but we don&amp;apos;t care) and update the DOM representation of the note to store that as the filedata.\n\t\t\t\nThe data ends up stored in the $FileData item, whether this is represented via descriptive format with a &amp;lt;filedata&amp;gt; element, or in note format with an &amp;lt;item&amp;gt; element. We take our cue from whatever was in the DXL when we loaded it.","valuetype":"","filenamebase":"UpdateFileData_Method","fqnprefix":"VSID.FileResource","qn":"UpdateFileData","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub UpdateFileData()","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Take a binary data stream (it may contain text but we don&amp;apos;t care) and update the DOM representation of the note to store that as the filedata.&lt;br /&gt;\t\t\t&lt;br /&gt;The data ends up stored in the $FileData item, whether this is represented via descriptive format with a &amp;lt;filedata&amp;gt; element, or in note format with an &amp;lt;item&amp;gt; element. We take our cue from whatever was in the DXL when we loaded it.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Take a binary data stream (it may contain text but we don&amp;apos;t care) and update the DOM representation of the note to store that as the filedata.&lt;br /&gt;\t\t\t&lt;br /&gt;The data ends up stored in the $FileData item, whether this is represented via descriptive format with a &amp;lt;filedata&amp;gt; element, or in note format with an &amp;lt;item&amp;gt; element. We take our cue from whatever was in the DXL when we loaded it.","inlinecomment":" \t &apos; Take a binary data stream (it may contain text but we don&amp;apos;t care) and update the DOM representation of the note to store that as the filedata.\n\t\t\t\nThe data ends up stored in the $FileData item, whether this is represented via descriptive format with a &amp;lt;filedata&amp;gt; element, or in note format with an &amp;lt;item&amp;gt; element. We take our cue from whatever was in the DXL when we loaded it.","parentclassname":"FileResource","codesamplehtml":"", "signatureelements":["Public","Sub"]}], "variables":[]}
