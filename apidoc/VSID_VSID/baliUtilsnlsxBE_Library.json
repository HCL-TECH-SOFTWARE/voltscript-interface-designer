{"label":"baliUtils_nlsxBE","comment":"Created Sep 2022 by Devin Olson/USA/PNPHCL\n\tBali Notes Utilities for Notes / Domino clients","valuetype":"","filenamebase":"baliUtilsnlsxBE_Library","fqnprefix":"VSID","qn":"baliUtilsnlsxBE","codesample":"","signaturecode":65536,"instancecode":65536,"description":"","codesamplehtml":"","scriptcreator":"Devin Olson","signature":"Library baliUtils_nlsxBE","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Created Sep 2022 by Devin Olson/USA/PNPHCL&lt;br /&gt;\tBali Notes Utilities for Notes / Domino clients&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Created Sep 2022 by Devin Olson/USA/PNPHCL&lt;br /&gt;\tBali Notes Utilities for Notes / Domino clients","inlinecomment":" \t &apos; Created Sep 2022 by Devin Olson/USA/PNPHCL\n\tBali Notes Utilities for Notes / Domino clients", "methods":[{"label":"copyDocumentHierarchyToDatabase","comment":"Copies a source document to a target database. \n\t\nIf a document has responses, the responses (and their heirarchy as well) will also be copied to the target database. ","valuetype":"StringQueue","filenamebase":"copyDocumentHierarchyToDatabase_Method","fqnprefix":"VSID.baliUtilsnlsxBE","qn":"copyDocumentHierarchyToDatabase","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(source As NotesDocument, target As NotesDatabase, newdoc As NotesDocument)","signature":"Public Function copyDocumentHierarchyToDatabase(source As NotesDocument, target As NotesDatabase, newdoc As NotesDocument) As StringQueue","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Copies a source document to a target database. &lt;br /&gt;\t&lt;br /&gt;If a document has responses, the responses (and their heirarchy as well) will also be copied to the target database. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Copies a source document to a target database. &lt;br /&gt;\t&lt;br /&gt;If a document has responses, the responses (and their heirarchy as well) will also be copied to the target database. ","inlinecomment":" \t &apos; Copies a source document to a target database. \n\t\nIf a document has responses, the responses (and their heirarchy as well) will also be copied to the target database. ","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"Document to be copied to the target database.","valuetype":"NotesDocument","filenamebase":"source_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEcopyDocumentHierarchyToDatabase","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Document to be copied to the target database.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Document to be copied to the target database.","inlinecomment":" \t &apos; Document to be copied to the target database."},{"label":"target","comment":"Database to which the document (and it&amp;apos;s descendants) will be copied.","valuetype":"NotesDatabase","filenamebase":"target_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEcopyDocumentHierarchyToDatabase","qn":"target","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Database to which the document (and it&amp;apos;s descendants) will be copied.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Database to which the document (and it&amp;apos;s descendants) will be copied.","inlinecomment":" \t &apos; Database to which the document (and it&amp;apos;s descendants) will be copied."},{"label":"newdoc","comment":"{!!OUTBOUND!!} \tNew document in the target database","valuetype":"NotesDocument","filenamebase":"newdoc_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEcopyDocumentHierarchyToDatabase","qn":"newdoc","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;{!!OUTBOUND!!} \tNew document in the target database&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"{!!OUTBOUND!!} \tNew document in the target database","inlinecomment":" \t &apos; {!!OUTBOUND!!} \tNew document in the target database"}]},{"label":"getACLlevel","comment":"Gets the string representation of an ACL level integer ","valuetype":"String","filenamebase":"getACLlevel_Method","fqnprefix":"VSID.baliUtilsnlsxBE","qn":"getACLlevel","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(acl As Integer)","signature":"Public Function getACLlevel(acl As Integer) As String","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets the string representation of an ACL level integer &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets the string representation of an ACL level integer ","inlinecomment":" \t &apos; Gets the string representation of an ACL level integer ","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"acl","comment":"ACL Level to check. ","valuetype":"Integer","filenamebase":"acl_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEgetACLlevel","qn":"acl","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;ACL Level to check. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"ACL Level to check. ","inlinecomment":" \t &apos; ACL Level to check. "}]},{"label":"getAncestorByForm","comment":"Gets an Ancestor document matching the specified form. \n\t\nConditionally walks a document&amp;apos;s ancestry to find a document matching the requested form.","valuetype":"NotesDocument","filenamebase":"getAncestorByForm_Method","fqnprefix":"VSID.baliUtilsnlsxBE","qn":"getAncestorByForm","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(source As NotesDocument, form As String, allowself As Boolean)","signature":"Public Function getAncestorByForm(source As NotesDocument, form As String, allowself As Boolean) As NotesDocument","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets an Ancestor document matching the specified form. &lt;br /&gt;\t&lt;br /&gt;Conditionally walks a document&amp;apos;s ancestry to find a document matching the requested form.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets an Ancestor document matching the specified form. &lt;br /&gt;\t&lt;br /&gt;Conditionally walks a document&amp;apos;s ancestry to find a document matching the requested form.","inlinecomment":" \t &apos; Gets an Ancestor document matching the specified form. \n\t\nConditionally walks a document&amp;apos;s ancestry to find a document matching the requested form.","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"NotesDocument object for which to retrieve the ancestor document.","valuetype":"NotesDocument","filenamebase":"source_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEgetAncestorByForm","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;NotesDocument object for which to retrieve the ancestor document.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"NotesDocument object for which to retrieve the ancestor document.","inlinecomment":" \t &apos; NotesDocument object for which to retrieve the ancestor document."},{"label":"form","comment":"Name of the form for which to search in the document&amp;apos;s ancestry","valuetype":"String","filenamebase":"form_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEgetAncestorByForm","qn":"form","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the form for which to search in the document&amp;apos;s ancestry&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the form for which to search in the document&amp;apos;s ancestry","inlinecomment":" \t &apos; Name of the form for which to search in the document&amp;apos;s ancestry"},{"label":"allowself","comment":"Flag indicating the source document should be returned if it matches the form.","valuetype":"Boolean","filenamebase":"allowself_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEgetAncestorByForm","qn":"allowself","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating the source document should be returned if it matches the form.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating the source document should be returned if it matches the form.","inlinecomment":" \t &apos; Flag indicating the source document should be returned if it matches the form."}]},{"label":"getCollectionUNIDs","comment":"Gets the UniversalIDs from a NotesDocumentCollection.","valuetype":"StringQueue","filenamebase":"getCollectionUNIDs_Method","fqnprefix":"VSID.baliUtilsnlsxBE","qn":"getCollectionUNIDs","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(col As NotesDocumentCollection)","signature":"Public Function getCollectionUNIDs(col As NotesDocumentCollection) As StringQueue","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets the UniversalIDs from a NotesDocumentCollection.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets the UniversalIDs from a NotesDocumentCollection.","inlinecomment":" \t &apos; Gets the UniversalIDs from a NotesDocumentCollection.","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"col","comment":"Collection from which to get the Universal IDs","valuetype":"NotesDocumentCollection","filenamebase":"col_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEgetCollectionUNIDs","qn":"col","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Collection from which to get the Universal IDs&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Collection from which to get the Universal IDs","inlinecomment":" \t &apos; Collection from which to get the Universal IDs"}]},{"label":"getConfigUNID","comment":"Gets the UNID of the DbConfig document for a given source form.\n\t\n\tOnly 1 DbConfig document may exist for a specified form.","valuetype":"String","filenamebase":"getConfigUNID_Method","fqnprefix":"VSID.baliUtilsnlsxBE","qn":"getConfigUNID","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(source As String, clearCache As Boolean)","signature":"Public Function getConfigUNID(source As String, clearCache As Boolean) As String","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets the UNID of the DbConfig document for a given source form.&lt;br /&gt;\t&lt;br /&gt;\tOnly 1 DbConfig document may exist for a specified form.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets the UNID of the DbConfig document for a given source form.&lt;br /&gt;\t&lt;br /&gt;\tOnly 1 DbConfig document may exist for a specified form.","inlinecomment":" \t &apos; Gets the UNID of the DbConfig document for a given source form.\n\t\n\tOnly 1 DbConfig document may exist for a specified form.","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"Form of the specified DbConfig document.","valuetype":"String","filenamebase":"source_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEgetConfigUNID","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Form of the specified DbConfig document.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Form of the specified DbConfig document.","inlinecomment":" \t &apos; Form of the specified DbConfig document.", "attributes":["ByVal"]},{"label":"clearCache","comment":"Flag indicating if cached information should be cleared.","valuetype":"Boolean","filenamebase":"clearCache_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEgetConfigUNID","qn":"clearCache","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if cached information should be cleared.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if cached information should be cleared.","inlinecomment":" \t &apos; Flag indicating if cached information should be cleared."}]},{"label":"getDbConfigDoc","comment":"Gets the DbConfig document for the specified Form.\n\t\nOnly 1 DbConfig document may exist for a specified form.","valuetype":"NotesDocument","filenamebase":"getDbConfigDoc_Method","fqnprefix":"VSID.baliUtilsnlsxBE","qn":"getDbConfigDoc","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(source As String, clearCache As Boolean)","signature":"Public Function getDbConfigDoc(source As String, clearCache As Boolean) As NotesDocument","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets the DbConfig document for the specified Form.&lt;br /&gt;\t&lt;br /&gt;Only 1 DbConfig document may exist for a specified form.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets the DbConfig document for the specified Form.&lt;br /&gt;\t&lt;br /&gt;Only 1 DbConfig document may exist for a specified form.","inlinecomment":" \t &apos; Gets the DbConfig document for the specified Form.\n\t\nOnly 1 DbConfig document may exist for a specified form.","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"Form for the specified DbConfig document.","valuetype":"String","filenamebase":"source_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEgetDbConfigDoc","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Form for the specified DbConfig document.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Form for the specified DbConfig document.","inlinecomment":" \t &apos; Form for the specified DbConfig document."},{"label":"clearCache","comment":"Flag indicating if the cached information should be cleared.","valuetype":"Boolean","filenamebase":"clearCache_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEgetDbConfigDoc","qn":"clearCache","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the cached information should be cleared.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the cached information should be cleared.","inlinecomment":" \t &apos; Flag indicating if the cached information should be cleared."}]},{"label":"getDocumentByUNID","comment":"Gets the document from the current database for the specified UniversalID.","valuetype":"NotesDocument","filenamebase":"getDocumentByUNID_Method","fqnprefix":"VSID.baliUtilsnlsxBE","qn":"getDocumentByUNID","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(universalID As String)","signature":"Public Function getDocumentByUNID(universalID As String) As NotesDocument","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets the document from the current database for the specified UniversalID.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets the document from the current database for the specified UniversalID.","inlinecomment":" \t &apos; Gets the document from the current database for the specified UniversalID.","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"universalID","comment":"UniversalID of the target document. ","valuetype":"String","filenamebase":"universalID_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEgetDocumentByUNID","qn":"universalID","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;UniversalID of the target document. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"UniversalID of the target document. ","inlinecomment":" \t &apos; UniversalID of the target document. ", "attributes":["ByVal"]}]},{"label":"getEmptyDocumentCollection","comment":"Creates an empty NotesDocumentCollection from the source database.","valuetype":"NotesDocumentCollection","filenamebase":"getEmptyDocumentCollection_Method","fqnprefix":"VSID.baliUtilsnlsxBE","qn":"getEmptyDocumentCollection","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(source As NotesDatabase)","signature":"Public Function getEmptyDocumentCollection(source As NotesDatabase) As NotesDocumentCollection","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Creates an empty NotesDocumentCollection from the source database.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Creates an empty NotesDocumentCollection from the source database.","inlinecomment":" \t &apos; Creates an empty NotesDocumentCollection from the source database.","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"NotesDatabase from within which to create the empty document collection.","valuetype":"NotesDatabase","filenamebase":"source_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEgetEmptyDocumentCollection","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;NotesDatabase from within which to create the empty document collection.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"NotesDatabase from within which to create the empty document collection.","inlinecomment":" \t &apos; NotesDatabase from within which to create the empty document collection."}]},{"label":"getEnvarName","comment":"Constructs a valid Envirionment Variable Name from a given source string.","valuetype":"String","filenamebase":"getEnvarName_Method","fqnprefix":"VSID.baliUtilsnlsxBE","qn":"getEnvarName","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(source As String, clearCache As Boolean)","signature":"Public Function getEnvarName(source As String, clearCache As Boolean) As String","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructs a valid Envirionment Variable Name from a given source string.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructs a valid Envirionment Variable Name from a given source string.","inlinecomment":" \t &apos; Constructs a valid Envirionment Variable Name from a given source string.","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"String from which to construct the Environment Variable Name.","valuetype":"String","filenamebase":"source_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEgetEnvarName","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;String from which to construct the Environment Variable Name.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"String from which to construct the Environment Variable Name.","inlinecomment":" \t &apos; String from which to construct the Environment Variable Name."},{"label":"clearCache","comment":"Flag indicating if cached information should be cleared.","valuetype":"Boolean","filenamebase":"clearCache_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEgetEnvarName","qn":"clearCache","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if cached information should be cleared.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if cached information should be cleared.","inlinecomment":" \t &apos; Flag indicating if cached information should be cleared."}]},{"label":"getHashedValue","comment":"Hashes a source String.\n\t\n\tUses the @Password function to perform the hash","valuetype":"String","filenamebase":"getHashedValue_Method","fqnprefix":"VSID.baliUtilsnlsxBE","qn":"getHashedValue","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(source As String, clearCache As Boolean)","signature":"Public Function getHashedValue(source As String, clearCache As Boolean) As String","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Hashes a source String.&lt;br /&gt;\t&lt;br /&gt;\tUses the @Password function to perform the hash&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Hashes a source String.&lt;br /&gt;\t&lt;br /&gt;\tUses the @Password function to perform the hash","inlinecomment":" \t &apos; Hashes a source String.\n\t\n\tUses the @Password function to perform the hash","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"String to Hash.","valuetype":"String","filenamebase":"source_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEgetHashedValue","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;String to Hash.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"String to Hash.","inlinecomment":" \t &apos; String to Hash."},{"label":"clearCache","comment":"Flag indicating if cached information should be cleared.","valuetype":"Boolean","filenamebase":"clearCache_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEgetHashedValue","qn":"clearCache","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if cached information should be cleared.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if cached information should be cleared.","inlinecomment":" \t &apos; Flag indicating if cached information should be cleared."}]},{"label":"getItemValueText","comment":"Gets the Item Value Text for a Notes Item.\n\t \n\tMulti-Value Text Items will conditionally concatenated with the specified delimiter","valuetype":"String","filenamebase":"getItemValueText_Method","fqnprefix":"VSID.baliUtilsnlsxBE","qn":"getItemValueText","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(source As NotesDocument, itemname As String, delimiter As String, htreplace As String)","signature":"Public Function getItemValueText(source As NotesDocument, itemname As String, delimiter As String, htreplace As String) As String","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets the Item Value Text for a Notes Item.&lt;br /&gt;\t &lt;br /&gt;\tMulti-Value Text Items will conditionally concatenated with the specified delimiter&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets the Item Value Text for a Notes Item.&lt;br /&gt;\t &lt;br /&gt;\tMulti-Value Text Items will conditionally concatenated with the specified delimiter","inlinecomment":" \t &apos; Gets the Item Value Text for a Notes Item.\n\t \n\tMulti-Value Text Items will conditionally concatenated with the specified delimiter","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"NotesDocument containing the NotesItem","valuetype":"NotesDocument","filenamebase":"source_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEgetItemValueText","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;NotesDocument containing the NotesItem&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"NotesDocument containing the NotesItem","inlinecomment":" \t &apos; NotesDocument containing the NotesItem"},{"label":"itemname","comment":"Name of the NotesItem from which to retrieve the Text","valuetype":"String","filenamebase":"itemname_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEgetItemValueText","qn":"itemname","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the NotesItem from which to retrieve the Text&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the NotesItem from which to retrieve the Text","inlinecomment":" \t &apos; Name of the NotesItem from which to retrieve the Text"},{"label":"delimiter","comment":"Delimiter to use for concatenating multi-value text items.","valuetype":"String","filenamebase":"delimiter_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEgetItemValueText","qn":"delimiter","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Delimiter to use for concatenating multi-value text items.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Delimiter to use for concatenating multi-value text items.","inlinecomment":" \t &apos; Delimiter to use for concatenating multi-value text items."},{"label":"htreplace","comment":"String used to replace horizontal tabs in RichText content.","valuetype":"String","filenamebase":"htreplace_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEgetItemValueText","qn":"htreplace","argumentindex":4,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;String used to replace horizontal tabs in RichText content.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"String used to replace horizontal tabs in RichText content.","inlinecomment":" \t &apos; String used to replace horizontal tabs in RichText content."}]},{"label":"getOpenDatabase","comment":"Attempts to open a database.  ","valuetype":"NotesDatabase","filenamebase":"getOpenDatabase_Method","fqnprefix":"VSID.baliUtilsnlsxBE","qn":"getOpenDatabase","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(server As String, filepath As String)","signature":"Public Function getOpenDatabase(server As String, filepath As String) As NotesDatabase","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Attempts to open a database.  &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Attempts to open a database.  ","inlinecomment":" \t &apos; Attempts to open a database.  ","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"server","comment":"Name of server containing the database.","valuetype":"String","filenamebase":"server_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEgetOpenDatabase","qn":"server","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of server containing the database.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of server containing the database.","inlinecomment":" \t &apos; Name of server containing the database."},{"label":"filepath","comment":"Filepath for the database to open.","valuetype":"String","filenamebase":"filepath_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEgetOpenDatabase","qn":"filepath","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Filepath for the database to open.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Filepath for the database to open.","inlinecomment":" \t &apos; Filepath for the database to open."}]},{"label":"getParentDocument","comment":"Gets the Parent document (if it exists) for a document. ","valuetype":"NotesDocument","filenamebase":"getParentDocument_Method","fqnprefix":"VSID.baliUtilsnlsxBE","qn":"getParentDocument","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(source As NotesDocument)","signature":"Public Function getParentDocument(source As NotesDocument) As NotesDocument","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets the Parent document (if it exists) for a document. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets the Parent document (if it exists) for a document. ","inlinecomment":" \t &apos; Gets the Parent document (if it exists) for a document. ","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"NotesDocument for which to get the Parent ","valuetype":"NotesDocument","filenamebase":"source_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEgetParentDocument","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;NotesDocument for which to get the Parent &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"NotesDocument for which to get the Parent ","inlinecomment":" \t &apos; NotesDocument for which to get the Parent "}]},{"label":"getViewUNIDs","comment":"Gets the UniversalIDs of all documents in a view, in view order.\n\t\nNOTE: If a document appears in a view multiple times then it&amp;apos;s associated UniversalID will be in the result multiple times as well.  ","valuetype":"StringQueue","filenamebase":"getViewUNIDs_Method","fqnprefix":"VSID.baliUtilsnlsxBE","qn":"getViewUNIDs","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(source As NotesView)","signature":"Public Function getViewUNIDs(source As NotesView) As StringQueue","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets the UniversalIDs of all documents in a view, in view order.&lt;br /&gt;\t&lt;br /&gt;NOTE: If a document appears in a view multiple times then it&amp;apos;s associated UniversalID will be in the result multiple times as well.  &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets the UniversalIDs of all documents in a view, in view order.&lt;br /&gt;\t&lt;br /&gt;NOTE: If a document appears in a view multiple times then it&amp;apos;s associated UniversalID will be in the result multiple times as well.  ","inlinecomment":" \t &apos; Gets the UniversalIDs of all documents in a view, in view order.\n\t\nNOTE: If a document appears in a view multiple times then it&amp;apos;s associated UniversalID will be in the result multiple times as well.  ","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"View from which to get all document UniversalIDs ","valuetype":"NotesView","filenamebase":"source_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEgetViewUNIDs","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;View from which to get all document UniversalIDs &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"View from which to get all document UniversalIDs ","inlinecomment":" \t &apos; View from which to get all document UniversalIDs "}]},{"label":"isPlatformWindows","comment":"Indicates if the current platform is a Windows OS. ","valuetype":"Boolean","filenamebase":"isPlatformWindows_Method","fqnprefix":"VSID.baliUtilsnlsxBE","qn":"isPlatformWindows","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Function isPlatformWindows() As Boolean","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Indicates if the current platform is a Windows OS. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Indicates if the current platform is a Windows OS. ","inlinecomment":" \t &apos; Indicates if the current platform is a Windows OS. ","codesamplehtml":"", "signatureelements":["Public","Function"]},{"label":"safeEvaluate","comment":"valuates a formula and returns the result. ","valuetype":"Variant","filenamebase":"safeEvaluate_Method","fqnprefix":"VSID.baliUtilsnlsxBE","qn":"safeEvaluate","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(formula As String, context As Variant, failValue As Variant)","signature":"Public Function safeEvaluate(formula As String, context As Variant, failValue As Variant) As Variant","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;valuates a formula and returns the result. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"valuates a formula and returns the result. ","inlinecomment":" \t &apos; valuates a formula and returns the result. ","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"formula","comment":"Formula to evaluate","valuetype":"String","filenamebase":"formula_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEsafeEvaluate","qn":"formula","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Formula to evaluate&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Formula to evaluate","inlinecomment":" \t &apos; Formula to evaluate"},{"label":"context","comment":"Context object for which the formula should be run","valuetype":"Variant","filenamebase":"context_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEsafeEvaluate","qn":"context","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Context object for which the formula should be run&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Context object for which the formula should be run","inlinecomment":" \t &apos; Context object for which the formula should be run"},{"label":"failValue","comment":"Value to return in the event of a failure.","valuetype":"Variant","filenamebase":"failValue_ValuedElement","fqnprefix":"VSIDbaliUtilsnlsxBEsafeEvaluate","qn":"failValue","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Value to return in the event of a failure.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Value to return in the event of a failure.","inlinecomment":" \t &apos; Value to return in the event of a failure."}]},{"label":"getCurrentDb","comment":"Gets a handle to the current database","valuetype":"NotesDatabase","filenamebase":"getCurrentDb_Method","fqnprefix":"VSID.baliUtilsnlsxBE","qn":"getCurrentDb","codesample":"","signaturecode":10304,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Static Public Function getCurrentDb() As NotesDatabase","modifiers":"Static Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets a handle to the current database&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets a handle to the current database","inlinecomment":" \t &apos; Gets a handle to the current database","codesamplehtml":"", "attributes":["Static"], "signatureelements":["Static","Public","Function"]},{"label":"getCurrentSession","comment":"handle to the current NotesSession","valuetype":"NotesSession","filenamebase":"getCurrentSession_Method","fqnprefix":"VSID.baliUtilsnlsxBE","qn":"getCurrentSession","codesample":"","signaturecode":10304,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Static Public Function getCurrentSession() As NotesSession","modifiers":"Static Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;handle to the current NotesSession&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"handle to the current NotesSession","inlinecomment":" \t &apos; handle to the current NotesSession","codesamplehtml":"", "attributes":["Static"], "signatureelements":["Static","Public","Function"]}]}
